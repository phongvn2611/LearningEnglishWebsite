/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2021 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import './styles';
import type { IFileBrowser, IFileBrowserCallBackData, IFileBrowserOptions, IFileBrowserState, IFileBrowserItem, IFileBrowserDataProvider, IStorage, IDictionary, IUploader, IDialog, CanUndef } from '../../types/';
import { ViewWithToolbar } from '../../core/view/view-with-toolbar';
import './config';
import { ObserveObject } from '../../core/events/';
import { FileBrowserFiles, FileBrowserTree } from './ui';
export declare class FileBrowser extends ViewWithToolbar implements IFileBrowser {
    /** @override */
    className(): string;
    private loader;
    private browser;
    private status_line;
    tree: FileBrowserTree;
    files: FileBrowserFiles;
    state: IFileBrowserState & ObserveObject;
    dataProvider: IFileBrowserDataProvider;
    loadItems(): Promise<any>;
    loadTree(): Promise<any>;
    deleteFile(name: string, source: string): Promise<void>;
    private onSelect;
    private errorHandler;
    OPTIONS: IFileBrowserOptions;
    dialog: IDialog;
    /**
     * Container for set/get value
     */
    storage: IStorage;
    uploader: IUploader;
    get isOpened(): boolean;
    /**
     * It displays a message in the status bar of filebrowser
     *
     * @param success - true It will be shown a message light . If no option is specified ,
     * ÃŸan error will be shown the red
     * @example
     * ```javascript
     * parent.filebrowser.status('There was an error uploading file', false);
     * ```
     */
    status(message: string | Error, success?: boolean): void;
    /**
     * Close dialog
     */
    close: () => void;
    /**
     * It opens a web browser window
     *
     * @param callback - The function that will be called after the file selection in the browser
     * @param onlyImages - Show only images
     * @example
     * ```javascript
     * var fb = new Jodit.modules.FileBrowser(parent);
     * fb.open(function (data) {
     *     var i;
     *     for (i = 0;i < data.files.length; i += 1) {
     *         parent.s.insertImage(data.baseurl + data.files[i]);
     *     }
     * });
     * ```
     */
    open(callback?: CanUndef<(_: IFileBrowserCallBackData) => void>, onlyImages?: boolean): Promise<void>;
    elementsMap: IDictionary<{
        elm: HTMLElement;
        item: IFileBrowserItem;
    }>;
    private initUploader;
    constructor(options?: IFileBrowserOptions);
    destruct(): void;
}
