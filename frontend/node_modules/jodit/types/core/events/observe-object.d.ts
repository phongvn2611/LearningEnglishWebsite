/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2021 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import type { CallbackFunction, IDictionary } from '../../types';
export declare class ObserveObject {
    private readonly __data;
    private __prefix;
    private readonly __onEvents;
    protected constructor(data: IDictionary, prefix?: string[], onEvents?: IDictionary<CallbackFunction[]>);
    valueOf(): any;
    toString(): string;
    /**
     * Add listener on some changes
     */
    on(event: string | string[], callback: CallbackFunction): this;
    private __lockEvent;
    fire(event: string | string[], ...attr: any[]): void;
    static create<T, K extends T & ObserveObject = T & ObserveObject>(data: T, prefix?: string[]): K;
}
