/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2021 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import './placeholder.less';
import type { IJodit } from '../../types';
import { Plugin } from '../../core/plugin';
/**
 * Show placeholder
 */
declare module '../../config' {
    interface Config {
        /**
         * Show placeholder
         * @example
         * ```javascript
         * var editor = new Jodit('#editor', {
         *    showPlaceholder: false
         * });
         * ```
         */
        showPlaceholder: boolean;
        /**
         * Use a placeholder from original input field, if it was set
         * @example
         * ```javascript
         * //<textarea id="editor" placeholder="start typing text ..." cols="30" rows="10"></textarea>
         * var editor = new Jodit('#editor', {
         *    useInputsPlaceholder: true
         * });
         * ```
         */
        useInputsPlaceholder: boolean;
        /**
         * Default placeholder
         * @example
         * ```javascript
         * var editor = new Jodit('#editor', {
         *    placeholder: 'start typing text ...'
         * });
         * ```
         */
        placeholder: string;
    }
}
/**
 * Check if root node is empty
 */
export declare function isEditorEmpty(root: HTMLElement): boolean;
/**
 * Show placeholder inside empty editor
 */
export declare class placeholder extends Plugin {
    private placeholderElm;
    protected afterInit(editor: IJodit): void;
    private addNativeListeners;
    private addEvents;
    private show;
    private hide;
    private toggle;
    protected beforeDestruct(jodit: IJodit): void;
}
