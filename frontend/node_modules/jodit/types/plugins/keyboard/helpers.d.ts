/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2021 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import type { IJodit, Nullable } from '../../types';
export declare function getSibling(node: Node, backspace: boolean): Nullable<Node>;
/**
 * Returns the nearest non-empty neighbor
 */
export declare function findNotEmptyNeighbor(node: Node, left: boolean, root: HTMLElement): Nullable<Node>;
/**
 * Returns the nearest non-empty sibling
 */
export declare function findNotEmptySibling(node: Node, backspace: boolean): Nullable<Node>;
/**
 * Finds the nearest neighbor that would be in the maximum nesting depth.
 * Ie if neighbor `<DIV><SPAN>Text` then return Text node.
 */
export declare function findMostNestedNeighbor(node: Node, right: boolean, root: HTMLElement, onlyInlide?: boolean): Nullable<Node>;
/**
 * Moves the fake node inside the adjacent element if it lies next to it but not inside.
 * When the cursor is positioned in its place, it must be inside the element and not outside its border.
 */
export declare function normalizeCursorPosition(jodit: IJodit, node: Node, backspace: boolean): void;
