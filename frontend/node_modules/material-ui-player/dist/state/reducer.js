"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = require("./types");
var reducer = function (state, action) {
    switch (action.type) {
        case types_1.ActionType.PAUSE:
            return __assign(__assign({}, state), { playing: false });
        case types_1.ActionType.UPDATE_TIME:
            return __assign(__assign({}, state), { time: action.payload.time, fade: action.payload.fade || 0 });
        case types_1.ActionType.UPDATE_URL:
            return __assign(__assign({}, state), { url: action.payload });
        case types_1.ActionType.PLAY:
            return __assign(__assign({}, state), { playing: true, playerTimeout: action.payload });
        case types_1.ActionType.UPDATE_KEY:
            return __assign(__assign({}, state), { key: action.payload.key, src: action.payload.src });
        case types_1.ActionType.UPDATE_SIZE:
            return __assign(__assign({}, state), { width: action.payload.width, height: action.payload.height });
        case types_1.ActionType.RELOAD:
            return __assign({}, action.payload);
        default:
            return state;
    }
};
exports.default = reducer;
//# sourceMappingURL=reducer.js.map