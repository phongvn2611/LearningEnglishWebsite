;
var Player = /** @class */ (function () {
    function Player(ref, settings) {
        this.ref = ref;
        this.onended = settings.onended;
        this.autoplay = settings.autoplay;
        this.loop = settings.loop;
    }
    Object.defineProperty(Player.prototype, "duration", {
        get: function () {
            var _a, _b;
            return ((_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.duration) || 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "speed", {
        get: function () {
            var _a, _b;
            return ((_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.playbackRate) || 0;
        },
        set: function (value) {
            var _a;
            if (!((_a = this.ref) === null || _a === void 0 ? void 0 : _a.current))
                return;
            this.ref.current.playbackRate = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "currentTime", {
        get: function () {
            var _a, _b;
            return ((_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.currentTime) || 0;
        },
        set: function (value) {
            var _a;
            if (!((_a = this.ref) === null || _a === void 0 ? void 0 : _a.current))
                return;
            this.ref.current.currentTime = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "volume", {
        get: function () {
            var _a, _b;
            return ((_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.volume) || 0;
        },
        set: function (value) {
            var _a;
            if (!((_a = this.ref) === null || _a === void 0 ? void 0 : _a.current))
                return;
            this.ref.current.volume = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "src", {
        get: function () {
            var _a, _b;
            return ((_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.src) || '';
        },
        set: function (value) {
            var _a;
            if (!((_a = this.ref) === null || _a === void 0 ? void 0 : _a.current))
                return;
            this.ref.current.src = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "muted", {
        get: function () {
            var _a, _b;
            return ((_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.muted) || false;
        },
        set: function (value) {
            var _a;
            if (!((_a = this.ref) === null || _a === void 0 ? void 0 : _a.current))
                return;
            this.ref.current.muted = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "paused", {
        get: function () {
            var _a, _b;
            return ((_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.paused) || true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "loop", {
        get: function () {
            var _a, _b;
            return ((_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.loop) || false;
        },
        set: function (value) {
            var _a;
            if (!((_a = this.ref) === null || _a === void 0 ? void 0 : _a.current))
                return;
            this.ref.current.loop = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "autoplay", {
        get: function () {
            var _a, _b;
            return ((_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.autoplay) || false;
        },
        set: function (value) {
            var _a;
            if (!((_a = this.ref) === null || _a === void 0 ? void 0 : _a.current))
                return;
            this.ref.current.autoplay = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "onMetadata", {
        set: function (callback) {
            var _a;
            if (!((_a = this.ref) === null || _a === void 0 ? void 0 : _a.current))
                return;
            this.ref.current.onloadedmetadata = callback;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Player.prototype, "onended", {
        set: function (callback) {
            var _a;
            if (!((_a = this.ref) === null || _a === void 0 ? void 0 : _a.current))
                return;
            this.ref.current.onended = callback;
        },
        enumerable: false,
        configurable: true
    });
    Player.prototype.play = function () {
        var _a, _b;
        (_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.play();
    };
    Player.prototype.pause = function () {
        var _a, _b;
        (_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.pause();
    };
    Player.prototype.load = function () {
        var _a, _b;
        (_b = (_a = this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.load();
    };
    return Player;
}());
export default Player;
//# sourceMappingURL=player.js.map