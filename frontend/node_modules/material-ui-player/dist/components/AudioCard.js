"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AudioCard = void 0;
var react_1 = __importStar(require("react"));
var core_1 = require("@material-ui/core");
var utils_1 = require("../lib/utils");
var index_1 = require("./index");
var styles_1 = require("@material-ui/core/styles");
var hooks_1 = require("../hooks");
var useStyles = styles_1.makeStyles(function (theme) {
    return styles_1.createStyles({
        container: {
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            paddingTop: theme.spacing(1),
            paddingBottom: theme.spacing(1),
            '&:last-child': {
                paddingBottom: theme.spacing(1),
            },
        },
        card: {
            width: '100%',
            backgroundColor: function (props) { return props.background || 'inherit'; }
        },
        audio: {
            display: 'none',
        },
        controls: {
            display: 'flex',
            flexDirection: 'row',
            alignItems: 'center',
        },
    });
});
var getInitialState = function (props) { return ({
    url: '',
    key: Math.random(),
    playing: false,
    time: {
        currentTime: 0,
        duration: 0,
    },
    playerTimeout: null,
    src: props.src,
}); };
var AudioCard = function (props) {
    var player = react_1.useRef(null);
    var _a = hooks_1.useMedia(getInitialState(props)), state = _a.state, pause = _a.pause, setCurrentTime = _a.setCurrentTime, load = _a.load, play = _a.play, stop = _a.stop, setProgress = _a.setProgress;
    var _b = props.onEnded, onEnded = _b === void 0 ? function () { return setCurrentTime(player.current, 0); } : _b, _c = props.onBackwardClick, onBackwardClick = _c === void 0 ? function () { } : _c, _d = props.onForwardClick, onForwardClick = _d === void 0 ? function () { } : _d, _e = props.loop, loop = _e === void 0 ? !!props.loop : _e, _f = props.autoplay, autoplay = _f === void 0 ? !!props.autoplay : _f;
    var classes = useStyles(props);
    var onPlay = react_1.useCallback(function () { return __awaiter(void 0, void 0, void 0, function () {
        var audioUrl;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!!player.current.src) return [3 /*break*/, 2];
                    return [4 /*yield*/, utils_1.getUrl(props.src)];
                case 1:
                    audioUrl = _a.sent();
                    load(player.current, audioUrl);
                    _a.label = 2;
                case 2: return [4 /*yield*/, play(player.current)];
                case 3:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    }); }, [load, play, props.src]);
    react_1.useEffect(function () {
        player.current.autoplay = autoplay;
        player.current.loop = loop;
        player.current.onended = function () {
            pause(player.current);
            onEnded();
        };
    }, [pause, onEnded, autoplay, loop]);
    react_1.useEffect(function () {
        autoplay && onPlay();
    }, [autoplay, onPlay]);
    return (react_1.default.createElement(core_1.Card, { className: classes.card },
        react_1.default.createElement(core_1.CardContent, { className: classes.container },
            react_1.default.createElement(core_1.Grid, { container: true, justifyContent: "center", alignItems: "center" },
                react_1.default.createElement("audio", { ref: player, key: state.key, className: classes.audio }, state.url && react_1.default.createElement("source", { type: utils_1.getMimeType(state.url), src: state.url })),
                react_1.default.createElement(core_1.Grid, { item: true, xs: 12 },
                    react_1.default.createElement(index_1.Progress, { time: state.time, color: props.color, thickness: props.thickness, onProgressClick: function (v) { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, setProgress(player.current, v)];
                                case 1: return [2 /*return*/, _a.sent()];
                            }
                        }); }); } })),
                react_1.default.createElement(core_1.Grid, { item: true, sm: 1, xs: 2, className: classes.controls },
                    react_1.default.createElement(index_1.MediaTime, { time: state.time })),
                react_1.default.createElement(core_1.Grid, { item: true, sm: 5, xs: 10 },
                    react_1.default.createElement(index_1.ControlKeys, { onPauseClick: function () { return pause(player.current); }, onPlayClick: onPlay, backward: props.backward, forward: props.forward, playing: state.playing, onForwardClick: onForwardClick, onBackwardClick: onBackwardClick, onStopClick: function () { return stop(player.current); }, color: props.color, BackwardProps: props.BackwardProps, StopProps: props.StopProps, PauseProps: props.PauseProps, PlayProps: props.PlayProps, ForwardProps: props.ForwardProps })),
                props.speed &&
                    react_1.default.createElement(core_1.Grid, { item: true, xs: 6, sm: 3 },
                        react_1.default.createElement(index_1.SpeedBar, { player: player.current, color: props.color, thickness: props.thickness })),
                react_1.default.createElement(core_1.Grid, { item: true, xs: props.speed ? 6 : 12, sm: props.speed ? 3 : 6 },
                    react_1.default.createElement(index_1.VolumeBar, { mute: props.mute, player: player.current, color: props.color, thickness: props.thickness, MuteProps: props.MuteProps }))))));
};
exports.AudioCard = AudioCard;
//# sourceMappingURL=AudioCard.js.map