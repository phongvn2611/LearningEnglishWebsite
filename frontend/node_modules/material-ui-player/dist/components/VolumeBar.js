"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VolumeBar = void 0;
var react_1 = __importStar(require("react"));
var icons_1 = require("@material-ui/icons");
var core_1 = require("@material-ui/core");
var styles_1 = require("@material-ui/core/styles");
var utils_1 = require("../lib/utils");
var useStyles = styles_1.makeStyles(function (theme) {
    return styles_1.createStyles({
        root: {
            display: 'flex',
            flexDirection: 'row',
            alignItems: 'center',
            maxWidth: theme.spacing(40),
            marginRight: theme.spacing(2)
        },
    });
});
var VolumeSlider = function (props) { return styles_1.withStyles(function (theme) { return (__assign({}, utils_1.getSliderSizes(props.thickness, ({
    thumb: {
        color: theme.palette[props.color || 'primary'].main,
        display: props.thumb === false ? 'none' : 'block',
    },
    rail: {
        color: theme.palette[props.color || 'primary'].main,
    },
    track: {
        color: theme.palette[props.color || 'primary'].main,
    },
})))); })(core_1.Slider); };
var VolumeBar = function (props) {
    var _a, _b, _c, _d, _e;
    var _f = react_1.useState(100), volumeBar = _f[0], setVolumeBar = _f[1];
    var _g = react_1.useState(false), muted = _g[0], setMuted = _g[1];
    var classes = useStyles();
    var PlayerSlider = VolumeSlider(props);
    var onVolumeChange = function (_, newValue) {
        var volume = newValue;
        setVolumeBar(volume);
        props.player.volume = volume / 100;
    };
    var onMuteClick = function () {
        var newState = !muted;
        setMuted(newState);
        props.player.muted = newState;
    };
    return (react_1.default.createElement("div", { className: classes.root },
        props.mute &&
            react_1.default.createElement(core_1.IconButton, __assign({ color: props.color || 'primary', "aria-label": "Mute", onClick: onMuteClick }, (_a = props.MuteProps) === null || _a === void 0 ? void 0 : _a.attributes), muted ?
                ((_c = (_b = props.MuteProps) === null || _b === void 0 ? void 0 : _b.icons) === null || _c === void 0 ? void 0 : _c[0]) || react_1.default.createElement(icons_1.VolumeOff, null) :
                ((_e = (_d = props.MuteProps) === null || _d === void 0 ? void 0 : _d.icons) === null || _e === void 0 ? void 0 : _e[1]) || react_1.default.createElement(icons_1.VolumeUp, null)),
        react_1.default.createElement(PlayerSlider, { value: volumeBar, onChange: onVolumeChange })));
};
exports.VolumeBar = VolumeBar;
//# sourceMappingURL=VolumeBar.js.map