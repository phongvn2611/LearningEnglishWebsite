[{"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\index.js":"1","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\reportWebVitals.js":"2","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\App.js":"3","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\store.js":"4","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\configs\\themeConfig.js":"5","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\configs\\routerConfig.js":"6","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useTheme.js":"7","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\NotFound.js":"8","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\authAction.js":"9","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\userApi.js":"10","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\Message.js":"11","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useVoice.js":"12","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GlobalLoading\\index.js":"13","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\index.js":"14","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\index.js":"15","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ActivationEmail.js":"16","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ResetPassword.js":"17","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Logout.js":"18","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Home.js":"19","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Welcome.js":"20","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Login.js":"21","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Register.js":"22","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\GrammarAdmin.js":"23","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ForgotPassword.js":"24","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ListeningAdmin.js":"25","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Admin.js":"26","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\WordAdmin.js":"27","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Profile.js":"28","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\QuizAdmin.js":"29","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\UserAdmin.js":"30","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Listening.js":"31","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\AddWord.js":"32","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\EditWord.js":"33","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ListeningDetail.js":"34","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\IPA.js":"35","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\UserDetail.js":"36","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\CreateListening.js":"37","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Vocabulary.js":"38","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Game.js":"39","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ListeningTopics.js":"40","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ListeningByTopic.js":"41","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Grammar.js":"42","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\EditListening.js":"43","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\GrammarByLevel.js":"44","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\GrammarLevels.js":"45","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\EditGrammar.js":"46","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\CreateGrammar.js":"47","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\WordTopic.js":"48","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\GrammarDetail.js":"49","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\EditUser.js":"50","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\CreateQuestion.js":"51","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\AddUser.js":"52","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useCloseNavigation.js":"53","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\QuizDetail.js":"54","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useTitle.js":"55","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\messageAction.js":"56","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\DetailIPA.js":"57","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\userConstant.js":"58","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useToggleOverlay.js":"59","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GlobalLoading\\style.js":"60","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\constants\\index.js":"61","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\constants\\grammarLevels.js":"62","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\style.js":"63","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\authReducer.js":"64","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\grammarReducer.js":"65","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\messageReducer.js":"66","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\voiceReducer.js":"67","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\wordReducer.js":"68","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\ipaReducer.js":"69","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\listeningReducer.js":"70","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\tokenReducer.js":"71","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useScrollTop.js":"72","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\style.js":"73","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\messageConstant.js":"74","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\data.js":"75","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\TopicBox\\index.js":"76","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\EditGrammar\\index.js":"77","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\RelativeIPA.js":"78","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\ipaAction.js":"79","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\EditListening\\index.js":"80","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\style.js":"81","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\voiceAction.js":"82","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\helper\\index.js":"83","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\SettingMenu\\index.js":"84","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\data.js":"85","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\grammarConstant.js":"86","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\ipaConstant.js":"87","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\wordConstant.js":"88","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\listeningConstant.js":"89","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\EditWord\\index.js":"90","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\data.js":"91","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\CreateListen\\data.js":"92","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\AddWord\\data.js":"93","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\CreateGrammar\\data.js":"94","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\Speaker.js":"95","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\ipaApi.js":"96","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\EditListening\\style.js":"97","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\CreateListen\\InformationTooltip.js":"98","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\SettingMenu\\style.js":"99","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\voiceConstant.js":"100","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\index.js":"101","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\RichTextEditor.js":"102","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\CreateListen\\index.js":"103","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\CreateGrammar\\index.js":"104","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\AddWord\\index.js":"105","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\index.js":"106","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\constants\\listeningTopics.js":"107","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\CreateListen\\style.js":"108","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\listeningApi.js":"109","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Modal\\index.js":"110","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\grammarApi.js":"111","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\wordApi.js":"112","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\WordSkeleton.js":"113","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useSpeaker.js":"114","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\WordPackSetting.js":"115","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\style.js":"116","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\ListeningItem\\index.js":"117","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\AddWord\\style.js":"118","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\WordSkeleton.js":"119","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\helper\\speakerHelper.js":"120","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\InputCustom\\index.js":"121","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\SelectCustom\\index.js":"122","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\ListeningDetailModal\\index.js":"123","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Modal\\style.js":"124","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\ToggleNavButton.js":"125","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\ListeningItem\\style.js":"126","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\SelectCustom\\style.js":"127","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\InputCustom\\style.js":"128","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\ListeningDetailModal\\style.js":"129","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\InfiniteScroll\\index.js":"130","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\SortType\\index.js":"131","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\AutoSearchInput\\index.js":"132","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Voice\\index.js":"133","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Theme\\index.js":"134","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\ListeningTopic\\index.js":"135","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\listeningAction.js":"136","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\WordPackSetting.js":"137","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\style.js":"138","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\AddWord\\PhoneticInput.js":"139","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\AddWord\\InformationTooltip.js":"140","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\ListeningItem\\index.js":"141","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\CreateGrammar\\InformationTooltip.js":"142","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\CreateGrammar\\style.js":"143","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\EditWord\\style.js":"144","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\constants\\topics.js":"145","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\Tag\\index.js":"146","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\AutoSearchInput\\style.js":"147","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\SortType\\style.js":"148","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Theme\\style.js":"149","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordDetailModal\\index.js":"150","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Voice\\Volume.js":"151","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\ListeningTopic\\style.js":"152","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Voice\\style.js":"153","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Voice\\Speed.js":"154","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Voice\\Accent.js":"155","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\TooltipCustom.js":"156","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\ListeningItem\\style.js":"157","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\EditGrammar\\style.js":"158","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\EditGrammar\\InformationTooltip.js":"159","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\TopicBox\\style.js":"160","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\index.js":"161","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Theme\\PaletteColor\\index.js":"162","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\TopicSelect\\index.js":"163","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\Tag\\style.js":"164","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordDetailModal\\style.js":"165","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\WordSkeleton.js":"166","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\WordPackSetting.js":"167","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\style.js":"168","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\GrammarItem\\index.js":"169","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Theme\\PaletteColor\\style.js":"170","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\PhoneticKeyboard\\index.js":"171","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\TopicSelect\\style.js":"172","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GrammarDetailModal\\index.js":"173","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\GrammarItem\\style.js":"174","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\PhoneticKeyboard\\style.js":"175","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GrammarDetailModal\\style.js":"176","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GrammarLevel\\index.js":"177","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\grammarAction.js":"178","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GrammarLevel\\style.js":"179","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\questionApi.js":"180","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\quizApi.js":"181","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\Vowels.js":"182","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\Consonants.js":"183","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\Diphthongs.js":"184","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\data.js":"185","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\commonApi.js":"186","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\WordSkeleton.js":"187","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\WordPackSetting.js":"188","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\FeatureBox\\index.js":"189","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\GroupCollapse.js":"190","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\WordItem\\index.js":"191","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\UserCard\\index.js":"192","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordSortModal\\index.js":"193","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\FeatureBox\\style.js":"194","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\index.js":"195","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\WordItem\\style.js":"196","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordSortModal\\style.js":"197","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\UserCard\\style.js":"198","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\style.js":"199","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\wordAction.js":"200","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordPack\\index.js":"201","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\SlideShow\\index.js":"202","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\GalleryList\\index.js":"203","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordPack\\style.js":"204","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\SlideShow\\style.js":"205","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\GalleryList\\style.js":"206","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\GalleryItem\\index.js":"207","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\SlideItem\\index.js":"208","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\GalleryItem\\style.js":"209","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\SlideItem\\style.js":"210","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Contacts\\index.js":"211"},{"size":584,"mtime":1639246490000,"results":"212","hashOfConfig":"213"},{"size":362,"mtime":1639246490000,"results":"214","hashOfConfig":"213"},{"size":1957,"mtime":1639401372613,"results":"215","hashOfConfig":"213"},{"size":315,"mtime":1639246490000,"results":"216","hashOfConfig":"213"},{"size":370,"mtime":1639246490000,"results":"217","hashOfConfig":"213"},{"size":9566,"mtime":1639246490000,"results":"218","hashOfConfig":"213"},{"size":928,"mtime":1639246490000,"results":"219","hashOfConfig":"213"},{"size":925,"mtime":1639246490000,"results":"220","hashOfConfig":"213"},{"size":337,"mtime":1639246490000,"results":"221","hashOfConfig":"213"},{"size":1978,"mtime":1639246490000,"results":"222","hashOfConfig":"213"},{"size":789,"mtime":1639246490000,"results":"223","hashOfConfig":"213"},{"size":495,"mtime":1639246490000,"results":"224","hashOfConfig":"213"},{"size":648,"mtime":1639246490000,"results":"225","hashOfConfig":"213"},{"size":5481,"mtime":1639405420453,"results":"226","hashOfConfig":"213"},{"size":575,"mtime":1639246490000,"results":"227","hashOfConfig":"213"},{"size":2183,"mtime":1639246490000,"results":"228","hashOfConfig":"213"},{"size":6058,"mtime":1639246490000,"results":"229","hashOfConfig":"213"},{"size":1060,"mtime":1639246490000,"results":"230","hashOfConfig":"213"},{"size":8768,"mtime":1639410741569,"results":"231","hashOfConfig":"213"},{"size":2098,"mtime":1639246490000,"results":"232","hashOfConfig":"213"},{"size":5570,"mtime":1639410544924,"results":"233","hashOfConfig":"213"},{"size":7319,"mtime":1639246490000,"results":"234","hashOfConfig":"213"},{"size":504,"mtime":1639246490000,"results":"235","hashOfConfig":"213"},{"size":3819,"mtime":1639246490000,"results":"236","hashOfConfig":"213"},{"size":298,"mtime":1639246490000,"results":"237","hashOfConfig":"213"},{"size":2318,"mtime":1639246490000,"results":"238","hashOfConfig":"213"},{"size":6374,"mtime":1639246490000,"results":"239","hashOfConfig":"213"},{"size":10260,"mtime":1639246490000,"results":"240","hashOfConfig":"213"},{"size":493,"mtime":1639246490000,"results":"241","hashOfConfig":"213"},{"size":1616,"mtime":1639246490000,"results":"242","hashOfConfig":"213"},{"size":7149,"mtime":1639398375670,"results":"243","hashOfConfig":"213"},{"size":530,"mtime":1639246490000,"results":"244","hashOfConfig":"213"},{"size":493,"mtime":1639246490000,"results":"245","hashOfConfig":"213"},{"size":1749,"mtime":1639398375670,"results":"246","hashOfConfig":"213"},{"size":1169,"mtime":1639246490000,"results":"247","hashOfConfig":"213"},{"size":5733,"mtime":1639246490000,"results":"248","hashOfConfig":"213"},{"size":554,"mtime":1639246490000,"results":"249","hashOfConfig":"213"},{"size":251,"mtime":1639246490000,"results":"250","hashOfConfig":"213"},{"size":2752,"mtime":1639246490000,"results":"251","hashOfConfig":"213"},{"size":1274,"mtime":1639246490000,"results":"252","hashOfConfig":"213"},{"size":2627,"mtime":1639246490000,"results":"253","hashOfConfig":"213"},{"size":8784,"mtime":1639317063157,"results":"254","hashOfConfig":"213"},{"size":509,"mtime":1639246490000,"results":"255","hashOfConfig":"213"},{"size":2606,"mtime":1639246490000,"results":"256","hashOfConfig":"213"},{"size":1121,"mtime":1639246490000,"results":"257","hashOfConfig":"213"},{"size":515,"mtime":1639246490000,"results":"258","hashOfConfig":"213"},{"size":626,"mtime":1639246490000,"results":"259","hashOfConfig":"213"},{"size":1078,"mtime":1639246490000,"results":"260","hashOfConfig":"213"},{"size":1749,"mtime":1639317063157,"results":"261","hashOfConfig":"213"},{"size":8313,"mtime":1639246490000,"results":"262","hashOfConfig":"213"},{"size":10312,"mtime":1639246490000,"results":"263","hashOfConfig":"213"},{"size":7878,"mtime":1639246490000,"results":"264","hashOfConfig":"213"},{"size":309,"mtime":1639246490000,"results":"265","hashOfConfig":"213"},{"size":3321,"mtime":1639246490000,"results":"266","hashOfConfig":"213"},{"size":366,"mtime":1639246490000,"results":"267","hashOfConfig":"213"},{"size":313,"mtime":1639246490000,"results":"268","hashOfConfig":"213"},{"size":4419,"mtime":1639246490000,"results":"269","hashOfConfig":"213"},{"size":154,"mtime":1639246490000,"results":"270","hashOfConfig":"213"},{"size":379,"mtime":1639246490000,"results":"271","hashOfConfig":"213"},{"size":407,"mtime":1639246490000,"results":"272","hashOfConfig":"213"},{"size":5680,"mtime":1639246490000,"results":"273","hashOfConfig":"213"},{"size":587,"mtime":1639246490000,"results":"274","hashOfConfig":"213"},{"size":2092,"mtime":1639392408723,"results":"275","hashOfConfig":"213"},{"size":571,"mtime":1639246490000,"results":"276","hashOfConfig":"213"},{"size":1980,"mtime":1639246490000,"results":"277","hashOfConfig":"213"},{"size":721,"mtime":1639246490000,"results":"278","hashOfConfig":"213"},{"size":677,"mtime":1639246490000,"results":"279","hashOfConfig":"213"},{"size":2083,"mtime":1639246490000,"results":"280","hashOfConfig":"213"},{"size":1034,"mtime":1639246490000,"results":"281","hashOfConfig":"213"},{"size":2130,"mtime":1639246490000,"results":"282","hashOfConfig":"213"},{"size":302,"mtime":1639246490000,"results":"283","hashOfConfig":"213"},{"size":297,"mtime":1639246490000,"results":"284","hashOfConfig":"213"},{"size":2589,"mtime":1639246490000,"results":"285","hashOfConfig":"213"},{"size":126,"mtime":1639246490000,"results":"286","hashOfConfig":"213"},{"size":2741,"mtime":1639255868532,"results":"287","hashOfConfig":"213"},{"size":410,"mtime":1639246490000,"results":"288","hashOfConfig":"213"},{"size":19965,"mtime":1639255459344,"results":"289","hashOfConfig":"213"},{"size":2516,"mtime":1639246490000,"results":"290","hashOfConfig":"213"},{"size":2755,"mtime":1639246490000,"results":"291","hashOfConfig":"213"},{"size":12977,"mtime":1639251125842,"results":"292","hashOfConfig":"213"},{"size":1950,"mtime":1639246490000,"results":"293","hashOfConfig":"213"},{"size":282,"mtime":1639246490000,"results":"294","hashOfConfig":"213"},{"size":3944,"mtime":1639246490000,"results":"295","hashOfConfig":"213"},{"size":2607,"mtime":1639404283757,"results":"296","hashOfConfig":"213"},{"size":3076,"mtime":1639019358000,"results":"297","hashOfConfig":"213"},{"size":486,"mtime":1639246490000,"results":"298","hashOfConfig":"213"},{"size":364,"mtime":1639246490000,"results":"299","hashOfConfig":"213"},{"size":479,"mtime":1639246490000,"results":"300","hashOfConfig":"213"},{"size":552,"mtime":1639246490000,"results":"301","hashOfConfig":"213"},{"size":15065,"mtime":1639246490000,"results":"302","hashOfConfig":"213"},{"size":3095,"mtime":1639246490000,"results":"303","hashOfConfig":"213"},{"size":2097,"mtime":1639019358000,"results":"304","hashOfConfig":"213"},{"size":2289,"mtime":1639246490000,"results":"305","hashOfConfig":"213"},{"size":2058,"mtime":1639104226576,"results":"306","hashOfConfig":"213"},{"size":1123,"mtime":1639246490000,"results":"307","hashOfConfig":"213"},{"size":526,"mtime":1639246490000,"results":"308","hashOfConfig":"213"},{"size":869,"mtime":1639019358000,"results":"309","hashOfConfig":"213"},{"size":518,"mtime":1639019358000,"results":"310","hashOfConfig":"213"},{"size":601,"mtime":1639246490000,"results":"311","hashOfConfig":"213"},{"size":120,"mtime":1639246490000,"results":"312","hashOfConfig":"213"},{"size":3577,"mtime":1639019358000,"results":"313","hashOfConfig":"213"},{"size":875,"mtime":1639253279787,"results":"314","hashOfConfig":"213"},{"size":9504,"mtime":1639249466688,"results":"315","hashOfConfig":"213"},{"size":18263,"mtime":1639256044637,"results":"316","hashOfConfig":"213"},{"size":11843,"mtime":1639246490000,"results":"317","hashOfConfig":"213"},{"size":3463,"mtime":1639246490000,"results":"318","hashOfConfig":"213"},{"size":2754,"mtime":1639318090191,"results":"319","hashOfConfig":"213"},{"size":869,"mtime":1639019358000,"results":"320","hashOfConfig":"213"},{"size":1164,"mtime":1639246490000,"results":"321","hashOfConfig":"213"},{"size":2105,"mtime":1639246490000,"results":"322","hashOfConfig":"213"},{"size":1249,"mtime":1639246490000,"results":"323","hashOfConfig":"213"},{"size":1799,"mtime":1639246490000,"results":"324","hashOfConfig":"213"},{"size":430,"mtime":1639019358000,"results":"325","hashOfConfig":"213"},{"size":911,"mtime":1639246490000,"results":"326","hashOfConfig":"213"},{"size":943,"mtime":1639019358000,"results":"327","hashOfConfig":"213"},{"size":183,"mtime":1639019358000,"results":"328","hashOfConfig":"213"},{"size":2778,"mtime":1639019358000,"results":"329","hashOfConfig":"213"},{"size":1610,"mtime":1639246490000,"results":"330","hashOfConfig":"213"},{"size":430,"mtime":1639246490000,"results":"331","hashOfConfig":"213"},{"size":1082,"mtime":1639246490000,"results":"332","hashOfConfig":"213"},{"size":805,"mtime":1639246490000,"results":"333","hashOfConfig":"213"},{"size":2082,"mtime":1639246490000,"results":"334","hashOfConfig":"213"},{"size":2883,"mtime":1639246490000,"results":"335","hashOfConfig":"213"},{"size":873,"mtime":1639246490000,"results":"336","hashOfConfig":"213"},{"size":741,"mtime":1639246490000,"results":"337","hashOfConfig":"213"},{"size":712,"mtime":1639019358000,"results":"338","hashOfConfig":"213"},{"size":1052,"mtime":1639246490000,"results":"339","hashOfConfig":"213"},{"size":904,"mtime":1639246490000,"results":"340","hashOfConfig":"213"},{"size":1513,"mtime":1639246490000,"results":"341","hashOfConfig":"213"},{"size":1169,"mtime":1639246490000,"results":"342","hashOfConfig":"213"},{"size":1558,"mtime":1639246490000,"results":"343","hashOfConfig":"213"},{"size":1418,"mtime":1639246490000,"results":"344","hashOfConfig":"213"},{"size":802,"mtime":1639246490000,"results":"345","hashOfConfig":"213"},{"size":2413,"mtime":1639246490000,"results":"346","hashOfConfig":"213"},{"size":3121,"mtime":1639246490000,"results":"347","hashOfConfig":"213"},{"size":6172,"mtime":1639246490000,"results":"348","hashOfConfig":"213"},{"size":943,"mtime":1639246490000,"results":"349","hashOfConfig":"213"},{"size":183,"mtime":1639246490000,"results":"350","hashOfConfig":"213"},{"size":2273,"mtime":1639246490000,"results":"351","hashOfConfig":"213"},{"size":518,"mtime":1639246490000,"results":"352","hashOfConfig":"213"},{"size":2317,"mtime":1639246490000,"results":"353","hashOfConfig":"213"},{"size":518,"mtime":1639019358000,"results":"354","hashOfConfig":"213"},{"size":1892,"mtime":1639019358000,"results":"355","hashOfConfig":"213"},{"size":1610,"mtime":1639246490000,"results":"356","hashOfConfig":"213"},{"size":3391,"mtime":1639246490000,"results":"357","hashOfConfig":"213"},{"size":995,"mtime":1639246490000,"results":"358","hashOfConfig":"213"},{"size":789,"mtime":1639246490000,"results":"359","hashOfConfig":"213"},{"size":234,"mtime":1639246490000,"results":"360","hashOfConfig":"213"},{"size":712,"mtime":1639246490000,"results":"361","hashOfConfig":"213"},{"size":5096,"mtime":1639246490000,"results":"362","hashOfConfig":"213"},{"size":1448,"mtime":1639246490000,"results":"363","hashOfConfig":"213"},{"size":170,"mtime":1639246490000,"results":"364","hashOfConfig":"213"},{"size":1506,"mtime":1639246490000,"results":"365","hashOfConfig":"213"},{"size":1349,"mtime":1639246490000,"results":"366","hashOfConfig":"213"},{"size":1724,"mtime":1639246490000,"results":"367","hashOfConfig":"213"},{"size":1010,"mtime":1639246490000,"results":"368","hashOfConfig":"213"},{"size":712,"mtime":1639246490000,"results":"369","hashOfConfig":"213"},{"size":1892,"mtime":1639019358000,"results":"370","hashOfConfig":"213"},{"size":518,"mtime":1639019358000,"results":"371","hashOfConfig":"213"},{"size":676,"mtime":1639246490000,"results":"372","hashOfConfig":"213"},{"size":3330,"mtime":1639255868532,"results":"373","hashOfConfig":"213"},{"size":2022,"mtime":1639246490000,"results":"374","hashOfConfig":"213"},{"size":2209,"mtime":1639246490000,"results":"375","hashOfConfig":"213"},{"size":674,"mtime":1639246490000,"results":"376","hashOfConfig":"213"},{"size":1513,"mtime":1639246490000,"results":"377","hashOfConfig":"213"},{"size":430,"mtime":1639019358000,"results":"378","hashOfConfig":"213"},{"size":929,"mtime":1639019358000,"results":"379","hashOfConfig":"213"},{"size":183,"mtime":1639019358000,"results":"380","hashOfConfig":"213"},{"size":2749,"mtime":1639019358000,"results":"381","hashOfConfig":"213"},{"size":398,"mtime":1639246490000,"results":"382","hashOfConfig":"213"},{"size":922,"mtime":1639246490000,"results":"383","hashOfConfig":"213"},{"size":713,"mtime":1639246490000,"results":"384","hashOfConfig":"213"},{"size":2896,"mtime":1639246490000,"results":"385","hashOfConfig":"213"},{"size":712,"mtime":1639019358000,"results":"386","hashOfConfig":"213"},{"size":913,"mtime":1639246490000,"results":"387","hashOfConfig":"213"},{"size":1513,"mtime":1639246490000,"results":"388","hashOfConfig":"213"},{"size":3091,"mtime":1639246490000,"results":"389","hashOfConfig":"213"},{"size":4921,"mtime":1639246490000,"results":"390","hashOfConfig":"213"},{"size":170,"mtime":1639246490000,"results":"391","hashOfConfig":"213"},{"size":930,"mtime":1639246490000,"results":"392","hashOfConfig":"213"},{"size":853,"mtime":1639246490000,"results":"393","hashOfConfig":"213"},{"size":789,"mtime":1639246490000,"results":"394","hashOfConfig":"213"},{"size":795,"mtime":1639246490000,"results":"395","hashOfConfig":"213"},{"size":805,"mtime":1639246490000,"results":"396","hashOfConfig":"213"},{"size":2166,"mtime":1639246490000,"results":"397","hashOfConfig":"213"},{"size":412,"mtime":1639246490000,"results":"398","hashOfConfig":"213"},{"size":430,"mtime":1639246490000,"results":"399","hashOfConfig":"213"},{"size":909,"mtime":1639246490000,"results":"400","hashOfConfig":"213"},{"size":769,"mtime":1639246490000,"results":"401","hashOfConfig":"213"},{"size":893,"mtime":1639246490000,"results":"402","hashOfConfig":"213"},{"size":3408,"mtime":1639246490000,"results":"403","hashOfConfig":"213"},{"size":597,"mtime":1639246490000,"results":"404","hashOfConfig":"213"},{"size":1774,"mtime":1639246490000,"results":"405","hashOfConfig":"213"},{"size":1047,"mtime":1639246490000,"results":"406","hashOfConfig":"213"},{"size":3490,"mtime":1639246490000,"results":"407","hashOfConfig":"213"},{"size":712,"mtime":1639246490000,"results":"408","hashOfConfig":"213"},{"size":234,"mtime":1639246490000,"results":"409","hashOfConfig":"213"},{"size":1230,"mtime":1639246490000,"results":"410","hashOfConfig":"213"},{"size":345,"mtime":1639246490000,"results":"411","hashOfConfig":"213"},{"size":8139,"mtime":1639246490000,"results":"412","hashOfConfig":"213"},{"size":4698,"mtime":1639246490000,"results":"413","hashOfConfig":"213"},{"size":1924,"mtime":1639246490000,"results":"414","hashOfConfig":"213"},{"size":2037,"mtime":1639246490000,"results":"415","hashOfConfig":"213"},{"size":170,"mtime":1639246490000,"results":"416","hashOfConfig":"213"},{"size":299,"mtime":1639246490000,"results":"417","hashOfConfig":"213"},{"size":788,"mtime":1639246490000,"results":"418","hashOfConfig":"213"},{"size":1197,"mtime":1639246490000,"results":"419","hashOfConfig":"213"},{"size":2019,"mtime":1639246490000,"results":"420","hashOfConfig":"213"},{"size":1465,"mtime":1639246490000,"results":"421","hashOfConfig":"213"},{"size":2398,"mtime":1639246490000,"results":"422","hashOfConfig":"213"},{"size":3213,"mtime":1639410336195,"results":"423","hashOfConfig":"213"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},"13gxcm1",{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"426"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"426"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"426"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"426"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"426"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"426"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"426"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"426"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"426"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"426"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"426"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"426"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"426"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"426"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"426"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"426"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"426"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"426"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"426"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"426"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"426"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"426"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"426"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"426"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"426"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"426"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"426"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"426"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"426"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"426"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"426"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"426"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"426"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"426"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"426"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"426"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"426"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"426"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"426"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"426"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"426"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"426"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"426"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"426"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"426"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"426"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"426"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"426"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754","usedDeprecatedRules":"426"},{"filePath":"755","messages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"426"},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"426"},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"791","messages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"795","messages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"426"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"806","messages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"812","messages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"814","usedDeprecatedRules":"426"},{"filePath":"815","messages":"816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"819","messages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"823","usedDeprecatedRules":"426"},{"filePath":"824","messages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"826","messages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"828","messages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"830","messages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832","usedDeprecatedRules":"426"},{"filePath":"833","messages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"839","messages":"840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"841","messages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"426"},{"filePath":"850","messages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"852","messages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"854","messages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"856","messages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"860","messages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"862","messages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"866","messages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"868","messages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"426"},{"filePath":"871","messages":"872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"875","messages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"877","messages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881","usedDeprecatedRules":"426"},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888","usedDeprecatedRules":"426"},{"filePath":"889","messages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"891","messages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"893","messages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"895","messages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"897","messages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"899","messages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\index.js",[],["905","906"],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\reportWebVitals.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\App.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\store.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\configs\\themeConfig.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\configs\\routerConfig.js",["907","908"],"import React from \"react\";\nimport { ROUTES } from \"../constants\";\nimport { Route } from \"react-router\";\nimport ActivationEmailPage from \"../pages/ActivationEmail\";\nimport ResetPasswordPage from \"../pages/ResetPassword\";\nimport LogoutPage from \"../pages/Logout\";\nimport WelcomePage from \"../pages/Welcome\";\nimport NotFoundPage from \"../pages/NotFound\";\nimport { GRAMMAR_LEVEL } from \"constants/grammarLevels\";\nconst HomePage = React.lazy(() => import(\"../pages/Home\"));\nconst RegisterPage = React.lazy(() => import(\"../pages/Register\"));\nconst LoginPage = React.lazy(() => import(\"../pages/Login\"));\nconst ForgotPasswordPage = React.lazy(() => import(\"../pages/ForgotPassword\"));\nconst ProfilePage = React.lazy(() => import(\"../pages/Profile\"));\nconst AdminPage = React.lazy(() => import(\"../pages/Admin\"));\nconst GrammarAdminPage = React.lazy(() => import(\"../pages/GrammarAdmin\"));\nconst ListeningAdminPage = React.lazy(() => import(\"../pages/ListeningAdmin\"));\nconst QuizAdminPage = React.lazy(() => import(\"../pages/QuizAdmin\"));\nconst WordAdminPage = React.lazy(() => import(\"../pages/WordAdmin\"));\nconst UserAdminPage = React.lazy(() => import(\"../pages/UserAdmin\"));\nconst ListeningPage = React.lazy(() => import(\"../pages/Listening\"));\nconst ListeningDetailPage = React.lazy(() =>\n  import(\"../pages/ListeningDetail\")\n);\nconst CreateWordPage = React.lazy(() => import(\"../pages/AddWord\"));\nconst EditWordPage = React.lazy(() => import(\"../pages/EditWord\"));\nconst IPAPage = React.lazy(() => import(\"../pages/IPA\"));\nconst IPADetailPage = React.lazy(() => import(\"../components/IPA/DetailIPA\"));\nconst UserDetailPage = React.lazy(() => import(\"../pages/UserDetail\"));\nconst WordTopicPage = React.lazy(() => import(\"../pages/WordTopic\"));\nconst GamePage = React.lazy(() => import(\"../pages/Game\"));\n//const WordListByTopicPage = React.lazy(() => import(\"../pages/WordListByTopic\"));\nconst VocabularyPage = React.lazy(() => import(\"../pages/Vocabulary\"));\nconst CreateListeningPage = React.lazy(() =>\n  import(\"../pages/CreateListening\")\n);\nconst GrammarPage = React.lazy(() => import(\"../pages/Grammar\"));\nconst ListeningByTopicPage = React.lazy(() =>\n  import(\"../pages/ListeningByTopic\")\n);\nconst ListeningTopicsPage = React.lazy(() =>\n  import(\"../pages/ListeningTopics\")\n);\nconst GrammarByLevelPage = React.lazy(() => import(\"../pages/GrammarByLevel\"));\nconst GrammarLevelsPage = React.lazy(() => import(\"../pages/GrammarLevels\"));\nconst EditListeningPage = React.lazy(() => import(\"../pages/EditListening\"));\nconst CreateGrammarPage = React.lazy(() => import(\"../pages/CreateGrammar\"));\nconst EditGrammarPage = React.lazy(() => import(\"../pages/EditGrammar\"));\nconst GrammarDetailPage = React.lazy(() => import(\"../pages/GrammarDetail\"));\nconst AddUserPage = React.lazy(() => import(\"../pages/AddUser\"));\nconst EditUserPage = React.lazy(() => import(\"../pages/EditUser\"));\nconst CreateQuestionPage = React.lazy(() => import(\"../pages/CreateQuestion\"));\nconst QuizDetailPage = React.lazy(() => import(\"../pages/QuizDetail\"));\n\nconst routes = [\n  {\n    path: ROUTES.WELCOME,\n    exact: true,\n    isProtect: false,\n    component: () => <WelcomePage />,\n    role: [],\n  },\n  {\n    path: ROUTES.HOME,\n    exact: true,\n    isProtect: false,\n    component: () => <HomePage />,\n    role: [],\n  },\n  {\n    path: ROUTES.LOGIN,\n    exact: true,\n    isProtect: false,\n    component: () => <LoginPage />,\n    role: [],\n  },\n  {\n    path: ROUTES.REGISTER,\n    exact: true,\n    isProtect: false,\n    component: () => <RegisterPage />,\n    role: [],\n  },\n  {\n    path: ROUTES.FORGOT_PASSWORD,\n    exact: true,\n    isProtect: false,\n    component: () => <ForgotPasswordPage />,\n    role: [],\n  },\n  {\n    path: ROUTES.ACTIVATION_EMAIL,\n    exact: true,\n    isProtect: false,\n    component: () => <ActivationEmailPage />,\n    role: [],\n  },\n  {\n    path: ROUTES.RESET_PASSWORD,\n    exact: true,\n    isProtect: false,\n    component: () => <ResetPasswordPage />,\n    role: [],\n  },\n  {\n    path: ROUTES.PROFILE,\n    exact: true,\n    isProtect: true,\n    component: () => <ProfilePage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.LOGOUT,\n    exact: true,\n    isProtect: false,\n    component: () => <LogoutPage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.LISTENING,\n    exact: true,\n    isProtect: true,\n    component: () => <ListeningPage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.ADMIN,\n    exact: true,\n    isProtect: true,\n    component: () => <AdminPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.GRAMMAR_ADMIN,\n    exact: true,\n    isProtect: true,\n    component: () => <GrammarAdminPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.LISTENING_ADMIN,\n    exact: true,\n    isProtect: true,\n    component: () => <ListeningAdminPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.LISTENING_DETAIL,\n    exact: true,\n    isProtect: true,\n    component: () => <ListeningDetailPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.QUIZ_ADMIN,\n    exact: true,\n    isProtect: true,\n    component: () => <QuizAdminPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.WORD_ADMIN,\n    exact: true,\n    isProtect: true,\n    component: () => <WordAdminPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.ADD_WORD,\n    exact: true,\n    isProtect: true,\n    component: () => <CreateWordPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.EDIT_WORD,\n    exact: true,\n    isProtect: true,\n    component: () => <EditWordPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.IPA_LIST,\n    exact: true,\n    isProtect: true,\n    component: () => <IPAPage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.IPA_DETAIL,\n    exact: true,\n    isProtect: true,\n    component: () => <IPADetailPage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.USER_ADMIN,\n    exact: true,\n    isProtect: true,\n    component: () => <UserAdminPage />,\n    role: [\"admin\"],\n  },\n  {\n    path: ROUTES.USER_DETAIL,\n    exact: true,\n    isProtect: true,\n    component: () => <UserDetailPage />,\n    role: [\"admin\"],\n  },\n  {\n    path: ROUTES.WORD_TOPIC,\n    exact: true,\n    isProtect: true,\n    component: () => <WordTopicPage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.GAME,\n    exact: true,\n    isProtect: true,\n    component: () => <GamePage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.VOCABULARY,\n    exact: true,\n    isProtect: true,\n    component: () => <VocabularyPage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.ADD_LISTEN,\n    exact: true,\n    isProtect: true,\n    component: () => <CreateListeningPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.GRAMMAR,\n    exact: true,\n    isProtect: true,\n    component: () => <GrammarPage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.LISTENING_BY_TOPIC,\n    exact: true,\n    isProtect: true,\n    component: () => <ListeningByTopicPage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.LISTENING_TOPICS,\n    exact: true,\n    isProtect: true,\n    component: () => <ListeningTopicsPage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.GRAMMAR_BY_LEVEL,\n    exact: true,\n    isProtect: true,\n    component: () => <GrammarByLevelPage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.GRAMMAR_LEVELS,\n    exact: true,\n    isProtect: true,\n    component: () => <GrammarLevelsPage />,\n    role: [\"user\", \"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.CREATE_GRAMMAR,\n    exact: true,\n    isProtect: true,\n    component: () => <CreateGrammarPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.EDIT_LISTEN,\n    exact: true,\n    isProtect: true,\n    component: () => <EditListeningPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.EDIT_GRAMMAR,\n    exact: true,\n    isProtect: true,\n    component: () => <EditGrammarPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.GRAMMAR_DETAIL,\n    exact: true,\n    isProtect: true,\n    component: () => <GrammarDetailPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.ADD_USER,\n    exact: true,\n    isProtect: true,\n    component: () => <AddUserPage />,\n    role: [\"admin\"],\n  },\n  {\n    path: ROUTES.EDIT_USER,\n    exact: true,\n    isProtect: true,\n    component: () => <EditUserPage />,\n    role: [\"admin\"],\n  },\n  {\n    path: ROUTES.CREATE_QUESTION,\n    exact: true,\n    isProtect: true,\n    component: () => <CreateQuestionPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n  {\n    path: ROUTES.QUIZ_DETAIL,\n    exact: true,\n    isProtect: true,\n    component: () => <QuizDetailPage />,\n    role: [\"instructor\", \"admin\"],\n  },\n];\n\nconst renderRoutes = (routes, isAuth = false, roleType = \"\") => {\n  return routes.map((route, index) => {\n    const { path, exact, component, isProtect, role } = route;\n    const loginComponent = () => <LoginPage />;\n    const notfoundComponent = () => <NotFoundPage />;\n    const componentRender = !isProtect\n      ? component\n      : isAuth\n      ? role.includes(roleType)\n        ? component\n        : notfoundComponent\n      : loginComponent;\n\n    return (\n      <Route\n        path={path}\n        exact={exact}\n        key={index}\n        component={componentRender}\n      />\n    );\n  });\n};\n\nexport default {\n  routes,\n  renderRoutes,\n};\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useTheme.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\NotFound.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\authAction.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\userApi.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\Message.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useVoice.js",["909"],"import { VOICE_KEYS } from 'constants/index';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setVoice } from 'redux/actions/voiceAction';\n\n// get custom voice to store into redux\nfunction useVoice() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const customVoice = localStorage.getItem(VOICE_KEYS.LS_KEY);\n    if (customVoice) {\n      dispatch(setVoice(JSON.parse(customVoice)));\n    }\n  }, []);\n\n  return null;\n}\n\nexport default useVoice;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GlobalLoading\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\index.js",["910","911","912","913","914","915","916","917","918","919","920","921","922","923"],"import Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { ROUTES } from \"../../constants\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport SettingMenu from \"./SettingMenu\";\nimport useStyle from \"./style\";\nimport { cloudinaryImgOptimize } from 'helper';\nimport { useHistory } from \"react-router-dom\";\n\nfunction Navigation() {\n  const classes = useStyle();\n  const theme = useTheme();\n  const isXsDevice = useMediaQuery(theme.breakpoints.up(\"xs\"));\n  \n  const { isAuth, user } = useSelector((state) => state.authReducer);\n  const avtSrc = cloudinaryImgOptimize(user.avatar, 48, 48);\n  const [showInput, setShowInput] = useState(isXsDevice);\n  const [anchorMenu, setAnchorMenu] = useState(null);\n  const history= useHistory();\n  const onOpenMenu = (e) => setAnchorMenu(e.currentTarget);\n  const onCloseMenu = () => setAnchorMenu(null);\n\n  return (\n    <div className={`${classes.navWrapper} w-100vw`} id=\"dynoNav\">\n      <div className={`${classes.nav} w-100`}>\n        <div className=\"container h-100 flex-center--ver\">\n          {(isXsDevice || !showInput) && (\n            <><Link to={ROUTES.HOME}>\n              <img\n                className={`${classes.imgSize} ${classes.logo}`}\n                src={\"https://res.cloudinary.com/phongvn2611/image/upload/v1637319049/english/avatar/logo-horizon_vmirgt.png\"}\n                alt=\"Logo\" />\n            </Link>\n\n            { user && user.roleType!==\"admin\" && user.roleType!==\"instructor\" && (\n             \n                <div className={classes.bgp}>\n              <Button className={classes.bbcleNavButton} onClick={()=>history.push(ROUTES.LISTENING_TOPICS)} >Listening</Button>\n              <Button className={classes.bbcleNavButton} onClick={()=>history.push(ROUTES.GRAMMAR_LEVELS)}>Grammar</Button>\n              <Button className={classes.bbcleNavButton} onClick={()=>history.push(ROUTES.WORD_TOPIC)}>Vocabulary</Button>\n              <Button className={classes.bbcleNavButton} onClick={()=>history.push(ROUTES.IPA_LIST)}>Pronunciation</Button>\n\n              </div>\n              \n            )}\n            </>\n          )}\n         \n          <div className={`${classes.control} flex-center--ver`}>\n            {showInput && !isXsDevice && (\n              <ArrowBackIosIcon\n                className={`${classes.iconSize} mr-4 cur-pointer`}\n                onClick={() => setShowInput(!showInput)}\n              />\n            )}\n            \n\n            {isAuth ? (\n              <div className={classes.auth} onClick={onOpenMenu}>\n                <Avatar\n                  className={`${classes.imgSize} ${classes.avt} cur-pointer`}\n                  alt=\"Username\"\n                  src={avtSrc} />\n                <p className={classes.name}>\n                  {user.name}\n                </p>\n              </div>\n                \n            ) : (\n              <div >\n                <Link to={ROUTES.REGISTER}>\n                  <Button\n                    className=\"_btn _btn-primary\"\n                    classes={{\n                      root: classes.registerBtn,\n                      label: classes.registerLabel,\n                    }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                  >\n                    Đăng ký\n                  </Button>\n                </Link>\n                <Link to={ROUTES.LOGIN}>\n                  <Button\n                    className=\"_btn _btn-primary\"\n                    classes={{\n                      root: classes.loginBtn,\n                      label: classes.loginLabel,\n                    }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                  >\n                    Đăng nhập\n                  </Button>\n                </Link>\n              </div>\n            )}\n           \n            <SettingMenu anchorEl={anchorMenu} onClose={onCloseMenu} />\n         \n          </div>\n        </div>\n      </div>\n\n      { user && user.roleType!==\"admin\" && user.roleType!==\"instructor\" && (\n      <div className={classes.bbcleHeader}>\n      <div className={classes.bbcleHeaderMasthead}>\n          <a style={{backgroundColor:\"black\"}}>L</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>E</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>A</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>R</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>N</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>I</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>N</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>G</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>E</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>N</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>L</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>I</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>S</a><span> </span>\n          <a style={{backgroundColor:\"black\"}}>H</a><span> </span>\n      </div>\n      </div>\n      )}\n    </div>\n  );\n}\n\nexport default Navigation;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ActivationEmail.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ResetPassword.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Logout.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Home.js",["924","925","926","927","928","929","930","931","932","933"],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Welcome.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Login.js",["934","935","936","937"],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Register.js",["938","939","940","941","942","943","944","945","946"],"import { ROUTES } from \"../constants\";\nimport useCloseNavigation from \"../hooks/useCloseNavigation\";\nimport useTitle from \"../hooks/useTitle\";\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./style/login-signup.scss\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport InputCustom from \"../components/UI/InputCustom\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { formStyle } from \"../components/UI/style\";\nimport { useDispatch } from \"react-redux\";\nimport userApi from \"./../apis/userApi\";\nimport { setMessage } from \"./../redux/actions/messageAction\";\n\nconst nameRegex = /^[^\\d~`!@#$%^&*\\(\\)\\\\\\|\\.,\\?\\/\\-\\+\\=\\_]+$/gi;\nconst schema = yup.object().shape({\n  email: yup.string().trim().required(\"Nhập email\").email(\"Email không hợp lệ\"),\n  name: yup\n    .string()\n    .trim()\n    .required(\"Nhập họ tên\")\n    .matches(nameRegex, \"Họ tên không chứa số và ký tự đặc biệt\"),\n  password: yup\n    .string()\n    .trim()\n    .required(\"Nhập mật khẩu\")\n    .min(6, `Mật khẩu ít nhất 6 ký tự`),\n  confirmPassword: yup\n    .string()\n    .trim()\n    .required(\"Nhập xác nhận mật khẩu\")\n    .min(6, `Xác nhận mật khẩu ít nhất 6 ký tự`)\n    .oneOf([yup.ref(\"password\")], \"Nhập xác nhận mật khẩu không khớp\"),\n});\n\nfunction RegisterPage() {\n  useTitle(\"Register\");\n  useCloseNavigation();\n\n  const classes = makeStyles(formStyle)();\n\n  const [visiblePw, setVisiblePw] = useState(false);\n  const [visibleConfirmPw, setVisibleConfirmPw] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleRegister = async () => {\n    try {\n      setLoading(true);\n      const res = await userApi.register(user.name, user.email, user.password);\n      if (res) {\n        dispatch(setMessage(res.data.message, \"success\"));\n        history.replace(\"/login\");\n      }\n    } catch (error) {\n      dispatch(setMessage(error.response.data.message, \"error\"));\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"pos-rel w-100vw h-100vh\">\n      <div className=\"transform-center\">\n        <form\n          className={`${classes.root} flex-col`}\n          onSubmit={handleSubmit(handleRegister)}\n          autoComplete=\"off\"\n        >\n          <div className=\"flex-col\">\n            <div className=\"t-center mt-5\">\n              <img\n                className={classes.labelIcon}\n                src=\"https://res.cloudinary.com/phongvn2611/image/upload/v1637079637/english/avatar/logo-tiny_seqkri.png\"\n                alt=\"logo\"\n              />\n            </div>\n            <h1 className={`${classes.title} t-center`}>Đăng ký</h1>\n          </div>\n\n          <div className=\"flex-col\">\n            <InputCustom\n              label=\"Email\"\n              size=\"small\"\n              placeholder=\"Nhập email\"\n              error={Boolean(errors.email)}\n              inputProps={{\n                name: \"email\",\n                autoFocus: true,\n                ...register(\"email\"),\n              }}\n              onChange={handleChange}\n            />\n            {errors.email && (\n              <p className=\"text-error\">{errors.email?.message}</p>\n            )}\n          </div>\n\n          <div className=\"flex-col\">\n            <InputCustom\n              label=\"Họ tên\"\n              size=\"small\"\n              placeholder=\"Nhập họ tên\"\n              error={Boolean(errors.name)}\n              inputProps={{\n                name: \"name\",\n                ...register(\"name\"),\n              }}\n              onChange={handleChange}\n            />\n            {errors.name && (\n              <p className=\"text-error\">{errors.name?.message}</p>\n            )}\n          </div>\n\n          <div className=\"flex-col\">\n            <InputCustom\n              label=\"Mật khẩu\"\n              size=\"small\"\n              placeholder=\"Nhập mật khẩu\"\n              error={Boolean(errors.password)}\n              inputProps={{\n                name: \"password\",\n                type: visiblePw ? \"text\" : \"password\",\n                ...register(\"password\"),\n              }}\n              onChange={handleChange}\n              endAdornment={\n                visiblePw ? (\n                  <VisibilityIcon\n                    className={`${classes.icon} ${classes.visiblePw}`}\n                    onClick={() => setVisiblePw(false)}\n                  />\n                ) : (\n                  <VisibilityOffIcon\n                    className={classes.icon}\n                    onClick={() => setVisiblePw(true)}\n                  />\n                )\n              }\n            />\n            {errors.password && (\n              <p className=\"text-error\">{errors.password?.message}</p>\n            )}\n          </div>\n\n          <div className=\"flex-col\">\n            <InputCustom\n              label=\"Xác nhận mật khẩu\"\n              size=\"small\"\n              placeholder=\"Nhập lại mật khẩu\"\n              error={Boolean(errors.confirmPassword)}\n              inputProps={{\n                name: \"confirmPassword\",\n                type: visibleConfirmPw ? \"text\" : \"password\",\n                ...register(\"confirmPassword\"),\n              }}\n              onChange={handleChange}\n              endAdornment={\n                visibleConfirmPw ? (\n                  <VisibilityIcon\n                    className={`${classes.icon} ${classes.visibleConfirmPw}`}\n                    onClick={() => setVisibleConfirmPw(false)}\n                  />\n                ) : (\n                  <VisibilityOffIcon\n                    className={classes.icon}\n                    onClick={() => setVisibleConfirmPw(true)}\n                  />\n                )\n              }\n            />\n            {errors.confirmPassword && (\n              <p className=\"text-error\">{errors.confirmPassword?.message}</p>\n            )}\n          </div>\n\n          <Button\n            className=\"_btn _btn-primary\"\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            disabled={loading}\n            endIcon={loading && <LoopIcon className=\"ani-spin\" />}\n          >\n            Đăng ký\n          </Button>\n\n          <div className=\"or-option w-100 t-center\">HOẶC</div>\n        </form>\n\n        <div className=\"has-account\">\n          Bạn đã có tài khoản?&nbsp;\n          <Link to={ROUTES.LOGIN} className=\"account-link\">\n            Đăng nhập\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\GrammarAdmin.js",["947"],"import React from 'react'\nimport { dictionaryRoot } from '../components/UI/style'\nimport { makeStyles } from '@material-ui/styles';\nimport useTitle from './../hooks/useTitle';\nimport GrammarAdminData from '../components/GrammarAdmin/data'\n\nconst useStyle = makeStyles((theme) => ({\n  ...dictionaryRoot(theme)\n}))\n\nexport default function GrammarAdminPage() {\n  useTitle('Grammar Admin')\n  const classes = useStyle();\n  return (\n    <div className=\"container\">\n      <GrammarAdminData/>\n    </div>\n  )\n}\n\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ForgotPassword.js",["948","949","950","951"],"import \"./style/login-signup.scss\";\nimport { ROUTES } from \"../constants\";\nimport useTitle from \"./../hooks/useTitle\";\nimport useCloseNavigation from \"./../hooks/useCloseNavigation\";\nimport React, { useState } from \"react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport InputCustom from \"../components/UI/InputCustom\";\nimport { formStyle } from \"../components/UI/style\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport userApi from \"../apis/userApi\";\nimport { UX } from \"../constants\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport { setMessage } from \"./../redux/actions/messageAction\";\n\nconst schema = yup.object().shape({\n  email: yup.string().required(\"Email đang trống\").email(\"Email không hợp lệ\"),\n});\n\nfunction ForgotPasswordPage() {\n  useTitle(\"Forgot password\");\n  useCloseNavigation();\n\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = makeStyles(formStyle)();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const [user, setUser] = useState({\n    email: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleForgotPassword = async (e) => {\n    try {\n      setLoading(true);\n      const res = await userApi.forgotPassword(user.email);\n      dispatch(setMessage(res.data.message, \"success\"));\n      setLoading(false);\n    } catch (error) {\n      dispatch(setMessage(error.response?.data?.message, \"error\"));\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"pos-rel w-100vw h-100vh\">\n      <div className=\"transform-center\">\n        <form\n          className={`${classes.root} flex-col`}\n          onSubmit={handleSubmit(handleForgotPassword)}\n          autoComplete=\"off\"\n        >\n          <div className=\"flex-col\">\n            <div className=\"t-center mt-5\">\n              <img\n                className={classes.labelIcon}\n                src=\"https://res.cloudinary.com/phongvn2611/image/upload/v1637079637/english/avatar/logo-tiny_seqkri.png\"\n                alt=\"logo\"\n              />\n            </div>\n            <h1 className={`${classes.title} t-center`}>Quên mật khẩu</h1>\n          </div>\n\n          <div className=\"flex-col\">\n            <InputCustom\n              label=\"Email\"\n              size=\"small\"\n              placeholder=\"Nhập email\"\n              onChange={handleChange}\n              error={Boolean(errors.email)}\n              inputProps={{\n                name: \"email\",\n                autoFocus: true,\n                ...register(\"email\"),\n              }}\n            />\n            {errors.email && (\n              <p className=\"text-error\">{errors.email?.message}</p>\n            )}\n          </div>\n\n          <Button\n            className=\"_btn _btn-primary\"\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            endIcon={loading && <LoopIcon className=\"ani-spin\" />}\n            size=\"large\"\n          >\n            Gửi email\n          </Button>\n        </form>\n\n        <div className=\"has-account\">\n          Quay lại trang&nbsp;\n          <Link to={ROUTES.LOGIN} className=\"account-link\">\n            Đăng nhập\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ForgotPasswordPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ListeningAdmin.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Admin.js",["952","953","954","955","956","957","958","959"],"import Grid from '@material-ui/core/Grid';\nimport communicateIcon from '../assets/icons/communicate.png';\nimport dictionaryIcon from '../assets/icons/dictionary.png';\nimport editIcon from '../assets/icons/edit.png';\nimport favoriteIcon from '../assets/icons/favorite.png';\nimport flashcardIcon from '../assets/icons/flashcard.png';\nimport friendsIcon from '../assets/icons/friends.png';\nimport gameIcon from '../assets/icons/game.png';\nimport grammarIcon from '../assets/icons/grammar.png';\nimport ipaIcon from '../assets/icons/ipa.png';\nimport toeicIcon from '../assets/icons/toeic.png';\nimport verbIcon from '../assets/icons/verb.png';\nimport medalIcon from '../assets/icons/medal.png';\nimport FeatureBox from '../components/FeatureBox';\nimport { ROUTES } from '../constants';\nimport useScrollTop from '../hooks/useScrollTop';\nimport useTitle from '../hooks/useTitle';\nimport React from 'react';\n\nconst FEATURE_LIST = [\n  {\n    title: 'Quản lý từ vựng',\n    subTitle:\n      'Quản lý tất cả từ vựng có trong hệ thống',\n    imgUrl: flashcardIcon,\n    to: ROUTES.WORD_ADMIN,\n  },\n  {\n    title: \"Quản lý bài nghe\",\n    subTitle: 'Quản lý tất cả các bài nghe có trong hệ thống',\n    imgUrl: communicateIcon,\n    to: ROUTES.LISTENING_ADMIN,\n  },\n  {\n    title: 'Quản lý quiz',\n    subTitle: 'Quản lý các bài quiz trong phần luyện nghe',\n    imgUrl: toeicIcon,\n    to: ROUTES.QUIZ_ADMIN,\n  },\n  {\n    title: 'Quản lý ngữ pháp',\n    imgUrl: grammarIcon,\n    subTitle: 'Quản lý tất cả ngữ pháp có trong hệ thống',\n    to: ROUTES.GRAMMAR_ADMIN,\n  },\n  {\n    title: 'Quản lý người dùng',\n    imgUrl: friendsIcon,\n    subTitle: 'Quản lý tất cả tài khoản người dùng có trong hệ thống',\n    to: ROUTES.USER_ADMIN\n  }\n];\n\nfunction AdminPage() {\n  useTitle('Admin');\n  // useScrollTop();\n\n  return (\n    <div className=\"container my-10\">\n      <Grid container spacing={3}>\n        {FEATURE_LIST.map((box, index) => (\n          <Grid item xs={12} md={6} lg={4} key={index}>\n            <FeatureBox\n              imgUrl={box.imgUrl}\n              title={box.title}\n              to={box.to}\n              subTitle={box.subTitle}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default AdminPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\WordAdmin.js",["960"],"import React, { useEffect, useRef, useState } from \"react\";\nimport useTitle from \"hooks/useTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { dictionaryRoot } from \"components/UI/style\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport AutoSearchInput from \"components/UI/AutoSearchInput\";\nimport InfiniteScroll from \"components/UI/InfiniteScroll\";\nimport WordSortModal from \"components/UI/WordSortModal\";\nimport WordItem from \"components/WordAdmin/WordItem\";\nimport WordPackSetting from \"components/WordAdmin/WordPackSetting\";\nimport WordSkeleton from \"components/WordAdmin/WordSkeleton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport commonApi from \"apis/commonApi\";\nimport wordApi from \"apis/wordApi\";\nimport WordDetailModal from \"components/UI/WordDetailModal\";\nimport { equalArray } from \"helper\";\nimport { ROUTES } from 'constants/index';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyle = makeStyles((theme) => ({\n  ...dictionaryRoot(theme),\n}));\nconst perPage = 20;\n\nexport default function WordAdminPage() {\n  useTitle(\"Word Admin\");\n  const classes = useStyle();\n  const history = useHistory();\n  const [page, setPage] = useState(1);\n  const [sortType, setSortType] = useState(\"rand\");\n  const [packInfo, setPackInfo] = useState(() => ({\n    type: \"-1\",\n    level: \"-1\",\n    specialty: \"-1\",\n    topics: [],\n  }));\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const totalPage = useRef(0);\n  const preSearchList = useRef([]);\n\n  const nextPage = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const onSettingWordPack = (info) => {\n    // check old pack vs new pack\n    let isEqual = true;\n    for (let k in packInfo) {\n      if (k !== \"topics\" && packInfo[k] !== info[k]) {\n        isEqual = false;\n        break;\n      }\n    }\n    if (isEqual) isEqual = equalArray(packInfo.topics, info.topics);\n\n    totalPage.current = 0;\n    preSearchList.current = [];\n    setMore(true);\n    setList([]);\n    setPackInfo(info);\n    setPage(1);\n  };\n\n  const onSortTypeChange = (type = \"rand\") => {\n    if (type === sortType) return;\n    preSearchList.current = [];\n    setSortType(type);\n    setPage(1);\n    setList([]);\n  };\n\n  const onSearchWord = async (word) => {\n    try {\n      if (word === \"\") {\n        setList(preSearchList.current);\n        setMore(true);\n        return;\n      }\n\n      const apiRes = await wordApi.searchWord(word);\n      if (apiRes.status === 200) {\n        const { packList = [] } = apiRes.data;\n        setList(packList);\n        setMore(false);\n      }\n    } catch (error) {}\n  };\n\n  // get total word pack\n  useEffect(() => {\n    let isSub = true;\n\n    (async function () {\n      try {\n        const apiRes = await commonApi.getWordPackTotal(packInfo);\n        if (apiRes && isSub) {\n          const { total = 0 } = apiRes.data;\n          totalPage.current = Math.ceil(total / perPage);\n        }\n      } catch (error) {}\n    })();\n\n    return () => (isSub = false);\n  }, [packInfo]);\n\n  // get word pack\n  useEffect(() => {\n    let isSub = true;\n\n    (async function () {\n      try {\n        setLoading(true);\n        const apiRes = await wordApi.getWordList(\n          page,\n          perPage,\n          packInfo,\n          sortType\n        );\n        if (apiRes && isSub) {\n          const { packList = [] } = apiRes.data;\n          const newList = [...list, ...packList];\n          preSearchList.current = newList;\n          setList(newList);\n        }\n      } catch (error) {\n      } finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n\n    return () => (isSub = false);\n  }, [page, packInfo, sortType]);\n\n  return (\n    <div className=\"container\">\n      <div className={`${classes.root} dyno-container`}>\n        {/* title - menu */}\n        <div className=\"flex-center-between\">\n          <h1 className=\"dyno-title\">Quản lý từ vựng</h1>\n          <div>\n            <AddIcon className=\"dyno-setting-icon mr-5\" onClick={() => history.push(ROUTES.ADD_WORD)} />\n            <WordSortModal\n              onSelect={onSortTypeChange}\n              classNameIcon=\"dyno-setting-icon mr-5\"\n            />\n            <WordPackSetting\n              onChoose={onSettingWordPack}\n              classNameIcon=\"dyno-setting-icon\"\n            />\n          </div>\n        </div>\n        <div className=\"dyno-break\"></div>\n\n        {/* list content */}\n        <div className={classes.contentWrap}>\n          <AutoSearchInput disabled={loading} onSearch={onSearchWord} />\n\n          <div className={`${classes.listWrap} w-100`}>\n            <ul id=\"dictionaryId\" className={`${classes.list} flex-col w-100`}>\n              <>\n                {isFirstLoad ? (\n                  <WordSkeleton className={classes.skeleton} />\n                ) : (\n                  <>\n                    {list && list.length > 0 ? (\n                      <>\n                        {/* render list */}\n                        {list.map((item, index) => (\n                          <li className={classes.listItem} key={index}>\n                            <WordItem {...item} />\n                          </li>\n                        ))}\n\n                        {/* infinite scrolling */}\n                        {!loading && more && (\n                          <InfiniteScroll\n                            onTouchAnchor={nextPage}\n                            threshold={1}\n                          >\n                            <div className=\"w-100 t-center\">\n                              <LoopIcon className=\"ani-spin\" />\n                            </div>\n                          </InfiniteScroll>\n                        )}\n                      </>\n                    ) : (\n                      // empty list\n                      <h3 className=\"notfound-title h-100 flex-center t-center\">\n                        Không tìm thấy từ nào trong từ điển\n                      </h3>\n                    )}\n                  </>\n                )}\n              </>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <WordDetailModal />\n    </div>\n  );\n}\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Profile.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\QuizAdmin.js",["961"],"import React from 'react'\nimport { dictionaryRoot } from '../components/UI/style'\nimport { makeStyles } from '@material-ui/styles';\nimport useTitle from './../hooks/useTitle';\nimport QuizAdminData from 'components/QuizAdmin/data';\n\nconst useStyle = makeStyles((theme) => ({\n  ...dictionaryRoot(theme)\n}))\n\nexport default function QuizAdminPage() {\n  useTitle('Listening Admin')\n  const classes = useStyle();\n  return (\n    <div className=\"container\">\n      <QuizAdminData />\n    </div>\n  )\n}\n\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\UserAdmin.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Listening.js",["962","963","964","965","966","967","968","969","970","971"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport useTitle from \"../hooks/useTitle\";\nimport { VideoCard } from \"material-ui-player\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {getListening}  from \"../redux/actions/listeningAction\";\nimport { useParams } from 'react-router-dom';\nimport incorrectIcon from 'assets/icons/checkAnswer/incorrect.gif';\nimport correctIcon from 'assets/icons/checkAnswer/correct.gif'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles((theme) => ({\n  tabcontents: {\n    border: \"1px solid #B7B7B7\",\n    padding: \"10px\",\n    backgroundColor: \"#FFF\",\n    borderRadius: \"0 3px 3px 3px\",\n}\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function ListeningPage() {\n  useTitle(\"Listening\");\n  const classes = useStyle();\n  const [value, setValue] = useState(1);\n  const [checkAnswer, setCheckAnswer] = useState(false);\n  const [showAnswer, setShowAnswer] = useState(false);\n  \n\n  const listenId = useParams().id;\n  const {listen, questions} = useSelector((state) => state.listeningReducer);\n \n  const dispatch = useDispatch();\n  useEffect(() =>\n  dispatch(getListening(listenId),[dispatch]))\n\n  window.localStorage.setItem(listenId, listen.Name);\n  console.log(window.localStorage)\n\n  const [answers, setAnswers] = useState([]);\n  const [isCorrect, setisCorrect] = useState([]);\n  const handleClickShowAnswer = () =>{\n     setShowAnswer(true)\n  };\n\n  const handleClickReset = () =>{\n    if (window.confirm('Do you want reload page again?')) {\n      window.location.reload();\n    }\n };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleCheck = (index, i) => {\n    if(answers[index]){\n      if(answers[index].includes(i)){\n        for (var j = 0; j < answers[index].length; j++) {\n          if (answers[index][j] == i) {\n             answers[index].splice(j, 1);\n          }\n        }\n      }\n      else{\n        answers[index].push(i)\n      }\n    }\n    else{\n      let ar=[];\n      answers[index]=ar;\n      answers[index].push(i);\n    }\n  };\n  \n  const handleClickCheckAnswer = ()=>{\n  if(answers.length>0){\n      for(var i=0;i<answers.length;i++){\n        if(answers[i])\n        {\n          if(answers[i].length>0){\n            if(answers[i].length>1) {isCorrect[i]=false;}\n            else{\n              if(questions[i].Answers[answers[i][0]].isCorrect==true) {isCorrect[i]=true;}\n              if(questions[i].Answers[answers[i][0]].isCorrect==false) {isCorrect[i]=false;}\n            }\n          }\n          else{\n            if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n              window.close();\n            }\n          }\n        }\n        else{\n          if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n            window.close();\n          }\n        }\n      }\n    }\n    else{\n        if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n          window.close();\n        }\n    }\n    setCheckAnswer(true);\n    setShowAnswer(true)\n  }\n\n  console.log(localStorage\n    );\n  return (\n    <>\n      <Container>\n        <Typography variant=\"h6\" align=\"center\">\n      {listen.Name}\n        </Typography>\n\n        <Typography>\n        {listen.Description}\n        </Typography>\n\n        <p align=\"center\"><iframe src={listen.Video} width=\"500\" height=\"300\" ></iframe></p>\n\n        \n\n        <Box sx={{ width: \"100%\" }}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }} >\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"basic tabs example\"\n              indicatorColor=\"primary\"\n            >\n              <Tab label=\"Script\" {...a11yProps(0)} />\n              <Tab label=\"Quiz\" {...a11yProps(1)} />\n            </Tabs>\n          </Box>\n          <div className={classes.tabcontents}>\n          <TabPanel value={value} index={0}>\n          <td dangerouslySetInnerHTML={{__html: listen.Script}} />\n          </TabPanel>\n\n          <TabPanel value={value} index={1}>\n            <Typography variant=\"h6\">\n              Answer the following questions about the interview.\n            </Typography>\n\n\n            {questions && (\n            questions.map((question, index) => \n            <><Typography variant=\"body2\">\n               {index+1}) {question.Content}\n                { checkAnswer && isCorrect[index]==true && (\n                <span>\n                <img src={correctIcon} alt=\"Correct!\"/>\n                </span>\n                )} \n                 { checkAnswer && isCorrect[index]==false &&(\n                <span>\n                <img src={incorrectIcon} alt=\"Correct!\"/>\n                </span>\n                )} \n              </Typography>\n              <FormGroup>\n                  {question.Answers.map((item, i) => \n                  (showAnswer && item.isCorrect==true ?(\n                  <FormControlLabel\n                    key={i}\n                    control={<Checkbox color=\"primary\" id={`${item}-${i}`} onClick={()=>handleCheck(index,i)}/>}\n                    label={<Typography style={{ color: '#008000' }}><strong>{item.content}</strong></Typography>}\n                  >\n                  </FormControlLabel>\n                  ):(\n                    <FormControlLabel\n                    key={i}\n                    control={<Checkbox color=\"primary\" id={`${item}-${i}`} onClick={()=>handleCheck(index,i)}/>}\n                    label={item.content}\n                  >\n                  </FormControlLabel>\n                  )\n                  ))} \n                </FormGroup></>                        \n            )\n            )}\n           \n\n            <Button color='primary' onClick={()=> handleClickCheckAnswer()}>Check Answers</Button>\n            <Button color='primary' onClick={()=> handleClickReset()}>Reset Quiz</Button>\n            <Button color='primary' onClick={()=> handleClickShowAnswer()}>Show Answers</Button>\n          </TabPanel>\n          </div>\n        </Box>\n      </Container>\n    </>\n  );\n}\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\AddWord.js",["972"],"import React, { useState } from \"react\";\nimport WordContributionData from \"components/WordAdmin/AddWord/data\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles(() => ({\n  root: {\n    margin: \"3.2rem 0\",\n  },\n}));\n\nfunction AddWordPage() {\n  const classes = useStyle();\n\n  return (\n    <div className=\"container\">\n      <div className={classes.root}>\n        <div className=\"ani-fade\">\n          <WordContributionData />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddWordPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\EditWord.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ListeningDetail.js",["973","974","975","976"],"import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useTitle from \"../hooks/useTitle\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {getListening}  from \"../redux/actions/listeningAction\";\nimport { useParams } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport default function ListeningPage() {\n  useTitle(\"Listening\");\n\n  const listenId = useParams().id;\n  const {listen} = useSelector((state) => state.listeningReducer);\n \n  const history = useHistory();\n\n  function handleClickEdit() {\n    history.push(`/admin/listening/edit/${listen._id}`);\n  }\n\n  function handleClickGoBack() {\n    history.push(\"/admin/listening\");\n  }\n\n\n  const dispatch = useDispatch();\n  useEffect(() => \n  dispatch(getListening(listenId)), [dispatch])\n\n  return (\n    <>\n      <Container>\n        <Typography variant=\"h6\" align=\"center\">\n        {listen.Name}\n        </Typography>\n\n        <Typography>\n        {listen.Description}\n        </Typography>\n       \n        <p align=\"center\"><iframe src={listen.Video} width=\"500\" height=\"300\" ></iframe></p>\n\n    <Typography variant=\"h6\">\n        Topic:    <i><mark>  {listen.Topic} </mark></i>\n    </Typography>\n    \n    <Typography variant=\"h6\">\n        Script: \n    </Typography>\n    <td dangerouslySetInnerHTML={{__html: listen.Script}} />\n             \n    <Button color='primary' onClick={() => handleClickGoBack()}>GO BACK</Button>\n    <Button color='primary'onClick={() => handleClickEdit()}>Edit</Button>\n         \n       \n      </Container>\n    </>\n  );\n}\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\IPA.js",["977","978","979","980"],"import ipaChartSrc from 'assets/images/ipa/ipa-chart.png';\nimport ipaTableSrc from 'assets/images/ipa/ipa-table.jpg';\nimport mouthShapeSrc from 'assets/images/ipa/mouth-shape.png';\nimport Consonants from 'components/IPA/Consonants';\nimport Diphthongs from 'components/IPA/Diphthongs';\nimport Vowels from 'components/IPA/Vowels';\nimport useTitle from 'hooks/useTitle';\nimport React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction IPAPage() {\n  useTitle('IPA');\n\n  return (\n    <div className=\"container dyno-box\">\n\n          <Typography variant=\"h4\" align=\"center\">\n                 Pronunciation\n            </Typography>\n            <Typography variant=\"h6\" align=\"center\">\n            Introduction to The Sounds of English\n            </Typography>      \n\n      <p align=\"center\"><iframe src= \"https://www.youtube.com/embed/3Wz95t3fKF4?enablejsapi=1\" width=\"500\" height=\"300\"></iframe></p>\n      <Typography align=\"center\" >\n      This is the introductory video to our The sounds of English series\n      </Typography> \n       \n      <Vowels />\n      <Diphthongs />\n      <Consonants />\n\n     \n    </div>\n  );\n}\n\nexport default IPAPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\UserDetail.js",["981","982","983","984","985"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport userApi from \"./../apis/userApi\";\nimport useTitle from \"hooks/useTitle\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport { useDispatch } from \"react-redux\";\nimport { formatDate } from \"helper\";\nimport { useParams } from \"react-router\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { useHistory } from 'react-router-dom';\n\nconst useStyle = makeStyles(() => ({\n  wrap: {\n    minHeight: \"calc(100vh - 7.2rem)\",\n  },\n\n  root: {\n    backgroundColor: \"var(--bg-color-sec)\",\n    padding: \"1.5rem 2.5rem\",\n    borderRadius: \"var(--border-radius)\",\n    textAlign: \"center\",\n    boxShadow: \"var(--box-shadow)\",\n  },\n\n  avtWrap: {\n    width: \"15rem\",\n    height: \"15rem\",\n    position: \"relative\",\n  },\n\n  avt: {\n    borderRadius: \"50%\",\n    border: \"2px solid var(--primary-color)\",\n  },\n\n  cameraIconWrap: {\n    position: \"absolute\",\n    right: 0,\n    bottom: 0,\n\n    width: \"4.2rem\",\n    height: \"4.2rem\",\n    padding: \"1.2rem\",\n\n    backgroundColor: \"var(--primary-color)\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    border: \"solid 5px var(--bg-color-sec)\",\n\n    \"&:hover, &:active\": {\n      opacity: 0.85,\n    },\n  },\n\n  cameraIcon: {\n    color: \"var(--text-color)\",\n    fontSize: \"2rem\",\n  },\n\n  fileInput: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    top: 0,\n    left: 0,\n    opacity: 0,\n    cursor: \"pointer\",\n  },\n\n  name: {\n    fontSize: \"2.4rem\",\n    lineHeight: 1.5,\n    letterSpacing: \"0.75px\",\n  },\n\n  role: {\n    fontSize: \"1.5rem\",\n    fontWeight: 400,\n    color: \"var(--label-color)\",\n    letterSpacing: \"0.75px\",\n    textTransform: \"capitalize\",\n  },\n\n  info: {\n    margin: \"2.4rem 0\",\n\n    \"& p\": {\n      lineHeight: 2,\n      fontSize: \"1.6rem\",\n      letterSpacing: \"0.75px\",\n      color: \"var(--text-color)\",\n    },\n  },\n\n  coin: {\n    color: \"var(--label-color)\",\n    fontWeight: \"bold\",\n    fontSize: \"2rem\",\n  },\n  icon: {\n    fontSize: \"1.8rem\",\n    color: \"var(--grey)\",\n    cursor: \"pointer\",\n  },\n\n  visiblePw: {\n    color: \"var(--primary-color)\",\n  },\n  visibleConfirmPw: {\n    color: \"var(--primary-color)\",\n  },\n  editBtn: {\n    padding: \"5px 10px\",\n    width: \"100%\",\n  },\n  textError: {\n    marginTop: \"4px\",\n    color: \"var(--error-color)\",\n    fontSize: \"1.2rem\",\n    textAlign: \"left\",\n  },\n}));\n\nexport default function UserDetailPage() {\n  useTitle(\"User Detail\");\n  const classes = useStyle();\n  const { user } = useSelector((state) => state.authReducer);\n  const { user_id } = useParams();\n  const [userDetail, setUserDetail] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    (async function () {\n      const res = await userApi.getUserDetails(user_id);\n      setUserDetail(res.data.user);\n    })();\n    return () => {};\n  }, [user_id]);\n  \n  const handleLockUser = async () => {\n    try {\n      const res = await userApi.lockUser(user_id);\n      if (res) {\n        dispatch(setMessage(res.data.message, 'success'));\n        window.location.reload();\n      }\n    }\n    catch (err) {\n      dispatch(setMessage(err.response.data.message, 'error'));\n    }\n  }\n\n  const handleUnlockUser = async () => {\n    try {\n      const res = await userApi.unlockUser(user_id);\n      if (res) {\n        dispatch(setMessage(res.data.message, 'success'));\n        window.location.reload();\n      }\n    }\n    catch (err) {\n      dispatch(setMessage(err.response.data.message, 'error'));\n    }\n  }\n\n  return (\n    <div className={`${classes.wrap} container flex-center`}>\n      <div className={classes.root}>\n        <div className=\"flex-center w-100 h-100\">\n          <div className={classes.avtWrap}>\n            <img\n              src={userDetail.avatar}\n              alt=\"\"\n              className={`${classes.avt} w-100 h-100`}\n            />\n          </div>\n        </div>\n        <div className=\"mt-10\">\n          <h2 className={classes.name}>{userDetail.name}</h2>\n          <h4 className={classes.role}>{userDetail.roleType}</h4>\n        </div>\n\n        <div className={classes.info}>\n          <p>{userDetail.email}</p>\n          <p>Đã tham gia vào {formatDate(userDetail.createdAt)}</p>\n          <p>\n            Số coin hiện tại:{\" \"}\n            <span className={classes.coin}>{userDetail.coin}</span>\n          </p>\n        </div>\n\n        <div className=\"d-flex-center flex-center-col w-100\">\n          <Button\n            className={`${classes.editBtn} _btn _btn-primary mb-5`}\n            startIcon={<EditIcon />}\n            onClick={() => history.push(`/admin/user/edit/${user_id}`)}\n          >\n            Chỉnh sửa\n          </Button>\n          {userDetail.isLocked !== 0 ? (\n            <Button\n              className={`${classes.editBtn} _btn _btn-primary`}\n              startIcon={<LockOpenIcon />}\n              onClick={handleUnlockUser}\n            >\n              Mở tài khoản\n            </Button>\n          ) : (\n            <Button\n              className={`${classes.editBtn} _btn _btn-primary`}\n                startIcon={<LockIcon />}\n                onClick={handleLockUser}\n            >\n              Khóa tài khoản\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\CreateListening.js",["986"],"import React, { useState } from \"react\";\nimport CreateListeningData from \"components/ListeningAdmin/CreateListen/data\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles(() => ({\n  root: {\n    margin: \"3.2rem 0\",\n  },\n}));\n\nfunction CreateListeningPage() {\n  const classes = useStyle();\n\n  return (\n    <div className=\"container\">\n      <div className={classes.root}>\n        <div className=\"ani-fade\">\n          <CreateListeningData />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateListeningPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Vocabulary.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Game.js",["987","988","989","990"],"import Grid from '@material-ui/core/Grid';\nimport brainIcon from 'assets/icons/games/brain.png';\nimport correctWordIcon from 'assets/icons/games/correct-word.png';\nimport grammarlyIcon from 'assets/icons/games/grammarly.png';\nimport jigsawIcon from 'assets/icons/games/jigsaw.png';\nimport millionaireIcon from 'assets/icons/games/millionaire.png';\nimport wordMatchingIcon from 'assets/icons/games/word-match.png';\nimport oppositeIcon from 'assets/icons/games/opposite.png';\nimport FeatureBox from 'components/FeatureBox';\nimport { ROUTES } from 'constants/index';\nimport useScrollTop from 'hooks/useScrollTop';\nimport useTitle from 'hooks/useTitle';\nimport React from 'react';\n\n\nconst GAME_LIST = [\n  {\n    title: 'Hãy chọn từ đúng',\n    subTitle:\n      'Ôn tập từ vựng bằng cách chọn 1 đáp án đúng nhất trong 4 câu trả lời có nghĩa khớp với từ được cho',\n    imgUrl: correctWordIcon,\n    to: ROUTES.HOME,\n  },\n  {\n    title: 'Ghép từ',\n    subTitle:\n      'Ghép các ký tự đã cho thành một chữ có nghĩa đúng với từ đã cho',\n    imgUrl: wordMatchingIcon,\n    to: ROUTES.HOME,\n  },\n  {\n    title: 'Tay nhanh hơn não',\n    subTitle:\n      'Chọn một hình ảnh đúng với từ đã cho trong thời gian nhanh nhất nhé',\n    imgUrl: brainIcon,\n    to: ROUTES.HOME,\n  },\n  // {\n  //   title: 'Đồng nghĩa - trái nghĩa',\n  //   subTitle: 'Chọn tất cả các từ đồng nghĩa (trái nghĩa) với từ đã cho',\n  //   imgUrl: oppositeIcon,\n  //   to: ROUTES.HOME,\n  // }, \n\n  // {\n  //   title: 'Ai là triệu phú',\n  //   subTitle:\n  //     'Trải nghiệm game show truyền hình \"Ai là triệu phú\" phiên bản tiếng Anh ngay',\n  //   imgUrl: millionaireIcon,\n  //   to: ROUTES.HOME,\n  // },\n  // {\n  //   title: 'Nối từ',\n  //   subTitle:\n  //     'Cùng bắt trend nối từ đã từ rầm rộ trên mạng xã hội nhé',\n  //   imgUrl: jigsawIcon,\n  //   to: ROUTES.HOME,\n  // },\n  // {\n  //   title: 'Điền vào chỗ trống',\n  //   subTitle:\n  //     'Luyện tập ngữ pháp với câu trắc nghiệm điền vào chỗ trống sao cho phù hợp nhé',\n  //   imgUrl: grammarlyIcon,\n  //   to: ROUTES.HOME,\n  // }, \n];\n\nfunction PlayGamesPage() {\n  useTitle('Game');\n  useScrollTop();\n\n  return (\n    <div className=\"container my-10\">\n      <Grid container spacing={3}>\n        {GAME_LIST.map((box, index) => (\n          <Grid item xs={12} md={6} lg={4} key={index}>\n            <FeatureBox\n              imgUrl={box.imgUrl}\n              title={box.title}\n              to={box.to}\n              subTitle={box.subTitle}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default PlayGamesPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ListeningTopics.js",["991","992"],"import React from 'react'\nimport {LISTEN_TOPIC  } from 'constants/listeningTopics';\nimport { makeStyles } from \"@material-ui/styles\";\nimport { dictionaryRoot } from \"../components/UI/style\";\nimport { Grid } from '@material-ui/core';\nimport TopicBox from '../components/TopicBox/index';\nimport useTitle from \"../hooks/useTitle\";\nimport { Link } from 'react-router-dom';\nimport Typography from \"@material-ui/core/Typography\";\nconst useStyle = makeStyles((theme) => ({\n  ...dictionaryRoot(theme),\n}));\n\nexport default function WordTopicPage() {\n  useTitle(\"Listen Topic\")\n  const classes = useStyle();\n  return (\n    <div className={`${classes.root} dyno-container`}>\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">Topics</h1>\n      </div>\n      <div className=\"dyno-break\"></div>\n      <Grid container spacing={3}>\n        {LISTEN_TOPIC.map((topic, index) => (\n          <Grid item xs={12} md={4} key={index}>\n            <Link\n               to={`/listening/topic/${topic.value}`}>\n              <img src={topic.image} width=\"250px\" height=\"150px\" align=\"center\" />\n              <Typography variant=\"h6\" align=\"center\"> {topic.label} </Typography>\n            </Link>\n           \n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  )\n}\n\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\ListeningByTopic.js",["993","994","995","996","997"],"import useTitle from 'hooks/useTitle';\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport React, { useState, useEffect } from 'react';\nimport listeningApi from '../apis/listeningApi';\nimport { useHistory, useParams } from 'react-router';\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from 'constants/index';\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyle = makeStyles(() => ({\n  mobilelist : {\n    height: \"115px\",\n \n},\nfloatleft: {\n  float: \"left\",\n  margin: \"0 10px 10px 0px\",\n  padding: \"2px\",\n},\ntitle: {\n  display: 'inline-block',\n  fontSize: '2.0rem',\n  fontWeight: 400,\n  color: 'blue',\n  margin: '0.8rem 0rem 0rem 0',\n},\ntldetail: {\n  fontSize: '1.5rem',\n  fontWeight:400,\n  color: 'black', \n},\ntextlimit: {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  width: \"500px\",\n}\n\n}));\n\nfunction ListeningByTopicPage() {\n  useTitle('Listening');\n  const [list, setList] = useState([]);\n  const classes= useStyle();\n  const history = useHistory();\n\n  const  topic = useParams().topic;\n  \n   useEffect(() => {\n   (async function () {\n     try {\n       const apiRes = await listeningApi.getListenByTopic(topic,\"Newest\");\n       if (apiRes.status === 200) {\n           console.log(apiRes.data)\n         setList(apiRes.data.listens);\n       }\n     } catch (error) {}\n   })();\n \n   return () => {};\n }, []);\n\n const getImage = (image) =>{\n    const imgSrc = cloudinaryImgOptimize( image ? image : DEFAULTS.IMAGE_SRC,\n         200,\n         200,\n         true,\n         true\n     );\n     return imgSrc;\n}\n\nconst viewDetail=(id)=>{\n    history.push(`/listening/details/${id}`)\n}\n\n  return (\n    <div className=\"container\">\n\n        <Typography variant=\"h6\" align=\"center\">\n                {topic}\n        </Typography>\n                \n      {list &&(\n      list.map((item) => \n   \n      <div className={classes.mobilelist} >\n      <div>\n        <div className={classes.floatleft}>\n          <a>\n            <img height=\"80px\" width=\"80px\" src={getImage(item.Image)} onClick={()=>viewDetail(item._id)}/>\n          </a>\n          </div>\n          <a className={classes.title} href={`/listening/details/${item._id}`}><strong> {item.Name}</strong></a>\n          <br></br>\n          \n          <div className={classes.textlimit}>\n          <span className={classes.tldetail}>{item.Description}</span>\n          </div>\n      \n      </div>\n\n    </div>\n   \n     \n      ))}\n\n     \n    </div>\n  );\n}\n\nexport default ListeningByTopicPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\Grammar.js",["998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport useTitle from \"../hooks/useTitle\";\nimport { VideoCard } from \"material-ui-player\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {getGrammar}  from \"../redux/actions/grammarAction\";\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from \"@material-ui/core\";\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from '../constants/index';\nimport incorrectIcon from 'assets/icons/checkAnswer/incorrect.gif';\nimport correctIcon from 'assets/icons/checkAnswer/correct.gif'\n  \nconst useStyle = makeStyles(() => ({\n    borderTopic: {\n        borderStyle: \"solid\",\n        borderColor: \"initial\",\n        borderWidth: \"1px\",\n        backgroundColor: \"#ccff66\",\n        width: \"700px\",\n        height: \"auto\",\n      },\n      grammarbox: {\n        backgroundColor: \"#CF9\",\n        padding: \"10px 10px\",\n        border: \"1px solid #666\",\n        marginBottom: \"10px\",\t\n      },\n      picture: {\n        width: '50rem',\n        height: '30rem',\n        marginLeft: '15rem',\n      },\n   \n  }));\n  \n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function GrammarPage() {\n  useTitle(\"Grammar\");\n  const classes= useStyle();\n  const [value, setValue] = useState(0);\n  const [checkAnswer, setCheckAnswer] = useState(false);\n  const [showAnswer, setShowAnswer] = useState(false);\n\n\n  const grammarId = useParams().id;\n  const {grammar, questions} = useSelector((state) => state.grammarReducer);\n \n  const dispatch = useDispatch();\n  useEffect(() => \n  dispatch(getGrammar(grammarId), [dispatch]))\n\n  const [answers, setAnswers] = useState([]);\n\n  const getText = (text) =>{\n    let Text =[];\n    if(text){\n    Text = text.split(\"\\n\");\n    } \n    return Text;\n  };\n\n  let imgSrc = null;\n    if(grammar)\n    {\n        imgSrc = cloudinaryImgOptimize( grammar.Image ? grammar.Image : DEFAULTS.IMAGE_SRC,\n            200,\n            200,\n            true,\n            true\n        );\n    }\n\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n  const [isCorrect, setisCorrect] = useState([]);\n\n  const handleClickShowAnswer = () =>{\n    setShowAnswer(true)\n };\n\n const handleClickReset = () =>{\n   if (window.confirm('Do you want reload page again?')) {\n     window.location.reload();\n   }\n};\n\n const handleCheck = (index, i) => {\n   if(answers[index]){\n     if(answers[index].includes(i)){\n       for (var j = 0; j < answers[index].length; j++) {\n         if (answers[index][j] == i) {\n            answers[index].splice(j, 1);\n         }\n       }\n     }\n     else{\n       answers[index].push(i)\n     }\n   }\n   else{\n     let ar=[];\n     answers[index]=ar;\n     answers[index].push(i);\n   }\n };\n \n const handleClickCheckAnswer = ()=>{\n if(answers.length>0){\n   console.log(answers)\n     for(var i=0;i<answers.length;i++){\n       if(answers[i])\n       {\n         console.log(i)\n        console.log(answers[i])\n         if(answers[i].length>0){\n           if(answers[i].length>1) {isCorrect[i]=false;}\n           else{\n             if(questions[i].Answers[answers[i][0]].isCorrect==true) {isCorrect[i]=true;}\n             if(questions[i].Answers[answers[i][0]].isCorrect==false) {isCorrect[i]=false;}\n           }\n         }\n         else{\n           if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n             window.close();\n           }\n         }\n       }\n       else{\n        if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n          window.close();\n        }\n       }\n     }\n   }\n   else{\n       if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n         window.close();\n       }\n   }\n   setCheckAnswer(true);\n   setShowAnswer(true)\n }\n\n  return (\n    <>\n      <Container>\n        <><Typography variant=\"h6\" align=\"center\">\n            {grammar.Title}\n        </Typography>\n        <Typography>\n            {grammar.Content}\n        </Typography></>\n\n        {grammar.Video ?  (\n              <p align=\"center\"><iframe src= {grammar.Video} width=\"500\" height=\"300\"></iframe></p>             \n            ):(              \n                <img className={classes.picture} src={imgSrc} alt=\"photo\" align=\"center\" />\n        )}\n        \n        {grammar.Audio && (\n        <audio controls>\n        <source src={grammar.Audio} type=\"audio/mpeg\"/>\n        Your browser does not support the audio element.\n        </audio>\n        )}\n\n        <Box sx={{ width: \"100%\" }}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"basic tabs example\"\n              indicatorColor=\"primary\"\n            >\n              <Tab label=\"Script\" {...a11yProps(0)} />\n              <Tab label=\"Grammar\" {...a11yProps(1)} />\n              <Tab label=\"Quiz\" {...a11yProps(2)} />\n             \n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n          <td dangerouslySetInnerHTML={{__html: grammar.Script}} />\n          </TabPanel>\n\n          <TabPanel value={value} index={1}>\n          {grammar.Items && (\n              grammar.Items.map((item, index) =>\n            <>\n            <Typography className={classes.grammarbox}>\n              <p><strong>Point {index+1} :  </strong>{item.Point}</p>\n            </Typography>\n           \n            <div>\n                {getText(item.Examples).map((it) => \n                <Typography variant=\"body2\" align=\"justify\">\n                {it}\n                </Typography>\n                )}\n            </div></>\n         ))}\n          </TabPanel>\n                \n          <TabPanel value={value} index={2}>\n            <Typography variant=\"h6\">\n              Answer the following questions about the interview.\n            </Typography>\n\n\n            {questions && (\n            questions.map((question, index) => \n            <><Typography variant=\"body2\">\n               {index+1}) {question.Content}\n                { checkAnswer && isCorrect[index]==true && (\n                <span>\n                <img src={correctIcon} alt=\"Correct!\"/>\n                </span>\n                )} \n                 { checkAnswer && isCorrect[index]==false &&(\n                <span>\n                <img src={incorrectIcon} alt=\"Correct!\"/>\n                </span>\n                )} \n              </Typography>\n              <FormGroup>\n                  {question.Answers.map((item, i) => \n                  (showAnswer && item.isCorrect==true ?(\n                  <FormControlLabel\n                    key={i}\n                    control={<Checkbox color=\"primary\" id={`${item}-${i}`} onClick={()=>handleCheck(index,i)}/>}\n                    label={<Typography style={{ color: '#008000' }}><strong>{item.content}</strong></Typography>}\n                  >\n                  </FormControlLabel>\n                  ):(\n                    <FormControlLabel\n                    key={i}\n                    control={<Checkbox color=\"primary\" id={`${item}-${i}`} onClick={()=>handleCheck(index,i)}/>}\n                    label={item.content}\n                  >\n                  </FormControlLabel>\n                  )\n                  ))} \n                </FormGroup></>                        \n            )\n            )}\n           \n\n            <Button color='primary' onClick={()=> handleClickCheckAnswer()}>Check Answers</Button>\n            <Button color='primary' onClick={()=> handleClickReset()}>Reset Quiz</Button>\n            <Button color='primary' onClick={()=> handleClickShowAnswer()}>Show Answers</Button>\n          </TabPanel>\n               \n        </Box>\n      </Container>\n    </>\n  );\n}\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\EditListening.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\GrammarByLevel.js",["1009","1010","1011","1012","1013"],"import useTitle from 'hooks/useTitle';\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport React, { useState, useEffect } from 'react';\nimport grammarApi from '../apis/grammarApi';\nimport { useHistory, useParams } from 'react-router';\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from 'constants/index';\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyle = makeStyles(() => ({\n  mobilelist : {\n    height: \"115px\",\n \n},\nfloatleft: {\n  float: \"left\",\n  margin: \"0 10px 10px 0px\",\n  padding: \"2px\",\n},\ntitle: {\n  display: 'inline-block',\n  fontSize: '2.0rem',\n  fontWeight: 400,\n  color: 'blue',\n  margin: '0.8rem 0rem 0rem 0',\n},\ntldetail: {\n  fontSize: '1.5rem',\n  fontWeight:400,\n  color: 'black', \n},\ntextlimit: {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  width: \"500px\",\n}\n\n}));\n\nfunction GrammarByLevelPage() {\n  useTitle('Grammar');\n  const [list, setList] = useState([]);\n  const classes= useStyle();\n  const history = useHistory();\n\n  const  level = useParams().level;\n  \n   useEffect(() => {\n   (async function () {\n     try {\n       const apiRes = await grammarApi.getGrammarByLevel(level);\n       if (apiRes.status === 200) {\n           console.log(apiRes.data)\n         setList(apiRes.data.grammars);\n       }\n     } catch (error) {}\n   })();\n \n   return () => {};\n }, []);\n\n const getImage = (image) =>{\n    const imgSrc = cloudinaryImgOptimize( image ? image : DEFAULTS.IMAGE_SRC,\n         200,\n         200,\n         true,\n         true\n     );\n     return imgSrc;\n}\n\nconst viewDetail=(id)=>{\n    history.push(`/grammar/details/${id}`)\n}\n\n  return (\n    <div className=\"container\">\n\n        <Typography variant=\"h6\" align=\"center\">\n               Level {level}\n        </Typography>\n                \n      {list &&(\n      list.map((item) => \n   \n      <div className={classes.mobilelist} >\n      <div>\n        <div className={classes.floatleft}>\n          <a>\n            <img height=\"80px\" width=\"80px\" src={getImage(item.Image)} onClick={()=>viewDetail(item._id)}/>\n          </a>\n          </div>\n          <a className={classes.title} href={`/grammar/details/${item._id}`}><strong> {item.Title}</strong></a>\n          <br></br>\n          \n          <div className={classes.textlimit}>\n          <span className={classes.tldetail}>{item.Content}</span>\n          </div>\n      \n      </div>\n\n    </div>\n   \n     \n      ))}\n\n     \n    </div>\n  );\n}\n\nexport default GrammarByLevelPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\GrammarLevels.js",["1014","1015"],"import React from 'react'\nimport {GRAMMAR_LEVEL  } from 'constants/grammarLevels';\nimport { makeStyles } from \"@material-ui/styles\";\nimport { dictionaryRoot } from \"../components/UI/style\";\nimport { Grid } from '@material-ui/core';\nimport TopicBox from '../components/TopicBox/index';\nimport useTitle from \"../hooks/useTitle\";\nimport { Link } from 'react-router-dom';\n\nconst useStyle = makeStyles((theme) => ({\n  ...dictionaryRoot(theme),\n}));\n\nexport default function WordTopicPage() {\n  useTitle(\"Grammar Level\")\n  const classes = useStyle();\n  return (\n    <div className={`${classes.root} dyno-container`}>\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">Levels</h1>\n      </div>\n      <div className=\"dyno-break\"></div>\n      <Grid container spacing={3}>\n        {GRAMMAR_LEVEL.map((level, index) => (\n          <Grid item xs={12} md={4} key={index}>\n            <Link\n              to={`/grammar/level/${level.value}`}>\n              <img  src={level.image} alt=\"photo\" align=\"center\" />\n             \n            </Link>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  )\n}\n\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\EditGrammar.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\CreateGrammar.js",["1016"],"import React, { useState } from \"react\";\nimport CreateGrammarData from \"components/GrammarAdmin/CreateGrammar/data\";\n//import CreateListeningData from \"components/ListeningAdmin/CreateListen/data\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles(() => ({\n  root: {\n    margin: \"3.2rem 0\",\n  },\n}));\n\nfunction CreateGrammarPage() {\n  const classes = useStyle();\n\n  return (\n    <div className=\"container\">\n      <div className={classes.root}>\n        <div className=\"ani-fade\">\n          <CreateGrammarData />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateGrammarPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\WordTopic.js",["1017"],"import React from 'react'\nimport { TOPICS } from 'constants/topics';\nimport { makeStyles } from \"@material-ui/styles\";\nimport { dictionaryRoot } from \"../components/UI/style\";\nimport { Grid } from '@material-ui/core';\nimport TopicBox from './../components/TopicBox/index';\nimport { ROUTES } from 'constants/index';\nimport useTitle from \"./../hooks/useTitle\";\n\nconst useStyle = makeStyles((theme) => ({\n  ...dictionaryRoot(theme),\n}));\n\nexport default function WordTopicPage() {\n  useTitle(\"Word Topic\")\n  const classes = useStyle();\n  return (\n    <div className={`${classes.root} dyno-container`}>\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">Từ vựng</h1>\n      </div>\n      <div className=\"dyno-break\"></div>\n      <Grid container spacing={3}>\n        {TOPICS.map((topic, index) => (\n          <Grid item xs={12} md={4} key={index}>\n            <TopicBox\n              to={`/word/${topic.key}`}\n              icon={topic.icon}\n              title={topic.title}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  )\n}\n\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\GrammarDetail.js",["1018","1019","1020","1021"],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\EditUser.js",["1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032"],"import { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport SelectCustom from \"components/UI/SelectCustom\";\nimport { ROUTES, ROLE_TYPE } from \"constants/index\";\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport { convertImageToBase64 } from \"helper/index\";\nimport useTitle from \"hooks/useTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport userApi from 'apis/userApi';\nimport { useParams } from 'react-router';\n\nconst nameRegex = /^[^\\d~`!@#$%^&*\\(\\)\\\\\\|\\.,\\?\\/\\-\\+\\=\\_]+$/gi;\nconst schema = yup.object().shape({\n  email: yup.string().trim().required(\"Nhập email\").email(\"Email không hợp lệ\"),\n  name: yup\n    .string()\n    .trim()\n    .required(\"Nhập họ tên\")\n    .matches(nameRegex, \"Họ tên không chứa số và ký tự đặc biệt\"),\n});\n\nconst useStyle = makeStyles(() => ({\n  wrap: {\n    minHeight: \"calc(100vh - 7.2rem)\",\n  },\n\n  root: {\n    backgroundColor: \"var(--bg-color-sec)\",\n    padding: \"1.5rem 2.5rem\",\n    borderRadius: \"var(--border-radius)\",\n    textAlign: \"center\",\n    boxShadow: \"var(--box-shadow)\",\n  },\n\n  avtWrap: {\n    width: \"15rem\",\n    height: \"15rem\",\n    position: \"relative\",\n  },\n\n  avt: {\n    borderRadius: \"50%\",\n    border: \"2px solid var(--primary-color)\",\n  },\n\n  cameraIconWrap: {\n    position: \"absolute\",\n    right: 0,\n    bottom: 0,\n\n    width: \"4.2rem\",\n    height: \"4.2rem\",\n    padding: \"1.2rem\",\n\n    backgroundColor: \"var(--primary-color)\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    border: \"solid 5px var(--bg-color-sec)\",\n\n    \"&:hover, &:active\": {\n      opacity: 0.85,\n    },\n  },\n\n  cameraIcon: {\n    color: \"var(--text-color)\",\n    fontSize: \"2rem\",\n  },\n\n  fileInput: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    top: 0,\n    left: 0,\n    opacity: 0,\n    cursor: \"pointer\",\n  },\n\n  name: {\n    fontSize: \"2.4rem\",\n    lineHeight: 1.5,\n    letterSpacing: \"0.75px\",\n  },\n\n  role: {\n    fontSize: \"1.5rem\",\n    fontWeight: 400,\n    color: \"var(--label-color)\",\n    letterSpacing: \"0.75px\",\n    textTransform: \"capitalize\",\n  },\n\n  info: {\n    margin: \"2.4rem 0\",\n\n    \"& p\": {\n      lineHeight: 2,\n      fontSize: \"1.6rem\",\n      letterSpacing: \"0.75px\",\n      color: \"var(--text-color)\",\n    },\n  },\n\n  coin: {\n    color: \"var(--label-color)\",\n    fontWeight: \"bold\",\n    fontSize: \"2rem\",\n  },\n  icon: {\n    fontSize: \"1.8rem\",\n    color: \"var(--grey)\",\n    cursor: \"pointer\",\n  },\n\n  visiblePw: {\n    color: \"var(--primary-color)\",\n  },\n  visibleConfirmPw: {\n    color: \"var(--primary-color)\",\n  },\n  editBtn: {\n    padding: \"5px 10px\",\n  },\n  textError: {\n    marginTop: \"4px\",\n    color: \"var(--error-color)\",\n    fontSize: \"1.2rem\",\n    textAlign: \"left\",\n  },\n}));\n\nfunction EditUserPage() {\n  useTitle(\"Edit user\");\n  const classes = useStyle();\n  const defaultImg =\n    \"https://res.cloudinary.com/phongvn2611/image/upload/v1634179173/english/avatar/avatar-default_tx5lsb.png\";\n  const [submitting, setSubmitting] = useState(false);\n  const { user_id } = useParams();\n  const [initEmail, setInitEmail] = useState(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const [user, setUser] = useState({});\n\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    (async function () {\n      const res = await userApi.getUserDetails(user_id);\n      setUser(res.data.user);\n      setInitEmail(res.data.user.email);\n      setAvatar(res.data.user.avatar)\n    })();\n    return () => {};\n  }, [user_id]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n  const handleChangeAvatar = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"errors\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"errors\"));\n      }\n      convertImageToBase64(file).then((res) => {\n        setAvatar(res);\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n  const handleEditUser = async () => {\n    try {\n      setSubmitting(true);\n      const dataSend = {\n        name: user.name,\n        email: user.email,\n        avatar,\n        role: user.roleType,\n        initEmail\n      }\n      const res = await userApi.editUser(user_id, dataSend);\n      if (res) {\n        dispatch(setMessage(res.data.message, 'success'));\n        setSubmitting(false);\n        history.replace(`/admin/user/detail/${user_id}`)\n      }\n    }\n    catch (error) {\n      dispatch(setMessage(error.response.data.message, 'error'));\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <div className={`${classes.wrap} container flex-center`}>\n      <div className={classes.root}>\n        <form autoComplete=\"off\" onSubmit={handleSubmit(handleEditUser)}>\n          <div className=\"flex-center w-100 h-100\">\n            <div className={classes.avtWrap}>\n              <img\n                src={avatar ? avatar : defaultImg}\n                alt=\"\"\n                className={`${classes.avt} w-100 h-100`}\n              />\n              <div className={`${classes.cameraIconWrap} flex-center`}>\n                <CameraIcon className={classes.cameraIcon} />\n                <input\n                  type=\"file\"\n                  className={classes.fileInput}\n                  accept=\"image/*\"\n                  onChange={handleChangeAvatar}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex-col mt-10\">\n            <InputCustom\n              label=\"Email\"\n              size=\"small\"\n              placeholder=\"Nhập email\"\n              value={user.email ? user.email : ''}\n              error={Boolean(errors.email)}\n              inputProps={{\n                name: \"email\",\n                autoFocus: true,\n                ...register(\"email\"),\n              }}\n              onChange={handleChange}\n            />\n            {errors.email && (\n              <p className=\"text-error\">{errors.email?.message}</p>\n            )}\n            <InputCustom\n              label=\"Họ tên\"\n              size=\"small\"\n              placeholder=\"Nhập họ tên\"\n              className=\"mt-10\"\n              value={user.name ? user.name : ''}\n              error={Boolean(errors.name)}\n              inputProps={{\n                name: \"name\",\n                ...register(\"name\"),\n              }}\n              onChange={handleChange}\n            />\n            {errors.name && (\n              <p className=\"text-error\">{errors.name?.message}</p>\n            )}\n            \n            <SelectCustom\n              className=\"mt-10\"\n              label=\"Quyền\"\n              options={ROLE_TYPE}\n              value={user.roleType ? user.roleType : ''}\n              inputProps={{\n                name: \"roleType\",\n              }}\n              onChange={handleChange}\n            />\n          </div>\n\n          <div className=\"d-flex-center flex-center-col mt-10\">\n            <Button\n              className={`${classes.editBtn} _btn _btn-outlined-accent mb-4 w-100`}\n              onClick={() => history.replace(`/admin/user/detail/${user_id}`)}\n            >\n              Quay lại\n            </Button>\n            <Button\n              type=\"submit\"\n              className={`${classes.editBtn} _btn _btn-primary w-100`}\n              disabled={submitting}\n              endIcon={\n                submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\n              }\n              variant=\"contained\"\n            >\n              Sửa\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default EditUserPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\CreateQuestion.js",["1033","1034","1035"],"import { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport PropTypes from \"prop-types\";\nimport React, { useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport useTitle from \"hooks/useTitle\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport questionApi from \"apis/questionApi\";\nimport { useParams } from \"react-router\";\n\nconst schema = yup.object().shape({\n  content: yup.string().trim().required(\"Input value\"),\n  answer1: yup.string().trim().required(\"Input value\"),\n  answer2: yup.string().trim().required(\"Input value\"),\n  answer3: yup.string().trim().required(\"Input value\"),\n});\n\nconst useStyle = makeStyles(() => ({\n  container: {\n    margin: \"3.2rem 0\",\n  },\n  root: {\n    padding: \"2.8rem 3.6rem\",\n    boxShadow: \"var(--box-shadow)\",\n    borderRadius: \"var(--border-radius)\",\n    backgroundColor: \"var(--bg-color-sec)\",\n  },\n\n  title: {\n    color: \"var(--title-color)\",\n    textTransform: \"capitalize\",\n    fontSize: \"2.8rem\",\n    marginBottom: \"1.2rem\",\n  },\n\n  grid: {\n    marginTop: \"2.4rem\",\n    marginBottom: \"2.4rem\",\n  },\n\n  tooltipIcon: {\n    fontSize: \"1.6rem\",\n    color: \"var(--label-color)\",\n  },\n\n  btn: {\n    marginLeft: \"1rem\",\n    textTransform: \"none\",\n    minWidth: \"14rem\",\n  },\n\n  btnReset: {\n    borderColor: \"var(--accent-color) !important\",\n    color: \"var(--accent-color) !important\",\n\n    \"&:hover, &:active\": {\n      filter: \"brightness(0.85)\",\n    },\n  },\n\n  sentenceInput: {\n    minHeight: \"8rem\",\n  },\n}));\n\nfunction CreateQuestionPage() {\n  const classes = useStyle();\n\n  useTitle(\"Create quiz\");\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const [submitting, setSubmitting] = useState(false);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [question, setQuestion] = useState({\n    content: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    check: [false, false, false],\n  });\n\n  const [indexCheck, setIndexCheck] = useState(-1);\n  const { id, quiz_id } = useParams();\n\n  const handleChangeQuestion = (e) => {\n    const { name, value } = e.target;\n    setQuestion({ ...question, [name]: value });\n  };\n\n  const handleCheck = (e) => {\n    const isNotCheckAll = (arr) => arr.every((v) => v === false);\n    const newArr = { ...question };\n    if (isNotCheckAll(question.check)) {\n      newArr.check[indexCheck] = true;\n      setQuestion(newArr);\n    } else {\n      newArr.check = newArr.check.fill(false);\n      newArr.check[indexCheck] = true;\n      setQuestion(newArr);\n    }\n  };\n  const handleUncheck = () => {\n    const newArr = { ...question };\n    newArr.check[indexCheck] = false;\n    setQuestion(newArr);\n  };\n  const onSubmit = async () => {\n    try {\n      setSubmitting(true);\n      const isNotCheckAll = (arr) => arr.every((v) => v === false);\n      if (isNotCheckAll(question.check)) {\n        dispatch(setMessage(\"Please check the correct answer\", 'error'));\n        setSubmitting(false);\n      }\n      else {\n        const dataSend = {\n          Content: question.content,\n          Answers: [\n            {\n              content: question.answer1,\n              isCorrect: question.check[0],\n            },\n            {\n              content: question.answer2,\n              isCorrect: question.check[1],\n            },\n            {\n              content: question.answer3,\n              isCorrect: question.check[2],\n            },\n          ],\n        };\n        const apiRes = await questionApi.postQuestion(quiz_id, dataSend);\n        if (apiRes) {\n          dispatch(setMessage('Create question successfully', 'success'));\n          setSubmitting(false);\n          history.replace(`/admin/quiz/details/${id}`);\n        }\n      }\n    } catch (error) {\n      dispatch(setMessage(error.response.data.message, 'error'));\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className={classes.container}>\n        <div className=\"ani-fade\">\n          <div>\n            <h1 className={classes.title}>Thêm câu hỏi</h1>\n            <div className=\"dyno-break\"></div>\n\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n              <Grid className={classes.grid} container spacing={3}>\n                <Grid item xs={12}>\n                  <InputCustom\n                    className=\"w-100\"\n                    label=\"Câu hỏi\"\n                    error={Boolean(errors.content)}\n                    inputProps={{\n                      name: \"content\",\n                      ...register(\"content\"),\n                    }}\n                    onChange={handleChangeQuestion}\n                  />\n                  {errors.Content && (\n                    <p className=\"text-error\">{errors.content?.message}</p>\n                  )}\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <InputCustom\n                    className=\"w-100\"\n                    label=\"Đáp án thứ nhất\"\n                    onChange={handleChangeQuestion}\n                    error={Boolean(errors.answer1)}\n                    inputProps={{\n                      name: \"answer1\",\n                      ...register(\"answer1\"),\n                    }}\n                    endAdornment={\n                      question.check[0] === false ? (\n                        <CheckIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(0)}\n                          onClick={handleCheck}\n                        />\n                      ) : (\n                        <CheckCircleIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(0)}\n                          onClick={handleUncheck}\n                        />\n                      )\n                    }\n                  />\n\n                  {errors.answer1 && (\n                    <p className=\"text-error\">{errors.answer1?.message}</p>\n                  )}\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <InputCustom\n                    className=\"w-100\"\n                    label=\"Đáp án thứ hai\"\n                    onChange={handleChangeQuestion}\n                    error={Boolean(errors.answer2)}\n                    inputProps={{\n                      name: \"answer2\",\n                      ...register(\"answer2\"),\n                    }}\n                    endAdornment={\n                      question.check[1] === false ? (\n                        <CheckIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(1)}\n                          onClick={handleCheck}\n                        />\n                      ) : (\n                        <CheckCircleIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(1)}\n                          onClick={handleUncheck}\n                        />\n                      )\n                    }\n                  />\n                  {errors.answer2 && (\n                    <p className=\"text-error\">{errors.answer2?.message}</p>\n                  )}\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <InputCustom\n                    className=\"w-100\"\n                    label=\"Đáp án thứ ba\"\n                    onChange={handleChangeQuestion}\n                    error={Boolean(errors.answer3)}\n                    inputProps={{\n                      name: \"answer3\",\n                      ...register(\"answer3\"),\n                    }}\n                    endAdornment={\n                      question.check[2] === false ? (\n                        <CheckIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(2)}\n                          onClick={handleCheck}\n                        />\n                      ) : (\n                        <CheckCircleIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(2)}\n                          onClick={handleUncheck}\n                        />\n                      )\n                    }\n                  />\n                  {errors.answer3 && (\n                    <p className=\"text-error\">{errors.answer3?.message}</p>\n                  )}\n                </Grid>\n              </Grid>\n              <div className=\"dyno-break\"></div>\n              {/* button group */}\n              <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\n                <Button\n                  className={`${classes.btn} ${classes.btnReset}`}\n                  color=\"secondary\"\n                  endIcon={<ResetIcon />}\n                  variant=\"outlined\"\n                  disabled={submitting}\n                  onClick={() => history.push(\"/admin/quiz\")}\n                >\n                  Quay lại\n                </Button>\n                <Button\n                  type=\"submit\"\n                  className={`${classes.btn} _btn _btn-primary`}\n                  disabled={submitting}\n                  endIcon={\n                    submitting ? (\n                      <LoopIcon className=\"ani-spin\" />\n                    ) : (\n                      <SaveIcon />\n                    )\n                  }\n                  variant=\"contained\"\n                >\n                  Create\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateQuestionPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\AddUser.js",["1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048"],"import { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport SelectCustom from \"components/UI/SelectCustom\";\nimport { ROUTES, ROLE_TYPE } from \"constants/index\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport { convertImageToBase64 } from \"helper/index\";\nimport useTitle from \"hooks/useTitle\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport userApi from 'apis/userApi';\n\nconst nameRegex = /^[^\\d~`!@#$%^&*\\(\\)\\\\\\|\\.,\\?\\/\\-\\+\\=\\_]+$/gi;\nconst schema = yup.object().shape({\n  email: yup.string().trim().required(\"Nhập email\").email(\"Email không hợp lệ\"),\n  name: yup\n    .string()\n    .trim()\n    .required(\"Nhập họ tên\")\n    .matches(nameRegex, \"Họ tên không chứa số và ký tự đặc biệt\"),\n});\n\nconst useStyle = makeStyles(() => ({\n  wrap: {\n    minHeight: \"calc(100vh - 7.2rem)\",\n  },\n\n  root: {\n    backgroundColor: \"var(--bg-color-sec)\",\n    padding: \"1.5rem 2.5rem\",\n    borderRadius: \"var(--border-radius)\",\n    textAlign: \"center\",\n    boxShadow: \"var(--box-shadow)\",\n  },\n\n  avtWrap: {\n    width: \"15rem\",\n    height: \"15rem\",\n    position: \"relative\",\n  },\n\n  avt: {\n    borderRadius: \"50%\",\n    border: \"2px solid var(--primary-color)\",\n  },\n\n  cameraIconWrap: {\n    position: \"absolute\",\n    right: 0,\n    bottom: 0,\n\n    width: \"4.2rem\",\n    height: \"4.2rem\",\n    padding: \"1.2rem\",\n\n    backgroundColor: \"var(--primary-color)\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    border: \"solid 5px var(--bg-color-sec)\",\n\n    \"&:hover, &:active\": {\n      opacity: 0.85,\n    },\n  },\n\n  cameraIcon: {\n    color: \"var(--text-color)\",\n    fontSize: \"2rem\",\n  },\n\n  fileInput: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    top: 0,\n    left: 0,\n    opacity: 0,\n    cursor: \"pointer\",\n  },\n\n  name: {\n    fontSize: \"2.4rem\",\n    lineHeight: 1.5,\n    letterSpacing: \"0.75px\",\n  },\n\n  role: {\n    fontSize: \"1.5rem\",\n    fontWeight: 400,\n    color: \"var(--label-color)\",\n    letterSpacing: \"0.75px\",\n    textTransform: \"capitalize\",\n  },\n\n  info: {\n    margin: \"2.4rem 0\",\n\n    \"& p\": {\n      lineHeight: 2,\n      fontSize: \"1.6rem\",\n      letterSpacing: \"0.75px\",\n      color: \"var(--text-color)\",\n    },\n  },\n\n  coin: {\n    color: \"var(--label-color)\",\n    fontWeight: \"bold\",\n    fontSize: \"2rem\",\n  },\n  icon: {\n    fontSize: \"1.8rem\",\n    color: \"var(--grey)\",\n    cursor: \"pointer\",\n  },\n\n  visiblePw: {\n    color: \"var(--primary-color)\",\n  },\n  visibleConfirmPw: {\n    color: \"var(--primary-color)\",\n  },\n  editBtn: {\n    padding: \"5px 10px\",\n  },\n  textError: {\n    marginTop: \"4px\",\n    color: \"var(--error-color)\",\n    fontSize: \"1.2rem\",\n    textAlign: \"left\",\n  },\n}));\n\nfunction AddUserPage() {\n  useTitle(\"Add user\");\n  const classes = useStyle();\n  const defaultImg =\n    \"https://res.cloudinary.com/phongvn2611/image/upload/v1634179173/english/avatar/avatar-default_tx5lsb.png\";\n  const [submitting, setSubmitting] = useState(false);\n  const [avatar, setAvatar] = useState(defaultImg);\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    role: \"\"\n  });\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleChangeAvatar = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"errors\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"errors\"));\n      }\n      convertImageToBase64(file).then((res) => {\n        setAvatar(res);\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n  const handleAddUser = async () => {\n    try {\n      setSubmitting(true);\n      const dataSend = {\n        name: user.name,\n        email: user.email,\n        avatar,\n        role: user.role\n      }\n      const res = await userApi.addUser(dataSend);\n      if (res) {\n        dispatch(setMessage(res.data.message, 'success'));\n        setSubmitting(false);\n        history.replace(ROUTES.USER_ADMIN);\n      }\n    }\n    catch (error) {\n      dispatch(setMessage(error.response.data.message, 'error'));\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <div className={`${classes.wrap} container flex-center`}>\n      <div className={classes.root}>\n        <form autoComplete=\"off\" onSubmit={handleSubmit(handleAddUser)}>\n          <div className=\"flex-center w-100 h-100\">\n            <div className={classes.avtWrap}>\n              <img\n                src={avatar ? avatar : defaultImg}\n                alt=\"\"\n                className={`${classes.avt} w-100 h-100`}\n              />\n              <div className={`${classes.cameraIconWrap} flex-center`}>\n                <CameraIcon className={classes.cameraIcon} />\n                <input\n                  type=\"file\"\n                  className={classes.fileInput}\n                  accept=\"image/*\"\n                  onChange={handleChangeAvatar}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex-col mt-10\">\n            <InputCustom\n              label=\"Email\"\n              size=\"small\"\n              placeholder=\"Nhập email\"\n              error={Boolean(errors.email)}\n              inputProps={{\n                name: \"email\",\n                autoFocus: true,\n                ...register(\"email\"),\n              }}\n              onChange={handleChange}\n            />\n            {errors.email && (\n              <p className=\"text-error\">{errors.email?.message}</p>\n            )}\n            <InputCustom\n              label=\"Họ tên\"\n              size=\"small\"\n              placeholder=\"Nhập họ tên\"\n              className=\"mt-10\"\n              error={Boolean(errors.name)}\n              inputProps={{\n                name: \"name\",\n                ...register(\"name\"),\n              }}\n              onChange={handleChange}\n            />\n            {errors.name && (\n              <p className=\"text-error\">{errors.name?.message}</p>\n            )}\n            \n            <SelectCustom\n              className=\"mt-10\"\n              label=\"Quyền\"\n              options={ROLE_TYPE}\n              index={0}\n              inputProps={{\n                name: \"role\",\n              }}\n              onChange={handleChange}\n            />\n          </div>\n\n          <div className=\"d-flex-center flex-center-col mt-10\">\n            <Button\n              className={`${classes.editBtn} _btn _btn-outlined-accent mb-4 w-100`}\n            >\n              Quay lại\n            </Button>\n            <Button\n              type=\"submit\"\n              className={`${classes.editBtn} _btn _btn-primary w-100`}\n              disabled={submitting}\n              endIcon={\n                submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\n              }\n              variant=\"contained\"\n            >\n              Thêm\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default AddUserPage;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useCloseNavigation.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\pages\\QuizDetail.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useTitle.js",["1049"],"import { useEffect } from 'react';\n\n// set title for component\nfunction useTitle(title = 'English Website', isOverride = false) {\n  useEffect(() => {\n    if (isOverride) {\n      document.title = title;\n    } else {\n      document.title = title !== 'English Website' ? `${title} - English Website` : title;\n    }\n  }, []);\n\n  return null;\n}\n\nexport default useTitle;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\messageAction.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\DetailIPA.js",["1050","1051","1052","1053"],"import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from '../../constants/index';\nimport Container from \"@material-ui/core/Container\";\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Speaker from 'components/UI/Speaker';\nimport PropTypes from 'prop-types';\nimport useStyle from './style';\nimport {getIPA} from '../../redux/actions/ipaAction';\nimport RelativeIPA from './RelativeIPA';\nimport { useHistory } from \"react-router-dom\";\n\nfunction IPAGroupCollapse() {\n    const classes = useStyle();\n  const id = useParams().id;\n  const ipa = useSelector((state) => state.ipaReducer.ipa);\n \n  const dispatch = useDispatch();\n  useEffect(() => \n  dispatch(getIPA(id)), [dispatch])\n\n  const history = useHistory();\n\n  function handleClickGoBack() {\n    history.push(`/ipa`);\n  }\n\n\n  let imgSrc = null;\n    if(ipa)\n    {\n        imgSrc = cloudinaryImgOptimize( ipa.Image ? ipa.Image : DEFAULTS.IMAGE_SRC,\n            200,\n            200,\n            true,\n            true\n        );\n    }\n\n  return (\n      <Container>\n          {ipa && (\n        <><><Typography variant=\"h6\" align=\"center\">\n                 Pronunciation\n              </Typography>\n              <Typography variant=\"h6\">\n                  {ipa.Title}\n              </Typography>\n              </>\n              {ipa.Video? (\n              <p align=\"center\"><iframe src= {ipa.Video} width=\"500\" height=\"300\"></iframe></p>\n            ):(\n                <img className={classes.picture} src={imgSrc} alt=\"photo\" align=\"center\" />\n            )}\n             \n                      <AccordionDetails>\n                          <Grid container spacing={3}>\n                              <Grid\n                                  item\n                                  className=\"flex-center-between\"\n                                  xs={12}\n                                  lg={6}\n                              >\n                                  <div>\n                                      <div className=\"flex-center--ver\">\n                                          <b className={classes.word}> Phonetic: / {ipa.Phonetic} /</b>\n                                          {ipa.Audio && (\n                                              <Speaker type={false} audioSrc={ipa.Audio} />\n                                          )}\n                                      </div>\n\n\n                                      <div className={classes.example}>\n                                          <b>Example:</b>\n                                    {ipa.Examples && (\n                                          ipa.Examples.map((example, exKey) => (\n                                              <div className=\"flex-center--ver my-4\" key={exKey}>\n                                                  <span className=\"mr-4\">\n                                                      {example.Word}\n                                                      <span className=\"phonetic px-3\">\n                                                          {example.Phonetic}\n                                                      </span>\n                                                  </span>\n                                                  <Speaker type={true} text={example.Word} />\n                                              </div>\n                                          ))\n                                          )}\n                                      </div>\n                                  </div>\n\n                              </Grid>\n                          </Grid>\n                      </AccordionDetails>\n\n                <RelativeIPA type={ipa.Type} phonetic={ipa.Phonetic}/>\n\n            <Typography></Typography>\n            <Button color='primary'onClick={() => handleClickGoBack()}> GO BACK</Button>\n</>\n         \n          )}\n      </Container>\n  );\n}\n\nIPAGroupCollapse.propTypes = {\n    phoneticList: PropTypes.array,\n    title: PropTypes.string,\n    isNoVoice: PropTypes.bool,\n};\n  \n  IPAGroupCollapse.defaultProps = {\n    phoneticList: [],\n    title: '',\n    isNoVoice: false,\n};\n\nexport default IPAGroupCollapse;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\userConstant.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useToggleOverlay.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GlobalLoading\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\constants\\index.js",["1054","1055","1056","1057","1058","1059","1060","1061","1062","1063"],"export const COLOR_VAR_KEYS = [\n  { key: '--primary-color', label: 'Primary' },\n  { key: '--secondary-color', label: 'Secondary' },\n  { key: '--accent-color', label: 'Accent' },\n  { key: '--bg-color-main', label: 'Background primary' },\n  { key: '--bg-color-sec', label: 'Background secondary' },\n  { key: '--bg-color-accent', label: 'Background accent' },\n  { key: '--hover-color', label: 'Hover color' },\n  { key: '--title-color', label: 'Title' },\n  { key: '--text-color', label: 'Text' },\n  { key: '--phonetic-color', label: 'Phonetic' },\n];\n\nexport const COINS = {\n  CORRECT_GAME_PER_QUES: 10,\n};\n\nexport const DEFAULTS = {\n  VOICE_URI: 'Google US English',\n  VOICE_SPEED: 1,\n  VOICE_VOLUME: 1,\n  IMAGE_SRC:\n    'https://res.cloudinary.com/dynonary/image/upload/v1625136714/dynonary/default-image.png',\n};\n\nexport const LINKS = {\n  FB: 'https://fb.com/TuanNguyen250400',\n  WEBSITE: 'https://dynonguyen.com',\n};\n\nexport const MAX = {\n  EMAIL_LEN: 100,\n  PASSWORD_LEN: 40,\n  NAME_LEN: 50,\n  USERNAME_LEN: 110,\n  SEARCH_LEN: 50,\n  WORD_LEN: 50,\n  PHONETIC_LEN: 50,\n  MEAN_WORD_LEN: 100,\n  EXAMPLE_WORD_LEN: 250,\n  SYNONYMS_WORD_LEN: 100,\n  NOTE_WORD_LEN: 100,\n  IMG_SIZE: 2, // 2 MB\n  SENTENCE_LEN: 200,\n  SENTENCE_MEAN_LEN: 300,\n  SENTENCE_NOTE_LEN: 100,\n  USER_COIN: 99999,\n  VERIFY_CODE: 6,\n};\n\nexport const MIN = {\n  PASSWORD_LEN: 6,\n};\n\nexport const ROUTES = {\n  WELCOME: '/',\n  HOME: '/home',\n  LOGIN: '/login',\n  REGISTER: '/register',\n  FORGOT_PASSWORD: '/forgot-password',\n  ACTIVATION_EMAIL: '/user/activate/:activation_token',\n  RESET_PASSWORD: '/user/reset/:access_token',\n  PROFILE: '/user/profile',\n  LOGOUT: '/logout',\n  LISTENING: '/listening/details/:id',\n  ADMIN: '/admin',\n  GRAMMAR_ADMIN: '/admin/grammar',\n  LISTENING_ADMIN: '/admin/listening',\n  LISTENING_DETAIL: '/admin/listening/details/:id',\n  QUIZ_ADMIN: '/admin/quiz',\n  WORD_ADMIN: '/admin/word',\n  USER_ADMIN: '/admin/user',\n  ADD_WORD: '/admin/word/add',\n  EDIT_WORD: '/admin/word/edit/:id',\n  IPA_LIST: '/ipa',\n  IPA_DETAIL: '/ipa/details/:id',\n  USER_DETAIL: '/admin/user/detail/:user_id',\n  WORD_TOPIC: '/word',\n  GAME: '/game',\n  VOCABULARY: '/word/:topic',\n  ADD_LISTEN: '/admin/listening/add',\n  GRAMMAR: '/grammar/details/:id',\n  GRAMMAR_ADMIN: '/admin/grammar',\n  GRAMMAR_DETAIL: '/admin/grammar/details/:id',\n  LISTENING_BY_TOPIC: '/listening/topic/:topic',\n  LISTENING_TOPICS: '/listening/topic',\n  GRAMMAR_LEVELS: '/grammar/level',\n  GRAMMAR_BY_LEVEL: '/grammar/level/:level',\n  CREATE_GRAMMAR: '/admin/grammar/add',\n  EDIT_LISTEN: '/admin/listening/edit/:id',\n  EDIT_GRAMMAR: '/admin/grammar/edit/:id',\n  ADD_USER: '/admin/user/add',\n  EDIT_USER: '/admin/user/edit/:user_id',\n  CREATE_QUESTION: '/admin/quiz/add/:id/:quiz_id',\n  QUIZ_DETAIL: '/admin/quiz/details/:id'\n}\n\nexport const UX = {\n  DELAY_TIME: 1500,\n  DELAY_ANSWER: 3000,\n};\n\nexport const REGEX = {\n  NAME: /^[^\\d~`!@#$%^&*\\(\\)\\\\\\|\\.,\\?\\/\\-\\+\\=\\_]+$/gi,\n};\n\nexport const THEME_KEYS = {\n  ROOT_KEY: 'data-theme',\n  LS_KEY: 'theme',\n  PALETTE_KEY: 'palettes',\n  LIGHT: 'light',\n  DARK: 'dark',\n  CUSTOM: 'custom',\n};\n\n\nexport const VOICE_KEYS = {\n  LS_KEY: 'voice',\n};\n\nexport const WORD_TYPES = [\n  {\n    value: 'n',\n    label: 'Noun - Danh từ',\n  },\n  {\n    value: 'adj',\n    label: 'Adjective - Tính từ',\n  },\n  {\n    value: 'adv',\n    label: 'Adverb - Trạng từ',\n  },\n  {\n    value: 'v',\n    label: 'Verb - Động từ',\n  },\n  {\n    value: 'pro',\n    label: 'Pronoun - Đại từ',\n  },\n  {\n    value: 'con',\n    label: 'Conjunction - Liên từ',\n  },\n  {\n    value: 'pre',\n    label: 'Preposition - Giới từ',\n  },\n  {\n    value: 'det',\n    label: 'Determiners - Hạn định từ',\n  },\n];\n\nexport const WORD_LEVELS = [\n  {\n    value: '0',\n    label: 'Chưa xác định',\n  },\n  {\n    value: 'A1',\n    label: 'A1',\n  },\n  {\n    value: 'A2',\n    label: 'A2',\n  },\n  {\n    value: 'B1',\n    label: 'B1',\n  },\n  {\n    value: 'B2',\n    label: 'B2',\n  },\n  {\n    value: 'C1',\n    label: 'C1',\n  },\n  {\n    value: 'C2',\n    label: 'C2',\n  },\n];\n\nexport const WORD_SPECIALTY = [\n  { value: '0', label: 'Không' },\n  { value: '1', label: 'Công nghệ sinh học (Biotechnology)' },\n  { value: '6', label: 'Công nghệ thông tin (Information Technology)' },\n  { value: '14', label: 'Công nghệ thực phẩm (Food Technology)' },\n  { value: '20', label: 'Giải trí (Entertainment)' },\n  { value: '3', label: 'Kinh tế học (Economics)' },\n  { value: '2', label: 'Kế toán (Accounting)' },\n  { value: '8', label: 'Kỹ thuật hoá học (Chemical Engineering)' },\n  { value: '19', label: 'Mỹ thuật (Fine Arts Industry)' },\n  { value: '12', label: 'Ngành Marketing' },\n  { value: '18', label: 'Quản trị khách sạn (Hotel Management)' },\n  { value: '7', label: 'Quản trị kinh doanh (Business Adminstration)' },\n  { value: '5', label: 'Quản trị nhân lực (Human Resource Management)' },\n  { value: '13', label: 'Thiết kế (Design UI/UX)' },\n  { value: '4', label: 'Thương mại quốc tế (International Trade)' },\n  { value: '10', label: 'Thương mại điện tử (E-Commerce)' },\n  { value: '9', label: 'Tiếng Anh thương mại (Business English)' },\n  { value: '11', label: 'Tài chính ngân hàng (Finance & Banking)' },\n  { value: '16', label: 'Văn hoá học (Culturology)' },\n  { value: '17', label: 'Xây dựng (Construction Industry)' },\n  { value: '15', label: 'Xã hội học (Sociology)' },\n];\n\nexport const SORT_TYPE = [\n  { value: 'Newest', label: 'Newest' },\n  { value: 'Oldest', label: 'Oldest' },\n];\n\nexport const ROLE_TYPE = [\n  { value: 'admin', label: 'Admin'},\n  { value: 'instructor', label: 'Instructor'},\n  { value: 'user', label: 'User' },\n]\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\constants\\grammarLevels.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\authReducer.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\grammarReducer.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\messageReducer.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\voiceReducer.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\wordReducer.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\ipaReducer.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\listeningReducer.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\reducers\\tokenReducer.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useScrollTop.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\messageConstant.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\data.js",["1064"],"import grammarApi from 'apis/grammarApi';\nimport GrammarDetailModal from 'components/UI/GrammarDetailModal';\nimport { equalArray } from 'helper';\nimport React, { useEffect, useRef, useState } from 'react';\nimport GrammarAdmin from './index';\n\n\nfunction ListeningAdminData() {\n  const [page, setPage] = useState(1);\n  const [packInfo, setPackInfo] = useState(() => ({\n    level: 'All',\n  }));\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const totalPage = useRef(0);\n  const preSearchList = useRef([]);\n\n\n  const nextPage = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const settingWordPack = (info) => {\n    // check old pack vs new pack\n    let isEqual = true;\n    if (packInfo!== 'level' && packInfo.level !== info.level) {\n      isEqual = false;\n    }\n    if (isEqual) isEqual = equalArray(packInfo.level, info.level);\n\n    totalPage.current = 0;\n    preSearchList.current = [];\n    setMore(true);\n    setList([]);\n    setPackInfo(info);\n    setPage(1);\n  };\n\n  const onSearchWord = async (title) => {\n    try {\n      if (title === '') {\n        setList(preSearchList.current);\n        setMore(true);\n        return;\n      }\n      const apiRes = await grammarApi.searchGrammar(title);\n      console.log(apiRes.data);\n      if (apiRes.status === 200) {\n        setList(apiRes.data);\n        setMore(false);\n      }\n    } catch (error) {}\n  };\n\n\n  // get word pack\n  useEffect(() => {\n    let isSub = true;\n    (async function () {\n      try {\n\n        console.log(packInfo);\n        setLoading(true);\n       let apiRes = null\n         if(packInfo.level ==='All'){\n           apiRes = await grammarApi.getAllGrammar();\n         }\n         else{\n          apiRes = await grammarApi.getGrammarByLevel(packInfo.level);\n       }\n        if (apiRes && isSub) {\n          const newList = apiRes.data.grammars;\n          console.log(apiRes.data.grammars)\n          preSearchList.current = newList;\n          setList(newList);\n        }\n      } catch (error) {\n      } finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n\n    return () => (isSub = false);\n  }, [page, packInfo]);\n\n  return (\n    <>\n      <GrammarAdmin\n        list={list}\n        loading={loading}\n        onLoadData={nextPage}\n        more={more}\n        isFirstLoad={isFirstLoad}\n        onSettingWordPack={settingWordPack}\n         onSearchWord={onSearchWord}\n      />\n      <GrammarDetailModal />\n    </>\n  );\n}\n\nexport default ListeningAdminData;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\TopicBox\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\EditGrammar\\index.js",["1065","1066","1067","1068"],"import { yupResolver } from '@hookform/resolvers/yup';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport ResetIcon from '@material-ui/icons/RotateLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport InputCustom from 'components/UI/InputCustom';\nimport SelectCustom from 'components/UI/SelectCustom';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport InformationTooltip from './InformationTooltip';\nimport useStyle from './style';\nimport Box from \"@material-ui/core/Box\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport { convertImageToBase64 } from 'helper';\nimport { GRAMMAR_LEVEL } from 'constants/grammarLevels';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { DialogActions } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport InfiniteScroll from 'components/UI/InfiniteScroll';\nimport grammarApi from 'apis/grammarApi';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useParams } from \"react-router-dom\";\nimport RichTextEditor from 'components/UI/RichTextEditor';\n\nconst schema = yup.object().shape({\n  Title: yup\n    .string()\n    .trim()\n    .required('Input value'),\n  Content: yup\n    .string()\n    .required('Input value'),\n  Level: yup\n    .string()\n    .required('Select one')\n    .oneOf(GRAMMAR_LEVEL.map((i) => i.value)),\n  LinkVideo: yup\n    .string(),\n  Script: yup\n    .string(),\n  \n});\n\nconst analysisLinkVideo = (linkVideo = '') => {\n  if (typeof linkVideo !== 'string' || linkVideo === '') {\n    return null;\n  }\n  if(linkVideo.includes(\"embed\")){\n    return linkVideo;\n  }\n\n  let checkVid = linkVideo.includes(\"https://www.youtube.com\")\n  if(!checkVid){\n      checkVid =linkVideo.includes(\"youtu.be/\")\n      if(checkVid)\n      {\n        return linkVideo;\n      }\n      return null;\n  }\n  return linkVideo;\n};\n\nconst getTypeCurrent = (type = \"\", options = []) => {\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].value === type) {\n      return i;\n    }\n  }\n  return 0;\n};\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n         <Grid>{children}</Grid>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nfunction EditGrammar() {\n  const classes = useStyle();\n  const [resetFlag, setResetFlag] = useState(0);\n  const [value, setValue] = useState(1);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n//grammar item\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editItems, setEditItems] = useState(false);\n  const [indexEdit, setIndexEdit] = useState(-1);\n  const [grammarItems, setgrammarItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const totalPage = useRef(0);\n\n  const [point, setPoint] = useState({\n    Point: \"\",\n    Examples: \"\",\n  });\n  const handleChangeDialog = (event) => {\n    const {name, value} = event.target;\n    setPoint({...point, [name]: value});\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false)\n    setPoint({Point: \"\", Examples: \"\"})\n  };\n\n  const handleOpenDialog = () => {\n    setOpenDialog(true)\n\n  };\n\n  const handleDialogSubmit = () => {\n    if(point.Point.trim() !==\"\" ){\n    if(editItems){\n     grammarItems[indexEdit]=point;\n     setEditItems(false);\n     setIndexEdit(-1);\n    }\n    else{\n      grammarItems.push(point)\n    } \n  }  \n    setOpenDialog(false) \n    setPoint({Point: \"\", Examples: \"\"})\n  };\n\n  const onLoadData = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const onClickItem = (index) => {\n    setPoint(grammarItems[index]);\n    setEditItems(true);\n    setIndexEdit(index);\n    setOpenDialog(true);\n  };\n  const deleleGrammarItems = (index) => {\n    let arr = [];\n    for(let i=0; i<grammarItems.length; i++)\n    {\n      if(i !== index)\n      arr.push(grammarItems[i])\n    }\n    setgrammarItems(arr);\n  };\n//grammar item\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const defaultImg =\n  \"https://res.cloudinary.com/phongvn2611/image/upload/v1638368033/english/word/default-image_fbmbtn.png\";\n  const [grammarValue, setGrammarValue] = useState(null);\n  const [image, setImage] = useState(defaultImg);\n  const [video, setVideo] = useState(null);\n  const [audio, setAudio] = useState(null);\n  const [linkVideo, setLinkVideo] = useState('');\n  const [script, setScript] = useState(\"\");\n  const getScript = (spt) => {\n    setScript(spt);\n  };\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    (async function () {\n      const apiRes = await grammarApi.getGrammarById(id);\n      setGrammarValue(apiRes.data);\n      if(apiRes.data.Video?.includes(\"youtube\")){\n        setLinkVideo(apiRes.data.Video);\n      }\n      setScript(apiRes.data.Script)\n      setImage(apiRes.data.Image);\n      setgrammarItems(apiRes.data.Items);\n      setAudio(apiRes.data.Audio)\n    })();\n    return () => {};\n  }, [id]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setGrammarValue({ ...grammarValue, [name]: value });\n    if(name ===\"LinkVideo\"){\n      setLinkVideo(value)\n    }\n  }\n\n\n  const handleChangePicture = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n      convertImageToBase64(file).then(res => {\n        setImage(res);\n      });\n      \n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const handleChangeAudio = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n      convertImageToBase64(file).then(res => {\n        setAudio(res);\n      });\n      \n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const handleChangeVideo = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n     convertImageToBase64(file).then(res => {\n        setVideo(res);\n      });\n      \n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const onSubmit = async () => {\n    try {\n      setSubmitting(true);\n      const {Title, Content, Level, Video} = grammarValue;\n      let dataSend = [];\n      let videoUrl= null;\n      if(video === null){\n        console.log(video)\n        console.log(linkVideo)\n        if(linkVideo== null || linkVideo.trim() === \"\"){\n          videoUrl = Video;\n        }\n        else{\n          videoUrl = analysisLinkVideo(linkVideo);\n          if (videoUrl==null) {\n            dispatch(setMessage(\"Link video is invalid.\", \"warning\"));\n            setSubmitting(false);\n            return;\n          }\n        }\n        dataSend ={\n          Title, Content, Level,\n          Items: grammarItems,\n          Image: image,\n          Video: videoUrl,\n          Audio: audio,\n          Script: script,\n        };\n      }\n      else{\n        dataSend ={\n          Title, Content, Level,\n          Items: grammarItems,\n          Image: image,\n          Video: video,\n          Audio: audio,\n          Script: script,\n        };  \n      } \n      const apiRes = await grammarApi.putGrammar(grammarValue._id, dataSend);\n      console.log(apiRes.status)\n      if (apiRes.status === 200) {\n        dispatch(setMessage(\"Update grammar successfully\", \"success\"));\n        setSubmitting(false);\n     }\n\n    } catch (error) {\n      const message =  error.response?.data?.message ||\n      'Error, can not update grammar.';\n        dispatch(setMessage(message, \"error\"));\n      setSubmitting(false);\n    }\n  }\n\n  const handleChangeValue = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function handleClickGoBack() {\n    history.push(\"/admin/listening\");\n  }\n\n  return (\n    <div >\n      <h1 className={classes.title}>Edit grammar in system</h1>\n      <div className=\"dyno-break\"></div>\n\n      {grammarValue && (\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n      <Grid container alignContent=\"center\">\n          <div className={classes.avtWrap}>\n            <img\n              src={image ? image : defaultImg}\n              alt=\"\"\n              className={`${classes.avt} w-100 h-100`}\n            />\n            <div className={`${classes.cameraIconWrap} flex-center`}>\n              <input\n                type=\"file\"\n                className={classes.fileInput}\n                onChange={handleChangePicture}\n                accept=\"image/*\"\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid className={classes.grid} container spacing={3}>\n          {/* Title */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Title (*)\"\n              error={Boolean(errors.Title)}\n              value={grammarValue.Title}\n              inputProps={{\n                autoFocus: true,\n                name: 'Title',\n                ...register('Title'),\n              }}\n              onChange={handleChange}\n            />\n            {errors.Title && (\n              <p className=\"text-error\">{errors.Title?.message}</p>\n            )}\n          </Grid>\n\n          {/* Content */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Content (*)\"\n              error={Boolean(errors.Content)}\n              value={grammarValue.Content}\n              inputProps={{\n                name: 'Content',\n                ...register('Content'),\n              }}\n              onChange={handleChange}\n            />\n            {errors.Content && (\n              <p className=\"text-error\">{errors.Content?.message}</p>\n            )}\n          </Grid>\n\n          {/* Level */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Level (*)\"\n              options={GRAMMAR_LEVEL}\n              error={Boolean(errors.Level)}\n              resetFlag={resetFlag}\n              index={getTypeCurrent(grammarValue.Level, GRAMMAR_LEVEL)}\n              inputProps={{\n                name: 'Level',\n                ...register('Level'),\n              }}\n              onChange={handleChange}\n            />\n            {errors.Level && (\n              <p className=\"text-error\">{errors.Level?.message}</p>\n            )}\n          </Grid>\n          {/* Audio */}\n\n          <Box sx={{ width: \"100%\" }}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChangeValue}\n              aria-label=\"basic tabs example\"\n              indicatorColor=\"primary\"\n            >\n              <Tab label=\"Upload\" {...a11yProps(0)} />\n              <Tab label=\"Link\" {...a11yProps(1)} />\n              <Tab label=\"Audio\" {...a11yProps(2)} />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n                   {/* Video */}\n            <Grid item xs={6}>\n              <Grid container alignContent=\"center\">\n              <div className={classes.avtWrap}>\n              <div className={`${classes.cameraIconWrap} flex-center`}>\n                <input\n                  type=\"file\"\n                  className={classes.fileInput}\n                  onChange={handleChangeVideo}\n                  accept=\"video/*\"\n                />\n              </div>\n            </div>\n              </Grid>\n          </Grid>\n          </TabPanel>\n\n          <TabPanel value={value} index={1}>\n          <Grid item xs={6} >\n            <InputCustom\n              className=\"w-100\"\n              label=\"Link Video\"\n              multiline\n              value={linkVideo}\n              endAdornment={\n                <InformationTooltip title=\"Input link youtube\" />\n              }\n              inputProps={{\n                name: 'LinkVideo',\n                ...register('LinkVideo'),\n              }}\n              onChange={handleChange}\n            />\n\n            {errors.Video && (\n              <p className=\"text-error\">{errors.Video?.message}</p>\n            )}\n          </Grid>\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n                   {/* Audio */}\n            <Grid item xs={6}>\n              <Grid container alignContent=\"center\">\n              <div className={classes.avtWrap}>\n              <div className={`${classes.cameraIconWrap} flex-center`}>\n                <input\n                  type=\"file\"\n                  className={classes.fileInput}\n                  onChange={handleChangeAudio}\n                  accept=\"audio/*\"\n                />\n              </div>\n            </div>\n              </Grid>\n          </Grid>\n          </TabPanel>\n        </Box>\n        </Grid>\n\n      {/* Script */}\n      <div className=\"row\">\n          <div className=\"col-md-6\" style={{ margin: \"auto\", marginTop: \"50px\" }}>\n            <div style={{ textAlign: \"center\" }}>\n              <h3>Rich Text Editor</h3>\n            </div>\n            <RichTextEditor initialValue={script} getValue={getScript} />\n           \n          </div>\n        </div> \n\n\n        {/* Grammar Item */}\n        <div className={`${classes.root2} dyno-container`}>\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">Add Content for grammar</h1>\n        <div>\n          <AddIcon className=\"dyno-setting-icon mr-5\" onClick={() => handleOpenDialog()}/>\n                {/* Dialog */}\n          <Dialog onClose={handleCloseDialog} open={openDialog}>\n        <DialogTitle onClose={handleCloseDialog}>Add point</DialogTitle>\n        <DialogContent dividers>\n          <form noValidate>\n            {/* Point */}\n          <Grid item xs={12}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Point\"\n              value={point.Point}\n              endAdornment={\n                <InformationTooltip title=\"Input value\" />\n              }\n              error={Boolean(errors.Point)}\n              inputProps={{\n                name: 'Point',\n                ...register('Point'),\n              }}\n              onChange={handleChangeDialog}\n            />\n               {errors.Point && (\n              <p className=\"text-error\">{errors.Point?.message}</p>\n            )}\n          </Grid>\n          <Grid item xs={12}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Examples\"\n              multiline\n              value={point.Examples}\n              endAdornment={\n                <InformationTooltip title=\"Input value\" />\n              }\n              error={Boolean(errors.Examples)}\n              inputProps={{\n                name: 'Examples',\n                ...register('Examples'),\n              }}\n              onChange={handleChangeDialog}\n            />\n               {errors.Examples && (\n              <p className=\"text-error\">{errors.Examples?.message}</p>\n            )}\n          </Grid> \n        </form>\n        </DialogContent>\n        <DialogActions>\n        <Button onClick={handleCloseDialog} color=\"primary\">Cancel</Button>\n        <Button onClick={handleDialogSubmit} color=\"primary\" autoFocus>Save</Button>\n        </DialogActions>\n      </Dialog>\n       {/* Dialog */}\n\n        </div>\n      </div>\n      <div className=\"dyno-break\"></div>\n\n      {/* list content */}\n      <div className={classes.contentWrap}>\n        <div className={`${classes.listWrap} w-100`}>\n          <ul id=\"dictionaryId\" className={`${classes.list} flex-col w-100`}>\n          <>\n              {isFirstLoad && (\n                <>\n                  {grammarItems && grammarItems.length > 0 && (\n                    <>\n                      {/* render list */}\n                      {grammarItems.map((item, index) => (\n                        <li className={classes.listItem} key={index}>\n                          <div className={`${classes.root3} flex-center-between`}>\n                            <div \n                              className=\"w-100 flex-center--ver\" onClick={() => onClickItem(index)}>\n                              <div className=\"ml-8 flex-grow-1\">\n                                <h3 className={classes.word}>\n                               {item.Point}            \n                                </h3>\n                              </div>\n                            </div>\n                            <div className=\"flex-center--ver\">\n                            <div className=\"mr-5\">\n                            </div>\n                            <DeleteIcon className=\"dyno-setting-icon\" \n                            onClick={() => deleleGrammarItems(index)}\n                            />\n\n                          </div>\n                          </div>\n                        </li>\n                      ))}\n\n                      {/* infinite scrolling */}\n                      {!loading && more && (\n                        <InfiniteScroll\n                          onTouchAnchor={onLoadData}\n                          threshold={1}>\n                          <div className=\"w-100 t-center\">\n                            <LoopIcon className=\"ani-spin\" />\n                          </div>\n                        </InfiniteScroll>\n                      )}\n                    </>\n                  )}\n                </>\n              )}\n            </>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n        <div className=\"dyno-break\"></div>\n        {/* button group */}\n        <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\n          <Button\n            className={`${classes.btn} ${classes.btnReset}`}\n            color=\"secondary\"\n            endIcon={<ResetIcon />}\n            variant=\"outlined\"\n            disabled={submitting}\n            onClick={() => history.push(\"/admin/grammar\")}\n           >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            className={`${classes.btn} _btn _btn-primary`}\n            disabled={submitting}\n            endIcon={\n              submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\n            }\n            variant=\"contained\">\n            Edit\n          </Button>\n        </div>\n      </form>\n      )}\n    </div>\n  );\n}\n\nEditGrammar.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool,\n};\n\nEditGrammar.defaultProps = {\n  onSubmitForm: function () {},\n  submitting: false,\n};\n\nexport default EditGrammar;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\RelativeIPA.js",["1069","1070","1071"],"import Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport React, { useEffect } from \"react\";\nimport useStyle from \"./style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from \"../../constants/index\";\nimport { getIPARelative } from \"../../redux/actions/ipaAction\";\n\nfunction IPARelative(props) {\n  const classes = useStyle();\n  const ipas = useSelector((state) => state.ipaReducer.ipas);\n\n  const { type, phonetic } = props;\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(getIPARelative(type, phonetic)), [dispatch]);\n\n  const handleClick = (id) => {\n    window.location.href = `${id}`;\n  };\n\n  let imgList = [];\n  if (ipas) {\n    for (let i = 0; i < ipas.length; i++) {\n      if (ipas[i].Image) {\n        let imgSrc = cloudinaryImgOptimize(\n          ipas[i].Image ? ipas[i].Image : DEFAULTS.IMAGE_SRC,\n          200,\n          200,\n          true,\n          true\n        );\n        imgList[i] = imgSrc;\n      }\n    }\n  }\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon className={classes.arrowIcon} />}\n      >\n        <b className={classes.relative}>Relative Pronunciation</b>\n      </AccordionSummary>\n\n      <AccordionDetails>\n        <div className=\"container\">\n          {ipas &&\n            ipas.map((item, key) => (\n              <div className={classes.mobilelist}>\n                <div>\n                  <div className={classes.floatleft}>\n                    <a>\n                      <img\n                        height=\"80px\"\n                        width=\"80px\"\n                        src={imgList[key]}\n                        onClick={() => handleClick(item._id)}\n                      />\n                    </a>\n                  </div>\n                  <a\n                    className={classes.title}\n                    href={`/ipa/details/${item._id}`}\n                  >\n                    <u> {item.Title}</u>\n                  </a>\n                  <br></br>\n\n                  <div className={classes.textlimit}>\n                    <span className={classes.tldetail}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default IPARelative;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\ipaAction.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\EditListening\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\voiceAction.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\helper\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\SettingMenu\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\data.js",["1072"],"import listeningApi from 'apis/listeningApi';\nimport ListeningDetailModal from 'components/UI/ListeningDetailModal';\nimport { equalArray } from 'helper';\nimport React, { useEffect, useRef, useState } from 'react';\nimport ListeningAdmin from './index';\n\n\nfunction ListeningAdminData() {\n  const [page, setPage] = useState(1);\n  const [sortType, setSortType] = useState('Newest');\n  const [packInfo, setPackInfo] = useState(() => ({\n    topic: 'All',\n  }));\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const totalPage = useRef(0);\n  const preSearchList = useRef([]);\n\n  const nextPage = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const settingWordPack = (info) => {\n    // check old pack vs new pack\n    let isEqual = true;\n    if (packInfo!== 'topic' && packInfo.topic !== info.topic) {\n      isEqual = false;\n    }\n    if (isEqual) isEqual = equalArray(packInfo.topic, info.topic);\n\n    totalPage.current = 0;\n    preSearchList.current = [];\n    setMore(true);\n    setList([]);\n    setPackInfo(info);\n    setPage(1);\n  };\n\n\n  const onSortTypeChange = (type = 'Newest') => {\n    if (type === sortType) return;\n    preSearchList.current = [];\n    setSortType(type);\n    setPage(1);\n    setList([]);\n  };\n\n  const onSearchWord = async (name) => {\n    try {\n      if (name === '') {\n        setList(preSearchList.current);\n        setMore(true);\n        return;\n      }\n      const apiRes = await listeningApi.searchListen(name);\n      if (apiRes.status === 200) {\n       // const { packList = [] } = apiRes.data.listens;\n        setList(apiRes.data.listens);\n        setMore(false);\n      }\n    } catch (error) {}\n  };\n\n\n  // get word pack\n  useEffect(() => {\n    let isSub = true;\n    (async function () {\n      try {\n        setLoading(true);\n       let apiRes = null\n         if(packInfo.topic ==='All'){\n           apiRes = await listeningApi.getAllListen(sortType);\n         }\n         else{\n          apiRes = await listeningApi.getListenByTopic(packInfo.topic, sortType);\n       }\n        if (apiRes && isSub) {\n         // const { packList = [] } = apiRes.data.listens;\n          const newList = apiRes.data.listens;\n          preSearchList.current = newList;\n          setList(newList);\n        }\n      } catch (error) {\n      } finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n\n    return () => (isSub = false);\n  }, [page, packInfo, sortType]);\n\n  return (\n    <>\n      <ListeningAdmin\n        list={list}\n        loading={loading}\n        onLoadData={nextPage}\n        more={more}\n        isFirstLoad={isFirstLoad}\n        onSettingWordPack={settingWordPack}\n         onSortTypeChange={onSortTypeChange}\n         onSearchWord={onSearchWord}\n      />\n      <ListeningDetailModal />\n    </>\n  );\n}\n\nexport default ListeningAdminData;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\grammarConstant.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\ipaConstant.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\wordConstant.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\listeningConstant.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\EditWord\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\data.js",["1073"],"import listeningApi from \"apis/listeningApi\";\nimport ListeningDetailModal from \"components/UI/ListeningDetailModal\";\nimport { equalArray } from \"helper\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ListeningAdmin from \"./index\";\n\nfunction QuizAdminData() {\n  const [page, setPage] = useState(1);\n  const [sortType, setSortType] = useState(\"Newest\");\n  const [packInfo, setPackInfo] = useState(() => ({\n    topic: \"All\",\n  }));\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const totalPage = useRef(0);\n  const preSearchList = useRef([]);\n\n  const nextPage = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const settingWordPack = (info) => {\n    // check old pack vs new pack\n    let isEqual = true;\n    if (packInfo !== \"topic\" && packInfo.topic !== info.topic) {\n      isEqual = false;\n    }\n    if (isEqual) isEqual = equalArray(packInfo.topic, info.topic);\n\n    totalPage.current = 0;\n    preSearchList.current = [];\n    setMore(true);\n    setList([]);\n    setPackInfo(info);\n    setPage(1);\n  };\n\n  const onSortTypeChange = (type = \"Newest\") => {\n    if (type === sortType) return;\n    preSearchList.current = [];\n    setSortType(type);\n    setPage(1);\n    setList([]);\n  };\n\n  const onSearchWord = async (name) => {\n    try {\n      if (name === \"\") {\n        setList(preSearchList.current);\n        setMore(true);\n        return;\n      }\n      const apiRes = await listeningApi.searchListen(name);\n      if (apiRes.status === 200) {\n        // const { packList = [] } = apiRes.data.listens;\n        setList(apiRes.data.listens);\n        setMore(false);\n      }\n    } catch (error) {}\n  };\n\n  // get word pack\n  useEffect(() => {\n    let isSub = true;\n    (async function () {\n      try {\n        setLoading(true);\n        let apiRes = null;\n        if (packInfo.topic === \"All\") {\n          apiRes = await listeningApi.getAllListen(sortType);\n        } else {\n          apiRes = await listeningApi.getListenByTopic(\n            packInfo.topic,\n            sortType\n          );\n        }\n        if (apiRes && isSub) {\n          // const { packList = [] } = apiRes.data.listens;\n          const newList = apiRes.data.listens;\n          preSearchList.current = newList;\n          setList(newList);\n        }\n      } catch (error) {\n      } finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n\n    return () => (isSub = false);\n  }, [page, packInfo, sortType]);\n\n  return (\n    <>\n      <ListeningAdmin\n        list={list}\n        loading={loading}\n        onLoadData={nextPage}\n        more={more}\n        isFirstLoad={isFirstLoad}\n        onSettingWordPack={settingWordPack}\n        onSortTypeChange={onSortTypeChange}\n        onSearchWord={onSearchWord}\n      />\n      <ListeningDetailModal />\n    </>\n  );\n}\n\nexport default QuizAdminData;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\CreateListen\\data.js",["1074","1075"],"import listeningApi from 'apis/listeningApi';\nimport React, { useState, useEffect  } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { messageReducer } from '/src/redux/reducers/messageReducer';\nimport CreateListening from './index';\nimport { setMessage } from 'redux/actions/messageAction';\n//import messageReducer from 'redux/reducers/messageReducer';\n\nconst analysisLinkVideo = (linkVideo = '') => {\n  if (typeof linkVideo !== 'string' || linkVideo === '') {\n    return null;\n  }\n\n  let checkVid = linkVideo.includes(\"https://www.youtube.com\")\n  if(!checkVid){\n      checkVid =linkVideo.includes(\"youtu.be/\")\n      if(checkVid)\n      {\n        return linkVideo;\n      }\n      return null;\n  }\n  return linkVideo;\n};\n\n\nfunction CreateListeningData() {\n  const [submitting, setSubmitting] = useState(false);\n  const dispatch = useDispatch();\n\n\n  const handleSubmit = async (data) => {\n    try {\n      setSubmitting(true);\n      const { VidUpload, LinkVideo, ...rest } = data;\n      let dataSend = []\n      console.log(data);\n      if(VidUpload == null){\n      //  console.log(data)\n        const videoUrl = analysisLinkVideo(LinkVideo);\n        if (videoUrl==null) {\n          dispatch(setMessage(\"Link video is invalid.\", \"warning\"));\n          setSubmitting(false);\n          return;\n        }\n        dataSend ={\n          ...rest,\n         Video: videoUrl,\n        };\n      }\n      else{\n        dataSend ={\n          ...rest,\n         Video: VidUpload,\n        };  \n      }     \n      const apiRes = await listeningApi.postListen(dataSend);\n      console.log(apiRes.data)\n      if (apiRes.status === 200) {\n        dispatch(setMessage(\"Created listening successfully\", \"success\"));\n        setSubmitting(false);\n     }\n\n    } catch (error) {\n      const message =  error.response?.data?.message ||\n      'Error, can not create listening.';\n        dispatch(setMessage(message, \"error\"));\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <CreateListening onSubmitForm={handleSubmit} submitting={submitting} />\n  );\n}\n\nexport default CreateListeningData;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\AddWord\\data.js",["1076","1077"],"import wordApi from \"apis/wordApi\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { messageReducer } from '/src/redux/reducers/messageReducer';\nimport WordContribution from \"./index\";\nimport { setMessage } from \"redux/actions/messageAction\";\n//import messageReducer from 'redux/reducers/messageReducer';\n\nconst analysisExample = (exampleStr = \"\", word = \"\") => {\n  if (typeof exampleStr !== \"string\" || exampleStr === \"\") {\n    return [];\n  }\n\n  const exampleArr = exampleStr.split(\"\\n\");\n  for (let str of exampleArr) {\n    if (str.toLocaleLowerCase().indexOf(word.toLocaleLowerCase()) === -1) {\n      return false;\n    }\n  }\n\n  return exampleArr;\n};\n\nfunction WordContributionData() {\n  const [submitting, setSubmitting] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (data) => {\n    try {\n      setSubmitting(true);\n      const { examples, synonyms, antonyms, word, phonetic, ...rest } = data;\n\n      // check examples validation\n      const exampleArr = analysisExample(examples, word);\n      if (typeof exampleArr === \"boolean\" && !exampleArr) {\n        dispatch(setMessage(\"Câu ví dụ phải chứa từ vựng mới.\", \"warning\"));\n        setSubmitting(false);\n        return;\n      }\n\n      // split synonyms string to an array synonyms\n      const synonymArr = synonyms !== \"\" ? synonyms.split(\"\\n\") : [];\n\n      // split antonyms string to an array synonyms\n      const antonymArr = antonyms !== \"\" ? antonyms.split(\"\\n\") : [];\n\n      // call API\n      const dataSend = {\n        ...rest,\n        examples: exampleArr,\n        synonyms: synonymArr,\n        antonyms: antonymArr,\n        word,\n        phonetic: phonetic.replaceAll(\"/\", \"\"),\n      };\n      const apiRes = await wordApi.postWord(dataSend);\n      if (apiRes) {\n        dispatch(setMessage(\"Created word successfully\", \"success\"));\n        setSubmitting(false);\n      }\n    } catch (error) {\n      const message =\n        error.response?.data?.message || \"Error, can not create word\";\n      dispatch(setMessage(message, \"error\"));\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <WordContribution onSubmitForm={handleSubmit} submitting={submitting} />\n  );\n}\n\nexport default WordContributionData;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\CreateGrammar\\data.js",["1078"],"import grammarApi from 'apis/grammarApi';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport CreateGrammar from './index';\nimport { setMessage } from 'redux/actions/messageAction';\n\nconst analysisLinkVideo = (linkVideo = '') => {\n  if (typeof linkVideo !== 'string' || linkVideo === '') {\n    return null;\n  }\n\n  let checkVid = linkVideo.includes(\"https://www.youtube.com\")\n  if(!checkVid){\n      checkVid =linkVideo.includes(\"youtu.be/\")\n      if(checkVid)\n      {\n        return linkVideo;\n      }\n      return null;\n  }\n  return linkVideo;\n};\n\n\nfunction CreateGrammarData() {\n  const [submitting, setSubmitting] = useState(false);\n  const dispatch = useDispatch();\n\n\n  const handleSubmit = async (data) => {\n    try {\n      setSubmitting(true);\n      const { VidUpload, LinkVideo, ...rest } = data;\n      let dataSend = []\n      if(VidUpload == null){\n          if(LinkVideo || LinkVideo.trim()!='' ){\n        //  console.log(data)\n          const videoUrl = analysisLinkVideo(LinkVideo);\n          if (videoUrl==null) {\n            dispatch(setMessage(\"Link video is invalid.\", \"warning\"));\n            setSubmitting(false);\n            return;\n          }\n          dataSend ={\n            ...rest,\n          Video: videoUrl,\n          };\n        }\n        else{\n          dataSend ={\n            ...rest,\n          };\n        }\n      }\n      else{\n        dataSend ={\n          ...rest,\n         Video: VidUpload,\n        };  \n      }  \n      console.log(dataSend);   \n      const apiRes = await grammarApi.postGrammar(dataSend);\n\n      if (apiRes.status === 200) {\n        dispatch(setMessage(\"Created grammar successfully\", \"success\"));\n        setSubmitting(false);\n     }\n\n    } catch (error) {\n      const message =  error.response?.data?.message ||\n      'Error, can not create listening.';\n        dispatch(setMessage(message, \"error\"));\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <CreateGrammar onSubmitForm={handleSubmit} submitting={submitting} />\n  );\n}\n\nexport default CreateGrammarData;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\Speaker.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\ipaApi.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\EditListening\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\CreateListen\\InformationTooltip.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\SettingMenu\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\constants\\voiceConstant.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\index.js",["1079","1080"],"import LoopIcon from '@material-ui/icons/Loop';\nimport AutoSearchInput from 'components/UI/AutoSearchInput';\nimport InfiniteScroll from 'components/UI/InfiniteScroll';\nimport SortTypeModal from 'components/UI/SortType';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport useStyle from './style';\nimport WordItem from './ListeningItem/index';\nimport WordPackSetting from './WordPackSetting';\nimport WordSkeleton from './WordSkeleton';\nimport AddIcon from '@material-ui/icons/Add';\nimport { ROUTES } from 'constants/index';\nimport { useHistory } from 'react-router-dom';\n\nfunction ListeningAdmin({\n  list,\n  loading,\n  onLoadData,\n  more,\n  isFirstLoad,\n  onSettingWordPack,\n  onSortTypeChange,\n  onSearchWord,\n}) {\n  const classes = useStyle();\n  const history = useHistory();\n  \n  return (\n    <div className={`${classes.root} dyno-container`}>\n      {/* title - menu */}\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">Manage Listening</h1>\n        <div>\n          <AddIcon className=\"dyno-setting-icon mr-5\" onClick={() => history.push(ROUTES.ADD_LISTEN)}/>\n  \n          <SortTypeModal\n            onSelect={onSortTypeChange}\n            classNameIcon=\"dyno-setting-icon mr-5\"\n          />\n          <WordPackSetting\n              onChoose={onSettingWordPack}\n              classNameIcon=\"dyno-setting-icon\"\n          />\n        </div>\n      </div>\n      <div className=\"dyno-break\"></div>\n\n      {/* list content */}\n      <div className={classes.contentWrap}>\n        <AutoSearchInput disabled={loading} onSearch={onSearchWord} />\n\n        <div className={`${classes.listWrap} w-100`}>\n          <ul id=\"dictionaryId\" className={`${classes.list} flex-col w-100`}>\n            <>\n              {isFirstLoad ? (\n                <WordSkeleton className={classes.skeleton} />\n              ) : (\n                <>\n                  {list && list.length > 0 ? (\n                    <>\n                      {/* render list */}\n                      {list.map((item, index) => (\n                        <li className={classes.listItem} key={index}>\n                          <WordItem {...item} />\n                        </li>\n                      ))}\n\n                      {/* infinite scrolling */}\n                      {!loading && more && (\n                        <InfiniteScroll\n                          onTouchAnchor={onLoadData}\n                          threshold={1}>\n                          <div className=\"w-100 t-center\">\n                            <LoopIcon className=\"ani-spin\" />\n                          </div>\n                        </InfiniteScroll>\n                      )}\n                    </>\n                  ) : (\n                    // empty list\n                    <h3 className=\"notfound-title h-100 flex-center t-center\">\n                      No result.\n                    </h3>\n                  )}\n                </>\n              )}\n            </>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nListeningAdmin.propTypes = {\n  isFirstLoad: PropTypes.bool,\n  list: PropTypes.array,\n  loading: PropTypes.bool,\n  more: PropTypes.bool,\n  onLoadData: PropTypes.func,\n  onSearchWord: PropTypes.func,\n  onSettingWordPack: PropTypes.func,\n  onSortTypeChange: PropTypes.func,\n};\n\nListeningAdmin.defaultProps = {\n  list: [],\n  loading: false,\n  more: true,\n  isFirstLoad: true,\n  onLoadData: function () {},\n  onSearchWord: function () {},\n  onSettingWordPack: function () {},\n  onSortTypeChange: function () {},\n};\n\nexport default ListeningAdmin;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\RichTextEditor.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\CreateListen\\index.js",["1081","1082"],"import { yupResolver } from '@hookform/resolvers/yup';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport ResetIcon from '@material-ui/icons/RotateLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport InputCustom from 'components/UI/InputCustom';\nimport SelectCustom from 'components/UI/SelectCustom';\nimport { LISTEN_TOPIC } from './../../../constants/listeningTopics';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport InformationTooltip from './InformationTooltip';\nimport useStyle from './style';\nimport Box from \"@material-ui/core/Box\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport RichTextEditor from 'components/UI/RichTextEditor';\n\nconst schema = yup.object().shape({\n  Name: yup\n    .string()\n    .trim()\n    .required('Input value'),\n  Description: yup\n    .string()\n    .required('Input value'),\n  Topic: yup\n    .string()\n    .required('Select one')\n    .oneOf(LISTEN_TOPIC.map((i) => i.value)),\n  LinkVideo: yup\n    .string(),\n  Script: yup\n    .string(),\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n         <Grid>{children}</Grid>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nfunction CreateListening({ onSubmitForm, submitting }) {\n  const classes = useStyle();\n  const [resetFlag, setResetFlag] = useState(0);\n  const [value, setValue] = useState(1);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const defaultImg =\n  \"https://res.cloudinary.com/phongvn2611/image/upload/v1638368033/english/word/default-image_fbmbtn.png\";\n  const [image, setImage] = useState(defaultImg);\n  const [video, setVideo] = useState(null);\n  const [script, setScript] = useState(\"\");\n  const getScript = (spt) => {\n    setScript(spt);\n  };\n\n  const convertImageToBase64 = (image) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(image);\n    return new Promise((resolve) => {\n      reader.onloadend = () => {\n        resolve(reader.result);\n      };\n    });\n  };\n\n  const handleChangePicture = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n      convertImageToBase64(file).then(res => {\n        setImage(res);\n      });\n      \n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const handleChangeVideo = (e) => {\n   // console.log(e)\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n     convertImageToBase64(file).then(res => {\n        setVideo(res);\n      });\n      \n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const onSubmit = (data) => {\n    onSubmitForm({ ...data, VidUpload: video, Image: image, Script: script });\n  };\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n\n  return (\n    <div >\n      <h1 className={classes.title}>Creat new listening in system</h1>\n      <div className=\"dyno-break\"></div>\n\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n      <Grid container alignContent=\"center\">\n          <div className={classes.avtWrap}>\n            <img\n              src={image ? image : defaultImg}\n              alt=\"\"\n              className={`${classes.avt} w-100 h-100`}\n            />\n            <div className={`${classes.cameraIconWrap} flex-center`}>\n              <input\n                type=\"file\"\n                className={classes.fileInput}\n                onChange={handleChangePicture}\n                accept=\"image/*\"\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid className={classes.grid} container spacing={3}>\n          {/* new name */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Name (*)\"\n              error={Boolean(errors.Name)}\n              inputProps={{\n                autoFocus: true,\n                name: 'Name',\n                ...register('Name'),\n              }}\n            />\n            {errors.Name && (\n              <p className=\"text-error\">{errors.Name?.message}</p>\n            )}\n          </Grid>\n\n          {/* Description */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Description (*)\"\n              error={Boolean(errors.Description)}\n              inputProps={{\n                name: 'Description',\n                ...register('Description'),\n              }}\n            />\n            {errors.Description && (\n              <p className=\"text-error\">{errors.Description?.message}</p>\n            )}\n          </Grid>\n\n          {/* topic */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Topic (*)\"\n              options={LISTEN_TOPIC}\n              error={Boolean(errors.Topic)}\n              resetFlag={resetFlag}\n              index={0}\n              inputProps={{\n                name: 'Topic',\n                ...register('Topic'),\n              }}\n            />\n            {errors.type && (\n              <p className=\"text-error\">{errors.Topic?.message}</p>\n            )}\n          </Grid>\n          <Box sx={{ width: \"50%\" }}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"basic tabs example\"\n              indicatorColor=\"primary\"\n            >\n              <Tab label=\"Upload\" {...a11yProps(0)} />\n              <Tab label=\"Link\" {...a11yProps(1)} />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n                   {/* Video */}\n            <Grid item xs={6}>\n              <Grid container alignContent=\"center\">\n              <div className={classes.avtWrap}>\n              <div className={`${classes.cameraIconWrap} flex-center`}>\n                <input\n                  type=\"file\"\n                  className={classes.fileInput}\n                  onChange={handleChangeVideo}\n                  accept=\"video/*\"\n                />\n              </div>\n            </div>\n              </Grid>\n          </Grid>\n          </TabPanel>\n\n          <TabPanel value={value} index={1}>\n          <Grid item xs={6} >\n            <InputCustom\n              className=\"w-100\"\n              label=\"Link Video\"\n              multiline\n              endAdornment={\n                <InformationTooltip title=\"Input link youtube\" />\n              }\n              inputProps={{\n                name: 'LinkVideo',\n                ...register('LinkVideo'),\n              }}\n            />\n\n            {errors.Video && (\n              <p className=\"text-error\">{errors.Video?.message}</p>\n            )}\n          </Grid>\n\n          </TabPanel>\n        </Box>\n      </Grid> \n\n       {/* Script */}\n            <div className=\"row\">\n          <div className=\"col-md-6\" style={{ margin: \"auto\", marginTop: \"50px\" }}>\n            <div style={{ textAlign: \"center\" }}>\n              <h3>Rich Text Editor</h3>\n            </div>\n            <RichTextEditor initialValue=\"\" getValue={getScript} />\n           \n          </div>\n        </div> \n       \n        <div className=\"dyno-break\"></div>\n        {/* button group */}\n        <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\n          <Button\n            className={`${classes.btn} ${classes.btnReset}`}\n            color=\"secondary\"\n            endIcon={<ResetIcon />}\n            variant=\"outlined\"\n            disabled={submitting}\n            onClick={() => history.push(\"/admin/listening\")}\n           >\n            Return\n          </Button>\n          <Button\n            type=\"submit\"\n            className={`${classes.btn} _btn _btn-primary`}\n            disabled={submitting}\n            endIcon={\n              submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\n            }\n            variant=\"contained\">\n            Create\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nCreateListening.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool,\n};\n\nCreateListening.defaultProps = {\n  onSubmitForm: function () {},\n  submitting: false,\n};\n\nexport default CreateListening;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\CreateGrammar\\index.js",["1083","1084","1085","1086","1087"],"import { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport SelectCustom from \"components/UI/SelectCustom\";\nimport PropTypes from \"prop-types\";\nimport React, { useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport InformationTooltip from \"./InformationTooltip\";\nimport useStyle from \"./style\";\nimport Box from \"@material-ui/core/Box\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport { convertImageToBase64 } from \"helper\";\nimport { GRAMMAR_LEVEL } from \"constants/grammarLevels\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { DialogActions } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport InfiniteScroll from \"components/UI/InfiniteScroll\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RichTextEditor from 'components/UI/RichTextEditor';\n\nconst schema = yup.object().shape({\n  Title: yup.string().trim().required(\"Input value\"),\n  Content: yup.string().required(\"Input value\"),\n  Level: yup\n    .string()\n    .required(\"Select one\")\n    .oneOf(GRAMMAR_LEVEL.map((i) => i.value)),\n  LinkVideo: yup.string(),\n  Script: yup.string(),\n  Items: yup.array(),\n  Point: yup.string().required(\"Input value\"),\n  Examples: yup.string().required(\"Input value\"),\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Grid>{children}</Grid>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nfunction CreateGrammar({ onSubmitForm, submitting }) {\n  const classes = useStyle();\n  const [resetFlag, setResetFlag] = useState(0);\n  const [value, setValue] = useState(1);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  //grammar item\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editItems, setEditItems] = useState(false);\n  const [indexEdit, setIndexEdit] = useState(-1);\n  const [grammarItems, setgrammarItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const totalPage = useRef(0);\n\n  const [point, setPoint] = useState({\n    Point: \"\",\n    Examples: \"\",\n  });\n  const handleChangeDialog = (event) => {\n    const { name, value } = event.target;\n    setPoint({ ...point, [name]: value });\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setPoint({ Point: \"\", Examples: \"\" });\n  };\n\n  const handleOpenDialog = () => {\n    setOpenDialog(true);\n  };\n\n  const handleDialogSubmit = () => {\n    if (point.Point.trim() !== \"\") {\n      if (editItems) {\n        grammarItems[indexEdit] = point;\n        setEditItems(false);\n        setIndexEdit(-1);\n      } else {\n        grammarItems.push(point);\n      }\n    }\n    setOpenDialog(false);\n    setPoint({ Point: \"\", Examples: \"\" });\n  };\n\n  const onLoadData = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const onClickItem = (index) => {\n    setPoint(grammarItems[index]);\n    setEditItems(true);\n    setIndexEdit(index);\n    setOpenDialog(true);\n  };\n  const deleleGrammarItems = (index) => {\n    let arr = [];\n    for (let i = 0; i < grammarItems.length; i++) {\n      if (i !== index) arr.push(grammarItems[i]);\n    }\n    setgrammarItems(arr);\n  };\n  //grammar item\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const defaultImg =\n    \"https://res.cloudinary.com/phongvn2611/image/upload/v1638368033/english/word/default-image_fbmbtn.png\";\n  const [image, setImage] = useState(defaultImg);\n  const [video, setVideo] = useState(null);\n  const [audio, setAudio] = useState(null);\n  const [script, setScript] = useState(\"\");\n  const getScript = (spt) => {\n    setScript(spt);\n  };\n\n  const handleChangePicture = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n      convertImageToBase64(file).then((res) => {\n        setImage(res);\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const handleChangeAudio = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n      convertImageToBase64(file).then((res) => {\n        setAudio(res);\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const handleChangeVideo = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n      convertImageToBase64(file).then((res) => {\n        setVideo(res);\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const onSubmit = (data) => {\n    onSubmitForm({\n      ...data,\n      VidUpload: video,\n      Image: image,\n      Audio: audio,\n      Script: script,\n      Items: grammarItems,\n    });\n  };\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div>\n      <h1 className={classes.title}>Thêm ngữ pháp</h1>\n      <div className=\"dyno-break\"></div>\n\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <Grid container alignContent=\"center\">\n          <div className={classes.avtWrap}>\n            <img\n              src={image ? image : defaultImg}\n              alt=\"\"\n              className={`${classes.avt} w-100 h-100`}\n            />\n            <div className={`${classes.cameraIconWrap} flex-center`}>\n              <input\n                type=\"file\"\n                className={classes.fileInput}\n                onChange={handleChangePicture}\n                accept=\"image/*\"\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid className={classes.grid} container spacing={3}>\n          {/* Title */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Title (*)\"\n              error={Boolean(errors.Title)}\n              inputProps={{\n                autoFocus: true,\n                name: \"Title\",\n                ...register(\"Title\"),\n              }}\n            />\n            {errors.Title && (\n              <p className=\"text-error\">{errors.Title?.message}</p>\n            )}\n          </Grid>\n\n          {/* Content */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Content (*)\"\n              error={Boolean(errors.Content)}\n              inputProps={{\n                name: \"Content\",\n                ...register(\"Content\"),\n              }}\n            />\n            {errors.Content && (\n              <p className=\"text-error\">{errors.Content?.message}</p>\n            )}\n          </Grid>\n\n          {/* Level */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Level (*)\"\n              options={GRAMMAR_LEVEL}\n              error={Boolean(errors.Level)}\n              resetFlag={resetFlag}\n              index={0}\n              inputProps={{\n                name: \"Level\",\n                ...register(\"Level\"),\n              }}\n            />\n            {errors.type && (\n              <p className=\"text-error\">{errors.Level?.message}</p>\n            )}\n          </Grid>\n          {/* Audio */}\n\n          <Box sx={{ width: \"100%\" }}>\n            <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                aria-label=\"basic tabs example\"\n                indicatorColor=\"primary\"\n              >\n                <Tab label=\"Upload\" {...a11yProps(0)} />\n                <Tab label=\"Link\" {...a11yProps(1)} />\n                <Tab label=\"Audio\" {...a11yProps(2)} />\n              </Tabs>\n            </Box>\n            <TabPanel value={value} index={0}>\n              {/* Video */}\n              <Grid item xs={6}>\n                <Grid container alignContent=\"center\">\n                  <div className={classes.avtWrap}>\n                    <div className={`${classes.cameraIconWrap} flex-center`}>\n                      <input\n                        type=\"file\"\n                        className={classes.fileInput}\n                        onChange={handleChangeVideo}\n                        accept=\"video/*\"\n                      />\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </TabPanel>\n\n            <TabPanel value={value} index={1}>\n              <Grid item xs={6}>\n                <InputCustom\n                  className=\"w-100\"\n                  label=\"Link Video\"\n                  multiline\n                  endAdornment={\n                    <InformationTooltip title=\"Input link youtube\" />\n                  }\n                  inputProps={{\n                    name: \"LinkVideo\",\n                    ...register(\"LinkVideo\"),\n                  }}\n                />\n\n                {errors.Video && (\n                  <p className=\"text-error\">{errors.Video?.message}</p>\n                )}\n              </Grid>\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n              {/* Audio */}\n              <Grid item xs={6}>\n                <Grid container alignContent=\"center\">\n                  <div className={classes.avtWrap}>\n                    <div className={`${classes.cameraIconWrap} flex-center`}>\n                      <input\n                        type=\"file\"\n                        className={classes.fileInput}\n                        onChange={handleChangeAudio}\n                        accept=\"audio/*\"\n                      />\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </TabPanel>\n          </Box>\n          </Grid>\n\n          {/* Script */}\n      <div className=\"row\">\n          <div className=\"col-md-6\" style={{ margin: \"auto\", marginTop: \"50px\" }}>\n            <div style={{ textAlign: \"center\" }}>\n              <h3>Rich Text Editor</h3>\n            </div>\n            <RichTextEditor initialValue=\"\" getValue={getScript} />\n           \n          </div>\n        </div> \n\n\n        {/* Grammar Item */}\n        <div className={`${classes.root2} dyno-container`}>\n          <div className=\"flex-center-between\">\n            <h1 className=\"dyno-title\">Add Content for grammar</h1>\n            <div>\n              <AddIcon\n                className=\"dyno-setting-icon mr-5\"\n                onClick={() => handleOpenDialog()}\n              />\n              {/* Dialog */}\n              <Dialog onClose={handleCloseDialog} open={openDialog}>\n                <DialogTitle onClose={handleCloseDialog}>Add point</DialogTitle>\n                <DialogContent dividers>\n                  <form noValidate>\n                    {/* Point */}\n                    <Grid item xs={12}>\n                      <InputCustom\n                        className=\"w-100\"\n                        label=\"Point\"\n                        value={point.Point}\n                        endAdornment={\n                          <InformationTooltip title=\"Input value\" />\n                        }\n                        error={Boolean(errors.Point)}\n                        inputProps={{\n                          name: \"Point\",\n                          ...register(\"Point\"),\n                        }}\n                        onChange={handleChangeDialog}\n                      />\n                      {errors.Point && (\n                        <p className=\"text-error\">{errors.Point?.message}</p>\n                      )}\n                    </Grid>\n                    <Grid item xs={12}>\n                      <InputCustom\n                        className=\"w-100\"\n                        label=\"Examples\"\n                        multiline\n                        value={point.Examples}\n                        endAdornment={\n                          <InformationTooltip title=\"Input value\" />\n                        }\n                        error={Boolean(errors.Examples)}\n                        inputProps={{\n                          name: \"Examples\",\n                          ...register(\"Examples\"),\n                        }}\n                        onChange={handleChangeDialog}\n                      />\n                      {errors.Examples && (\n                        <p className=\"text-error\">{errors.Examples?.message}</p>\n                      )}\n                    </Grid>\n                  </form>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleCloseDialog} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={handleDialogSubmit}\n                    color=\"primary\"\n                    autoFocus\n                  >\n                    Save\n                  </Button>\n                </DialogActions>\n              </Dialog>\n              {/* Dialog */}\n            </div>\n          </div>\n          <div className=\"dyno-break\"></div>\n\n          {/* list content */}\n          <div className={classes.contentWrap}>\n            <div className={`${classes.listWrap} w-100`}>\n              <ul\n                id=\"dictionaryId\"\n                className={`${classes.list} flex-col w-100`}\n              >\n                <>\n                  {isFirstLoad && (\n                    <>\n                      {grammarItems && grammarItems.length > 0 && (\n                        <>\n                          {/* render list */}\n                          {grammarItems.map((item, index) => (\n                            <li className={classes.listItem} key={index}>\n                              <div\n                                className={`${classes.root3} flex-center-between`}\n                              >\n                                <div\n                                  className=\"w-100 flex-center--ver\"\n                                  onClick={() => onClickItem(index)}\n                                >\n                                  <div className=\"ml-8 flex-grow-1\">\n                                    <h3 className={classes.word}>\n                                      {item.Point}\n                                    </h3>\n                                  </div>\n                                </div>\n                                <div className=\"flex-center--ver\">\n                                  <div className=\"mr-5\"></div>\n                                  <DeleteIcon\n                                    className=\"dyno-setting-icon\"\n                                    onClick={() => deleleGrammarItems(index)}\n                                  />\n                                </div>\n                              </div>\n                            </li>\n                          ))}\n\n                          {/* infinite scrolling */}\n                          {!loading && more && (\n                            <InfiniteScroll\n                              onTouchAnchor={onLoadData}\n                              threshold={1}\n                            >\n                              <div className=\"w-100 t-center\">\n                                <LoopIcon className=\"ani-spin\" />\n                              </div>\n                            </InfiniteScroll>\n                          )}\n                        </>\n                      )}\n                    </>\n                  )}\n                </>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"dyno-break\"></div>\n        {/* button group */}\n        <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\n          <Button\n            className={`${classes.btn} ${classes.btnReset}`}\n            color=\"secondary\"\n            endIcon={<ResetIcon />}\n            variant=\"outlined\"\n            disabled={submitting}\n            onClick={() => history.push(\"/admin/grammar\")}\n          >\n            Return\n          </Button>\n          <Button\n            type=\"submit\"\n            className={`${classes.btn} _btn _btn-primary`}\n            disabled={submitting}\n            endIcon={\n              submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\n            }\n            variant=\"contained\"\n          >\n            Create\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nCreateGrammar.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool,\n};\n\nCreateGrammar.defaultProps = {\n  onSubmitForm: function () {},\n  submitting: false,\n};\n\nexport default CreateGrammar;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\AddWord\\index.js",["1088"],"import { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport wordApi from \"apis/wordApi\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport SelectCustom from \"components/UI/SelectCustom\";\nimport TopicSelect from \"components/UI/TopicSelect\";\nimport {\n  MAX,\n  WORD_LEVELS,\n  WORD_SPECIALTY,\n  WORD_TYPES,\n} from \"./../../../constants\";\nimport PropTypes from \"prop-types\";\nimport React, { useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport * as yup from \"yup\";\nimport InformationTooltip from \"./InformationTooltip\";\nimport PhoneticInput from \"./PhoneticInput\";\nimport useStyle from \"./style\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport useTitle from \"hooks/useTitle\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nconst schema = yup.object().shape({\n  word: yup\n    .string()\n    .trim()\n    .required(\"Hãy nhập một từ vào đây\")\n    .lowercase()\n    .max(MAX.WORD_LEN, `Từ dài tối đã ${MAX.WORD_LEN} ký tự`),\n  mean: yup\n    .string()\n    .trim()\n    .lowercase()\n    .required(\"Hãy nhập ý nghĩa từ\")\n    .max(MAX.MEAN_WORD_LEN, `Từ dài tối đã ${MAX.MEAN_WORD_LEN} ký tự`),\n  phonetic: yup\n    .string()\n    .trim()\n    .lowercase()\n    .required(\"Hãy nhập ký âm của từ\")\n    .max(MAX.PHONETIC_LEN, `Từ dài tối đã ${MAX.PHONETIC_LEN} ký tự`),\n  type: yup\n    .string()\n    .required(\"Chọn loại của từ\")\n    .oneOf(WORD_TYPES.map((i) => i.value)),\n  level: yup\n    .string()\n    .required(\"Chọn cấp bậc của từ\")\n    .oneOf(WORD_LEVELS.map((i) => i.value)),\n  specialty: yup\n    .string()\n    .required(\"Chọn cấp bậc của từ\")\n    .oneOf(WORD_SPECIALTY.map((i) => i.value)),\n  examples: yup\n    .string()\n    .max(MAX.EXAMPLE_WORD_LEN, `Ví dụ tối đa ${MAX.EXAMPLE_WORD_LEN} ký tự`),\n  synonyms: yup\n    .string()\n    .max(\n      MAX.SYNONYMS_WORD_LEN,\n      `Từ đồng nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`\n    ),\n  antonyms: yup\n    .string()\n    .max(\n      MAX.SYNONYMS_WORD_LEN,\n      `Từ trái nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`\n    ),\n  note: yup\n    .string()\n    .max(MAX.NOTE_WORD_LEN, `Ghi chú tối đa ${MAX.NOTE_WORD_LEN} ký tự`),\n});\n\n// Prevent unmount component topic select\nconst ButtonWrapper = (props) => <Grid {...props} item xs={12} md={6} lg={4} />;\nconst TagsWrapper = (props) => <Grid {...props} item xs={12} />;\n\nfunction WordContribution({ onSubmitForm, submitting }) {\n  useTitle(\"Add word\");\n\n  const classes = useStyle();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const topics = useRef([]);\n  const history = useHistory();\n  const defaultImg =\n  \"https://res.cloudinary.com/phongvn2611/image/upload/v1638368033/english/word/default-image_fbmbtn.png\";\n  const [image, setImage] = useState(defaultImg);\n\n  const convertImageToBase64 = (image) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(image);\n    return new Promise((resolve) => {\n      reader.onloadend = () => {\n        resolve(reader.result);\n      };\n    });\n  };\n\n  const handleChangePicture = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n      convertImageToBase64(file).then(res => {\n        setImage(res);\n      });\n      \n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const onSubmit = (data) => {\n    onSubmitForm({ ...data, topics: topics.current, picture: image });\n  };\n\n  return (\n    <div>\n      <h1 className={classes.title}>Thêm từ mới</h1>\n      <div className=\"dyno-break\"></div>\n\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <Grid container alignContent=\"center\">\n          <div className={classes.avtWrap}>\n            <img\n              src={image ? image : defaultImg}\n              alt=\"\"\n              className={`${classes.avt} w-100 h-100`}\n            />\n            <div className={`${classes.cameraIconWrap} flex-center`}>\n              <CameraIcon className={classes.cameraIcon} />\n              <input\n                type=\"file\"\n                className={classes.fileInput}\n                onChange={handleChangePicture}\n                accept=\"image/*\"\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid className={classes.grid} container spacing={3}>\n          {/* new word */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Từ mới (*)\"\n              error={Boolean(errors.word)}\n              inputProps={{\n                autoFocus: true,\n                maxLength: MAX.WORD_LEN,\n                name: \"word\",\n                ...register(\"word\"),\n              }}\n              // onChange={(e) => handleCheckWordExistence(e, null)}\n            />\n            {errors.word && (\n              <p className=\"text-error\">{errors.word?.message}</p>\n            )}\n          </Grid>\n\n          {/* mean */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Nghĩa của từ (*)\"\n              error={Boolean(errors.mean)}\n              inputProps={{\n                maxLength: MAX.MEAN_WORD_LEN,\n                name: \"mean\",\n                ...register(\"mean\"),\n              }}\n            />\n            {errors.mean && (\n              <p className=\"text-error\">{errors.mean?.message}</p>\n            )}\n          </Grid>\n\n          {/* phonetic */}\n          <PhoneticInput\n            errorMessage={errors.phonetic?.message}\n            error={Boolean(errors.phonetic)}\n            valuePhonetic=\"\"\n            inputProps={{\n              maxLength: MAX.PHONETIC_LEN,\n              name: \"phonetic\",\n            }}\n            register={register(\"phonetic\")}\n          />\n\n          {/* word type */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Loại từ (*)\"\n              options={WORD_TYPES}\n              error={Boolean(errors.type)}\n              index={0}\n              inputProps={{\n                name: \"type\",\n                ...register(\"type\"),\n              }}\n              // onChange={(e) => handleCheckWordExistence(null, e)}\n            />\n            {errors.type && (\n              <p className=\"text-error\">{errors.type?.message}</p>\n            )}\n          </Grid>\n\n          {/* word level */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Cấp bậc của từ (*)\"\n              options={WORD_LEVELS}\n              error={Boolean(errors.level)}\n              index={0}\n              inputProps={{ name: \"level\", ...register(\"level\") }}\n            />\n            {errors.level && (\n              <p className=\"text-error\">{errors.level?.message}</p>\n            )}\n          </Grid>\n\n          {/* word specialty */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Thuộc chuyên ngành\"\n              options={WORD_SPECIALTY}\n              error={Boolean(errors.specialty)}\n              index={0}\n              inputProps={{\n                name: \"specialty\",\n                ...register(\"specialty\"),\n              }}\n            />\n            {errors.specialty && (\n              <p className=\"text-error\">{errors.specialty?.message}</p>\n            )}\n          </Grid>\n\n          {/* examples */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Câu ví dụ\"\n              multiline\n              endAdornment={\n                <InformationTooltip title=\"Thêm các câu ví dụ cho từ trên. Đảm bảo có sự xuất hiện của từ đó trong câu. Bạn có thể thêm nhiều câu bằng cách xuống dòng.\" />\n              }\n              error={Boolean(errors.examples)}\n              inputProps={{\n                name: \"examples\",\n                ...register(\"examples\"),\n              }}\n            />\n\n            {errors.examples && (\n              <p className=\"text-error\">{errors.examples?.message}</p>\n            )}\n          </Grid>\n\n          {/* synonyms */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Các từ đồng nghĩa\"\n              multiline\n              error={Boolean(errors.synonyms)}\n              inputProps={{\n                name: \"synonyms\",\n                ...register(\"synonyms\"),\n              }}\n            />\n            {errors.synonyms && (\n              <p className=\"text-error\">{errors.synonyms?.message}</p>\n            )}\n          </Grid>\n\n          {/* antonyms */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Các từ trái nghĩa\"\n              multiline\n              error={Boolean(errors.antonyms)}\n              inputProps={{\n                name: \"antonyms\",\n                ...register(\"antonyms\"),\n              }}\n            />\n            {errors.antonyms && (\n              <p className=\"text-error\">{errors.antonyms?.message}</p>\n            )}\n          </Grid>\n\n          {/* note */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Ghi chú\"\n              multiline\n              endAdornment={\n                <InformationTooltip title=\"Nhập thêm ghi chú mà bạn muốn cho từ. Thêm nhiều dòng bằng cách xuống dòng.\" />\n              }\n              error={Boolean(errors.note)}\n              inputProps={{\n                name: \"note\",\n                ...register(\"note\"),\n              }}\n            />\n            {errors.note && (\n              <p className=\"text-error\">{errors.note?.message}</p>\n            )}\n          </Grid>\n\n          <TopicSelect\n            onChange={(topicList) => (topics.current = topicList)}\n            buttonTitle=\"Thêm chủ đề\"\n            buttonWrapper={ButtonWrapper}\n            tagsWrapper={TagsWrapper}\n          />\n        </Grid>\n\n        <div className=\"dyno-break\"></div>\n        {/* button group */}\n        <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\n          <Button\n            className={`${classes.btn} ${classes.btnReset}`}\n            color=\"secondary\"\n            endIcon={<ResetIcon />}\n            variant=\"outlined\"\n            onClick={() => history.push(\"/admin/word\")}\n          >\n            Quay lại\n          </Button>\n          <Button\n            type=\"submit\"\n            className={`${classes.btn} _btn _btn-primary`}\n            disabled={submitting}\n            endIcon={\n              submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\n            }\n            variant=\"contained\"\n          >\n            Thêm từ\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nWordContribution.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool,\n};\n\nWordContribution.defaultProps = {\n  onSubmitForm: function () {},\n  submitting: false,\n};\n\nexport default WordContribution;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\index.js",["1089","1090","1091","1092","1093"],"import LoopIcon from '@material-ui/icons/Loop';\nimport AutoSearchInput from 'components/UI/AutoSearchInput';\nimport InfiniteScroll from 'components/UI/InfiniteScroll';\nimport SortTypeModal from 'components/UI/SortType';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport useStyle from './style';\nimport WordItem from './ListeningItem/index';\nimport WordPackSetting from './WordPackSetting';\nimport WordSkeleton from './WordSkeleton';\nimport AddIcon from '@material-ui/icons/Add';\nimport { ROUTES } from 'constants/index';\nimport { useHistory } from 'react-router-dom';\n\nfunction QuizAdmin({\n  list,\n  loading,\n  onLoadData,\n  more,\n  isFirstLoad,\n  onSettingWordPack,\n  onSortTypeChange,\n  onSearchWord,\n}) {\n  const classes = useStyle();\n  const history = useHistory();\n  \n  return (\n    <div className={`${classes.root} dyno-container`}>\n      {/* title - menu */}\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">Quản lý quiz</h1>\n        <div>\n          \n  \n          <SortTypeModal\n            onSelect={onSortTypeChange}\n            classNameIcon=\"dyno-setting-icon mr-5\"\n          />\n          <WordPackSetting\n              onChoose={onSettingWordPack}\n              classNameIcon=\"dyno-setting-icon\"\n          />\n        </div>\n      </div>\n      <div className=\"dyno-break\"></div>\n\n      {/* list content */}\n      <div className={classes.contentWrap}>\n        <AutoSearchInput disabled={loading} onSearch={onSearchWord} />\n\n        <div className={`${classes.listWrap} w-100`}>\n          <ul id=\"dictionaryId\" className={`${classes.list} flex-col w-100`}>\n            <>\n              {isFirstLoad ? (\n                <WordSkeleton className={classes.skeleton} />\n              ) : (\n                <>\n                  {list && list.length > 0 ? (\n                    <>\n                      {/* render list */}\n                      {list.map((item, index) => (\n                        <li className={classes.listItem} key={index}>\n                          <WordItem {...item} />\n                        </li>\n                      ))}\n\n                      {/* infinite scrolling */}\n                      {!loading && more && (\n                        <InfiniteScroll\n                          onTouchAnchor={onLoadData}\n                          threshold={1}>\n                          <div className=\"w-100 t-center\">\n                            <LoopIcon className=\"ani-spin\" />\n                          </div>\n                        </InfiniteScroll>\n                      )}\n                    </>\n                  ) : (\n                    // empty list\n                    <h3 className=\"notfound-title h-100 flex-center t-center\">\n                      No result.\n                    </h3>\n                  )}\n                </>\n              )}\n            </>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nQuizAdmin.propTypes = {\n  isFirstLoad: PropTypes.bool,\n  list: PropTypes.array,\n  loading: PropTypes.bool,\n  more: PropTypes.bool,\n  onLoadData: PropTypes.func,\n  onSearchWord: PropTypes.func,\n  onSettingWordPack: PropTypes.func,\n  onSortTypeChange: PropTypes.func,\n};\n\nQuizAdmin.defaultProps = {\n  list: [],\n  loading: false,\n  more: true,\n  isFirstLoad: true,\n  onLoadData: function () {},\n  onSearchWord: function () {},\n  onSettingWordPack: function () {},\n  onSortTypeChange: function () {},\n};\n\nexport default QuizAdmin;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\constants\\listeningTopics.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\CreateListen\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\listeningApi.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Modal\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\grammarApi.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\wordApi.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\WordSkeleton.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\hooks\\useSpeaker.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\WordPackSetting.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\ListeningItem\\index.js",["1094"],"\nimport { cloudinaryImgOptimize } from \"helper\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport useStyle from \"./style\";\nimport WordDetailModal from \"components/UI/WordDetailModal\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport { DEFAULTS } from '../../../constants/index';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { deleteListen } from \"redux/actions/listeningAction\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction ListeningItem({ _id, Name, Image, Topic, CreateDate }) {\n  const classes = useStyle();\n  const imgSrc = cloudinaryImgOptimize(\n    Image ? Image : DEFAULTS.IMAGE_SRC,\n    50,\n    50,\n    true,\n    true\n  );\n\n  const history = useHistory();\n  function handleClick(id) {\n    history.push(`/admin/listening/details/${id}`);\n  }\n  function handleEditClick(id) {\n    history.push(`/admin/listening/edit/${id}`);\n  }\n  const [modal, setModal] = useState({ loading: false, open: false });\n  const dispatch = useDispatch();\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Bạn chắc chắn muốn xóa bài viết này?')) {\n       dispatch(deleteListen(id));\n       dispatch(setMessage(\"Delete successfully\", \"success\"));\n     window.location.reload();\n    }\n  };\n\n  return (\n    <>\n      <div className={`${classes.root} flex-center-between`}>\n        <div \n          className=\"w-100 flex-center--ver\"\n          onClick={() => handleClick(_id)}\n        >\n          <img className={classes.picture} src={imgSrc} alt=\"photo\" />\n          <div className=\"ml-8 flex-grow-1\">\n            <h3 className={classes.word}>\n              {Name}\n              \n            </h3>\n          \n              <p className={`${classes.phonetic} phonetic`}> Topic: {Topic} </p>\n           \n            <p className={classes.mean}>Create Date: {CreateDate}</p>\n          </div>\n        </div>\n        <div className=\"flex-center--ver\">\n        <div className=\"mr-5\">\n          <EditIcon className=\"dyno-setting-icon\"\n           onClick={() => handleEditClick(_id)}\n           />\n        </div>\n        <DeleteIcon className=\"dyno-setting-icon\" \n         onClick={() => deleteHandler(_id)}\n         />\n\n      </div>\n      </div>\n      {modal.open && (\n        <WordDetailModal\n          {...modal}\n          onClose={() => setModal({ open: false, loading: false })}\n        />\n      )}\n    </>\n  );\n}\n\nListeningItem.propTypes = {\n  CreateDate: PropTypes.string,\n  onShowDetail: PropTypes.func,\n  Topic: PropTypes.string,\n  Image: PropTypes.string,\n  Name: PropTypes.string,\n  _id: PropTypes.string,\n};\n\nListeningItem.defaultProps = {\n  onShowDetail: function () {},\n};\n\nexport default ListeningItem;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\AddWord\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\WordSkeleton.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\helper\\speakerHelper.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\InputCustom\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\SelectCustom\\index.js",["1095"],"import FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport useStyle from './style';\n\nfunction SelectCustom(props) {\n  const {\n    label,\n    options,\n    className,\n    error,\n    resetFlag,\n    index,\n    onChange,\n    ...selectProps\n  } = props;\n  const [value, setValue] = useState(options[index]?.value);\n  const classes = useStyle();\n\n  useEffect(() => {\n    if (!resetFlag) return;\n    // reset value if parent component reset, except first render\n    setValue(options[0]?.value);\n  }, [resetFlag]);\n\n  return (\n    <>\n      <FormControl className={`${classes.root} ${className}`} variant=\"filled\">\n        <InputLabel\n          classes={{ root: classes.label, focused: classes.labelFocus }}\n          id={label}>\n          {label}\n        </InputLabel>\n        <Select\n          classes={{\n            root: classes.selectRoot,\n            icon: classes.selectIcon,\n          }}\n          MenuProps={{ classes: { paper: classes.selectMenu } }}\n          disableUnderline\n          error={error}\n          labelId={label}\n          label={label}\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n            onChange(e);\n          }}\n          {...selectProps}>\n          {options &&\n            options.map((option, index) => (\n              <MenuItem key={index} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n\nSelectCustom.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.array,\n  error: PropTypes.bool,\n  resetFlag: PropTypes.number,\n  onChange: PropTypes.func,\n};\n\nSelectCustom.defaultProps = {\n  className: '',\n  label: 'Label',\n  options: [],\n  error: false,\n  resetFlag: 0,\n  onChange: function () {},\n};\n\nexport default SelectCustom;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\ListeningDetailModal\\index.js",["1096","1097","1098","1099","1100"],"import Popover from '@material-ui/core/Popover';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { WORD_SPECIALTY } from 'constants/index';\nimport { TOPICS } from 'constants/topics';\nimport { cloudinaryImgOptimize } from 'helper';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Tag from '../Tag';\nimport useStyle from './style';\n\nfunction sliceTopics(topics) {\n  let res = [];\n  topics.forEach((topic) => {\n    res.push(TOPICS.find((i) => i.key === topic));\n  });\n  return res;\n}\n\nfunction WordDetailModal(props) {\n  const {\n    _id,\n    Image,\n    Name,\n    Topic,\n    CreateDate,\n    open,\n    onClose,\n    loading,\n  } = props;\n\n  const classes = useStyle();\n\n  return (\n    <Popover\n      classes={{\n        root: `${classes.root} flex-center`,\n        paper: `${classes.paper} container`,\n      }}\n      open={open}\n      onClose={onClose}\n      anchorReference={'none'}>\n      <div className=\"flex-center-between\">\n        <h2 className={classes.title}>\n          Chi tiết từ <span className={classes.wordTitle}>{`\"${Name}\"`}</span>\n        </h2>\n        <CloseIcon\n          className={`${classes.closeIcon} cur-pointer`}\n          onClick={onClose}\n        />\n      </div>\n\n      <div className=\"dyno-break\"></div>\n\n      {loading ? (\n        <Skeleton\n          style={{ width: '100%', height: '35vh' }}\n          variant=\"rect\"\n          animation=\"wave\"\n        />\n      ) : (\n        <div className={classes.content}>\n          <div className=\"flex-center--ver my-4\">\n            {Image && Image !== '' && (\n              <img\n                src={cloudinaryImgOptimize(Image, 56, 56, true)}\n                alt=\"Photo\"\n                className={`${classes.picture} mr-8`}\n              />\n            )}\n            <div>\n              <p className={classes.word}>\n                {Name}&nbsp;\n               \n                <span className={classes.mean}>Create Date :{` - ${CreateDate}`}</span>\n              </p>\n              {Boolean(Topic) && (\n                <p className={`${classes.phonetic} mt-4`}>{Topic}</p>\n              )}\n            </div>\n          </div>\n\n          {/* {level !== '0' && (\n            <p className={classes.level}>\n              <b className={classes.label}>Cấp độ:</b>&nbsp;&nbsp;\n              {level}\n            </p>\n          )} */}\n         \n        </div>\n      )}\n    </Popover>\n  );\n}\n\nWordDetailModal.propTypes = {\n  loading: PropTypes.bool,\n  Description: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  Topic: PropTypes.string,\n  Image: PropTypes.string,\n  Name: PropTypes.string,\n  _id: PropTypes.string,\n};\n\nWordDetailModal.defaultProps = {\n  loading: true,\n  Description: '',\n  onClose: function () {},\n  open: false,\n  Topic: '',\n  Image: '',\n  Name: '',\n  _id: '',\n};\n\nexport default WordDetailModal;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Modal\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\ToggleNavButton.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\ListeningAdmin\\ListeningItem\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\SelectCustom\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\InputCustom\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\ListeningDetailModal\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\InfiniteScroll\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\SortType\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\AutoSearchInput\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Voice\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Theme\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\ListeningTopic\\index.js",["1101","1102"],"import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport SelectCustom from 'components/UI/SelectCustom';\n// import { WORD_TYPES, WORD_SPECIALTY, WORD_LEVELS } from 'constants';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport TopicSelect from '../../UI/TopicSelect';\nimport useStyle from './style';\nimport { LISTEN_TOPIC } from '../../../constants/listeningTopics';\n\nconst formId = 'listenTopicPackForm';\n\nfunction addAllOption(optionList = []) {\n  return [{ value: 'All', label: 'All' }, ...optionList];\n}\n\nfunction ListeningTopic(props) {\n  const {\n    onChoose,\n    onCancel,\n    open,\n   // topicMultiples,\n    title,\n    okBtnText,\n    cancelBtnText,\n    okBtnProps,\n    cancelBtnProps,\n  } = props;\n\n  const classes = useStyle();\n  //const topics = useRef([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { target } = e;\n    const topic = target.topic?.value || '-1'\n\n    //console.log(topic);\n    onChoose({\n     topic\n    });\n  };\n\n  return (\n    <Dialog\n      classes={{ paper: classes.dialogPaper }}\n      maxWidth=\"md\"\n      fullWidth\n      disableBackdropClick\n      open={open}>\n      <DialogTitle classes={{ root: classes.title }}>{title}</DialogTitle>\n\n      <DialogContent dividers classes={{ dividers: classes.breakLine }}>\n        <form id={formId} onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <SelectCustom\n                label=\"Topic\"\n                className=\"w-100\"\n                index={0}\n                options={addAllOption(LISTEN_TOPIC)}\n                inputProps={{ name: 'topic' }}\n              />\n            </Grid>\n           \n          \n          </Grid>\n        </form>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={onCancel}\n          className=\"_btn _btn-stand\"\n          variant=\"outlined\"\n          {...cancelBtnProps}>\n          {cancelBtnText}\n        </Button>\n        <Button\n          autoFocus\n          disableFocusRipple\n          component=\"button\"\n          type=\"submit\"\n          form={formId}\n          className=\"_btn _btn-primary\"\n          variant=\"contained\"\n          {...okBtnProps}>\n          {okBtnText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nListeningTopic.propTypes = {\n  cancelBtnProps: PropTypes.object,\n  cancelBtnText: PropTypes.string,\n  okBtnProps: PropTypes.object,\n  okBtnText: PropTypes.string,\n  onCancel: PropTypes.func,\n  onChoose: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n // topicMultiples: PropTypes.bool,\n};\n\nListeningTopic.defaultProps = {\n  onChoose: function () {},\n  open: true,\n // topicMultiples: true,\n  title: 'Gói từ vựng',\n  okBtnText: 'Ok',\n  cancelBtnText: 'Đóng',\n  okBtnProps: {},\n  cancelBtnProps: {},\n};\n\nexport default ListeningTopic;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\listeningAction.js",["1103"],"import LISTEN_CONSTANT from \"../constants/listeningConstant\";\nimport listeningApi from \"./../../apis/listeningApi\";\nimport authReducer from \"../reducers/authReducer\";\n\n\nexport const getListening = (id) => {\n    return async (dispatch) => {\n        try {           \n          const response = await listeningApi.getListening(id);\n            if(response.status===200){\n              dispatch({\n                  type: LISTEN_CONSTANT.GET_LISTENING,\n                  payload: response.data,\n                })\n            }\n           else\n            {\n              dispatch({\n                type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n                payload: response.data.message,\n              })\n            }\n            \n        } catch (error) {\n          dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: error.message,\n         })\n          \n        }\n      }\n};\n\nexport const getListenByTopic = (topic) => {\n  return async (dispatch, getState) => {\n      try { \n        const {\n          authReducer: { user },\n        } = getState();\n\n        const response = await listeningApi.getListenByTopic(topic, user.access_token);\n        if(response.status===200){\n          dispatch({\n              type: LISTEN_CONSTANT.GET_LISTEN_BY_TOPIC,\n              payload: response.data.topics,\n            })\n        }\n        else\n        {\n          dispatch({\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: response.data.message,\n          })\n        }\n      } catch (error) {\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: error.response.message,\n        })\n      }\n    }\n};\n\nexport const getAllListen = () => {\n  return async (dispatch, getState) => {\n      try { \n        dispatch({\n          type: LISTEN_CONSTANT.SET_LISTEN_LOADING,\n          payload:true,\n        });\n\n        const {\n          authReducer: { user },\n        } = getState();\n\n        const response = await listeningApi.getAllListen(user.access_token);\n        if(response.status===200){\n          dispatch({\n              type: LISTEN_CONSTANT.GET_ALL_LISTEN,\n              payload: response.data.listens,\n            })\n        }\n        else\n        {\n          dispatch({\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: response.data.message,\n          })\n        }\n      } catch (error) {\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: error.response.message,\n        })\n      }\n    }\n};\n\nexport const getListenById = (id) => {\n  return async (dispatch, getState) => {\n      try { \n        const {\n          authReducer: { user },\n        } = getState();\n\n        const response = await listeningApi.getListenById(id, user.access_token);\n        if(response.status===200){\n          dispatch({\n              type: LISTEN_CONSTANT.GET_LISTEN_BY_ID,\n              payload: response.data.listen,\n            })\n        }\n        else\n        {\n          dispatch({\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: response.data.message,\n          })\n        }\n      } catch (error) {\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: error.response.message,\n        })\n      }\n    }\n};\n\nexport const getListenTopics = () => {\n  return async (dispatch, getState) => {\n      try { \n\n        const {\n          authReducer: { user },\n        } = getState();\n\n        const response = await listeningApi.getListenTopics(user.access_token);\n        if(response.status===200){\n          dispatch({\n              type: LISTEN_CONSTANT.GET_LISTEN_TOPICS,\n              payload: response.data.topics,\n            })\n        }\n        else\n        {\n          dispatch({\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: response.data.message,\n          })\n        }\n      } catch (error) {\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: error.response.message,\n        })\n      }\n    }\n};\n\nexport const postListen = (formData) => {\n  return async (dispatch, getState) => {\n      try { \n        const {\n          authReducer: { user },\n        } = getState();\n\n        const response = await listeningApi.postListen(formData , user.access_token);\n        if(response.status===200){\n          dispatch({\n              type: LISTEN_CONSTANT.CREATE_LISTEN,\n              payload: response.data.listen,\n            })\n           // toast.success(\"Add successfully\")\n        }\n        else\n        {\n          dispatch({\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: response.data.message,\n          })\n        }\n      } catch (error) {\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: error.response.message,\n        })\n      }\n    }\n};\n\nexport const putListen = (id, formData) => {\n  return async (dispatch, getState) => {\n      try { \n        const {\n          authReducer: { user },\n        } = getState();\n\n        const response = await listeningApi.putListen(id, formData , user.access_token);\n        if(response.status===200){\n          dispatch({\n              type: LISTEN_CONSTANT.EDIT_LISTEN,\n              payload: response.data.listen,\n            })\n          //  toast.success(\"Edit successfully\")\n        }\n        else\n        {\n          dispatch({\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: response.data.message,\n          })\n        }\n      } catch (error) {\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: error.response.message,\n        })\n      }\n    }\n};\n\nexport const deleteListen = (id) => {\n  return async (dispatch) => {\n    try {\n      const response = await listeningApi.deleteListen(id);\n      if (response.status===200) {\n        dispatch({\n          type: LISTEN_CONSTANT.DELETE_LISTEN,\n          payload: id,\n        })\n      }\n      else{\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n          payload: response.data.message,\n      })\n      }\n    } catch (error) {\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\n            payload: error.response.message,\n        })\n    }\n  }\n}\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\WordPackSetting.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\AddWord\\PhoneticInput.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\AddWord\\InformationTooltip.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\ListeningItem\\index.js",["1104"],"\nimport { cloudinaryImgOptimize } from \"helper\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport useStyle from \"./style\";\nimport WordDetailModal from \"components/UI/WordDetailModal\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport { DEFAULTS } from '../../../constants/index';\nimport { deleteListen } from \"redux/actions/listeningAction\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction ListeningItem({ _id, Name, Image, Topic, CreateDate }) {\n  const classes = useStyle();\n  const imgSrc = cloudinaryImgOptimize(\n    Image ? Image : DEFAULTS.IMAGE_SRC,\n    50,\n    50,\n    true,\n    true\n  );\n\n  const history = useHistory();\n  function handleClick(id) {\n    history.push(`/admin/quiz/details/${id}`);\n  }\n  const [modal, setModal] = useState({ loading: false, open: false });\n  const dispatch = useDispatch();\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Bạn chắc chắn muốn xóa bài viết này?')) {\n       dispatch(deleteListen(id));\n       dispatch(setMessage(\"Delete successfully\", \"success\"));\n     window.location.reload();\n    }\n  };\n\n  return (\n    <>\n      <div className={`${classes.root} flex-center-between`}>\n        <div \n          className=\"w-100 flex-center--ver\"\n          onClick={() => handleClick(_id)}\n        >\n          <img className={classes.picture} src={imgSrc} alt=\"\" />\n          <div className=\"ml-8 flex-grow-1\">\n            <h3 className={classes.word}>\n              {Name}\n              \n            </h3>\n          \n              <p className={`${classes.phonetic} phonetic`}> Topic: {Topic} </p>\n           \n            <p className={classes.mean}>Create Date: {CreateDate}</p>\n          </div>\n        </div>\n        <div className=\"flex-center--ver\">\n      </div>\n      </div>\n      {modal.open && (\n        <WordDetailModal\n          {...modal}\n          onClose={() => setModal({ open: false, loading: false })}\n        />\n      )}\n    </>\n  );\n}\n\nListeningItem.propTypes = {\n  CreateDate: PropTypes.string,\n  onShowDetail: PropTypes.func,\n  Topic: PropTypes.string,\n  Image: PropTypes.string,\n  Name: PropTypes.string,\n  _id: PropTypes.string,\n};\n\nListeningItem.defaultProps = {\n  onShowDetail: function () {},\n};\n\nexport default ListeningItem;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\CreateGrammar\\InformationTooltip.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\CreateGrammar\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\EditWord\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\constants\\topics.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\Tag\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\AutoSearchInput\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\SortType\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Theme\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordDetailModal\\index.js",["1105"],"import Popover from '@material-ui/core/Popover';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { WORD_SPECIALTY } from 'constants/index';\nimport { TOPICS } from 'constants/topics';\nimport { cloudinaryImgOptimize } from 'helper';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Tag from '../Tag';\nimport useStyle from './style';\n\nfunction sliceTopics(topics) {\n  let res = [];\n  topics.forEach((topic) => {\n    res.push(TOPICS.find((i) => i.key === topic));\n  });\n  return res;\n}\n\nfunction WordDetailModal(props) {\n  const {\n    picture,\n    word,\n    mean,\n    phonetic,\n    level,\n    type,\n    examples,\n    specialty,\n    synonyms,\n    antonyms,\n    note,\n    topics,\n    open,\n    onClose,\n    loading,\n  } = props;\n\n  const classes = useStyle();\n\n  return (\n    <Popover\n      classes={{\n        root: `${classes.root} flex-center`,\n        paper: `${classes.paper} container`,\n      }}\n      open={open}\n      onClose={onClose}\n      anchorReference={'none'}>\n      <div className=\"flex-center-between\">\n        <h2 className={classes.title}>\n          Chi tiết từ <span className={classes.wordTitle}>{`\"${word}\"`}</span>\n        </h2>\n        <CloseIcon\n          className={`${classes.closeIcon} cur-pointer`}\n          onClick={onClose}\n        />\n      </div>\n\n      <div className=\"dyno-break\"></div>\n\n      {loading ? (\n        <Skeleton\n          style={{ width: '100%', height: '35vh' }}\n          variant=\"rect\"\n          animation=\"wave\"\n        />\n      ) : (\n        <div className={classes.content}>\n          <div className=\"flex-center--ver my-4\">\n            {picture && picture !== '' && (\n              <img\n                src={cloudinaryImgOptimize(picture, 56, 56, true)}\n                alt=\"Photo\"\n                className={`${classes.picture} mr-8`}\n              />\n            )}\n            <div>\n              <p className={classes.word}>\n                {word}&nbsp;\n                {Boolean(type) && (\n                  <span className={classes.type}>( {type} )</span>\n                )}\n                <span className={classes.mean}>{` - ${mean}`}</span>\n              </p>\n              {Boolean(phonetic) && (\n                <p className={`${classes.phonetic} mt-4`}>/ {phonetic} /</p>\n              )}\n            </div>\n          </div>\n\n          {level !== '0' && (\n            <p className={classes.level}>\n              <b className={classes.label}>Cấp độ:</b>&nbsp;&nbsp;\n              {level}\n            </p>\n          )}\n          {examples && examples.length > 0 && (\n            <div>\n              <b className={classes.label}>Câu ví dụ:</b>\n              {examples.map((ex, index) => (\n                <p key={index}>\n                  {index + 1}.&nbsp;{ex}\n                </p>\n              ))}\n            </div>\n          )}\n\n          {specialty && specialty !== '0' && (\n            <p>\n              <b className={classes.label}>Thuộc chuyên ngành:</b>\n              &nbsp;&nbsp;\n              {WORD_SPECIALTY.find((i) => i.value === specialty)?.label ||\n                'Không'}\n            </p>\n          )}\n\n          {topics && topics.length > 0 && (\n            <>\n              <b className={classes.label}>Chủ đề:</b>\n\n              <div className={`${classes.topics} d-flex flex-wrap`}>\n                {sliceTopics(topics).map((topic, index) => (\n                  <Tag key={index} title={topic.title} iconSrc={topic.icon} />\n                ))}\n              </div>\n            </>\n          )}\n\n          {synonyms && synonyms.length > 0 && (\n            <p>\n              <b className={classes.label}>Các từ đồng nghĩa:</b>&nbsp;&nbsp;\n              {synonyms.join(', ')}\n            </p>\n          )}\n\n          {antonyms && antonyms.length > 0 && (\n            <p>\n              <b className={classes.label}>Các từ trái nghĩa:</b>&nbsp;&nbsp;\n              {antonyms.join(', ')}\n            </p>\n          )}\n\n          {note && note !== '' && (\n            <>\n              <b className={classes.label}>Ghi chú:</b>\n              <p>\n                {note.split('\\n').map((i, index) => (\n                  <span key={index}>\n                    {i} <br />\n                  </span>\n                ))}\n              </p>\n            </>\n          )}\n        </div>\n      )}\n    </Popover>\n  );\n}\n\nWordDetailModal.propTypes = {\n  examples: PropTypes.array,\n  level: PropTypes.string,\n  loading: PropTypes.bool,\n  mean: PropTypes.string,\n  note: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  phonetic: PropTypes.string,\n  picture: PropTypes.string,\n  specialty: PropTypes.string,\n  synonyms: PropTypes.array,\n  topics: PropTypes.array,\n  type: PropTypes.string,\n  word: PropTypes.string,\n};\n\nWordDetailModal.defaultProps = {\n  examples: [],\n  level: '',\n  loading: true,\n  mean: '',\n  note: '',\n  onClose: function () {},\n  open: false,\n  phonetic: '',\n  picture: '',\n  specialty: '',\n  synonyms: [],\n  topics: [],\n  type: '',\n  word: '',\n};\n\nexport default WordDetailModal;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Voice\\Volume.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\ListeningTopic\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Voice\\style.js",["1106"],"import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '100%',\n    gap: '1.6rem',\n\n    [theme.breakpoints.up('sm')]: {\n      gridTemplateColumns: '1fr 1fr 1fr',\n    },\n  },\n\n  selectRoot: {\n    maxWidth: '100%',\n    width: '100%',\n\n    '& .MuiSelect-root': {\n      color: 'var(--label-color)',\n    },\n\n    '& .MuiInputLabel-root': {\n      color: 'var(--secondary-color)',\n    },\n\n    '& .MuiSelect-root': {\n      padding: '1.4rem',\n    },\n\n    '& .MuiOutlinedInput-notchedOutline': {\n      borderColor: 'var(--border-color) !important',\n    },\n\n    '& .MuiSelect-icon': {\n      color: 'var(--label-color)',\n    },\n  },\n\n  select: {\n    color: 'var(--text-color)',\n    fontSize: '1.5rem',\n  },\n\n  menu: {\n    backgroundColor: 'var(--bg-color-accent)',\n    maxHeight: '25rem',\n\n    '& .MuiMenuItem-root': {\n      fontSize: '1.5rem',\n      padding: '1rem 1.6rem',\n\n      '&:hover, &:active, &.Mui-selected': {\n        backgroundColor: 'var(--hover-color)',\n      },\n    },\n  },\n\n  icon: {\n    color: 'var(--label-color)',\n    fontSize: '2.8rem',\n  },\n\n  slider: {\n    margin: '0 1.2rem',\n  },\n\n  thumbSlider: {\n    backgroundColor: 'var(--accent-color) !important',\n  },\n\n  railSlider: {\n    backgroundColor: 'var(--secondary-color) !important',\n  },\n\n  trackSlider: {\n    backgroundColor: 'var(--primary-color) !important',\n  },\n\n  valueText: {\n    color: 'var(--text-color)',\n    fontSize: '1.4rem',\n  },\n}));\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Voice\\Speed.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Voice\\Accent.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\TooltipCustom.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\QuizAdmin\\ListeningItem\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\EditGrammar\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\EditGrammar\\InformationTooltip.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\TopicBox\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\index.js",["1107"],"import LoopIcon from '@material-ui/icons/Loop';\nimport AutoSearchInput from 'components/UI/AutoSearchInput';\nimport InfiniteScroll from 'components/UI/InfiniteScroll';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport useStyle from './style';\nimport WordItem from './GrammarItem/index';\nimport WordPackSetting from './WordPackSetting';\nimport WordSkeleton from './WordSkeleton';\nimport AddIcon from '@material-ui/icons/Add';\nimport { ROUTES } from 'constants/index';\nimport { useHistory } from 'react-router-dom';\nimport RichTextEditor from 'components/UI/RichTextEditor';\n\nfunction GrammarAdmin({\n  list,\n  loading,\n  onLoadData,\n  more,\n  isFirstLoad,\n  onSettingWordPack,\n  onSearchWord,\n}) {\n  const classes = useStyle();\n  const history = useHistory();\n  \n  return (\n    <div className={`${classes.root} dyno-container`}>\n      {/* title - menu */}\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">Manage Grammar</h1>\n        <div>\n          <AddIcon className=\"dyno-setting-icon mr-5\" onClick={() => history.push(ROUTES.CREATE_GRAMMAR)}/>\n  \n          <WordPackSetting\n              onChoose={onSettingWordPack}\n              classNameIcon=\"dyno-setting-icon\"\n          />\n        </div>\n      </div>\n      <div className=\"dyno-break\"></div>\n\n      {/* list content */}\n      <div className={classes.contentWrap}>\n        <AutoSearchInput disabled={loading} onSearch={onSearchWord} />\n\n        <div className={`${classes.listWrap} w-100`}>\n          <ul id=\"dictionaryId\" className={`${classes.list} flex-col w-100`}>\n            <>\n              {isFirstLoad ? (\n                <WordSkeleton className={classes.skeleton} />\n              ) : (\n                <>\n                  {list && list.length > 0 ? (\n                    <>\n                      {/* render list */}\n                      {list.map((item, index) => (\n                        <li className={classes.listItem} key={index}>\n                          <WordItem {...item} />\n                        </li>\n                      ))}\n\n                      {/* infinite scrolling */}\n                      {!loading && more && (\n                        <InfiniteScroll\n                          onTouchAnchor={onLoadData}\n                          threshold={1}>\n                          <div className=\"w-100 t-center\">\n                            <LoopIcon className=\"ani-spin\" />\n                          </div>\n                        </InfiniteScroll>\n                      )}\n                    </>\n                  ) : (\n                    // empty list\n                    <h3 className=\"notfound-title h-100 flex-center t-center\">\n                      No result.\n                    </h3>\n                  )}\n                </>\n              )}\n            </>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nGrammarAdmin.propTypes = {\n  isFirstLoad: PropTypes.bool,\n  list: PropTypes.array,\n  loading: PropTypes.bool,\n  more: PropTypes.bool,\n  onLoadData: PropTypes.func,\n  onSearchWord: PropTypes.func,\n  onSettingWordPack: PropTypes.func,\n};\n\nGrammarAdmin.defaultProps = {\n  list: [],\n  loading: false,\n  more: true,\n  isFirstLoad: true,\n  onLoadData: function () {},\n  onSearchWord: function () {},\n  onSettingWordPack: function () {},\n};\n\nexport default GrammarAdmin;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Theme\\PaletteColor\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\TopicSelect\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\Tag\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordDetailModal\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\WordSkeleton.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\WordPackSetting.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\GrammarItem\\index.js",["1108"],"\nimport { cloudinaryImgOptimize } from \"helper\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport useStyle from \"./style\";\nimport WordDetailModal from \"components/UI/WordDetailModal\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport { DEFAULTS } from '../../../constants/index';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { deleteGrammar } from \"redux/actions/grammarAction\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction GrammarItem({ _id, Title, Image, Level, Content }) {\n  const classes = useStyle();\n  const imgSrc = cloudinaryImgOptimize(\n    Image ? Image : DEFAULTS.IMAGE_SRC,\n    50,\n    50,\n    true,\n    true\n  );\n\n  const history = useHistory();\n  function handleClick(id) {\n    history.push(`/admin/grammar/details/${id}`);\n  }\n  function handleEditClick(id) {\n    history.push(`/admin/grammar/edit/${id}`);\n  }\n  const [modal, setModal] = useState({ loading: false, open: false });\n  const dispatch = useDispatch();\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Bạn chắc chắn muốn xóa ngữ pháp này?')) {\n       dispatch(deleteGrammar(id));\n       dispatch(setMessage(\"Delete successfully\", \"success\"));\n     window.location.reload();\n    }\n  };\n\n  return (\n    <>\n      <div className={`${classes.root} flex-center-between`}>\n        <div \n          className=\"w-100 flex-center--ver\"\n          onClick={() => handleClick(_id)}\n        >\n          <img className={classes.picture} src={imgSrc} alt=\"photo\" />\n          <div className=\"ml-8 flex-grow-1\">\n            <h3 className={classes.word}>\n              {Title}\n              \n            </h3>\n          \n              <p className={`${classes.phonetic} phonetic`}> Level: {Level} </p>\n           \n            <p className={classes.mean}>{Content}</p>\n          </div>\n        </div>\n        <div className=\"flex-center--ver\">\n        <div className=\"mr-5\">\n          <EditIcon className=\"dyno-setting-icon\"\n           onClick={() => handleEditClick(_id)}\n           />\n        </div>\n        <DeleteIcon className=\"dyno-setting-icon\" \n         onClick={() => deleteHandler(_id)}\n         />\n\n      </div>\n      </div>\n      {modal.open && (\n        <WordDetailModal\n          {...modal}\n          onClose={() => setModal({ open: false, loading: false })}\n        />\n      )}\n    </>\n  );\n}\n\nGrammarItem.propTypes = {\n  CreateDate: PropTypes.string,\n  onShowDetail: PropTypes.func,\n  Topic: PropTypes.string,\n  Image: PropTypes.string,\n  Name: PropTypes.string,\n  _id: PropTypes.string,\n};\n\nGrammarItem.defaultProps = {\n  onShowDetail: function () {},\n};\n\nexport default GrammarItem;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Navigation\\Settings\\Theme\\PaletteColor\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\PhoneticKeyboard\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\TopicSelect\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GrammarDetailModal\\index.js",["1109","1110","1111","1112","1113"],"import Popover from '@material-ui/core/Popover';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { WORD_SPECIALTY } from 'constants/index';\nimport { GRAMMAR_LEVEL } from 'constants/grammarLevels';\nimport { cloudinaryImgOptimize } from 'helper';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Tag from '../Tag';\nimport useStyle from './style';\n\nfunction sliceTopics(levels) {\n  let res = [];\n  levels.forEach((level) => {\n    res.push(GRAMMAR_LEVEL.find((i) => i.value === level));\n  });\n  return res;\n}\n\nfunction GrammarDetailModal(props) {\n  const {\n    _id,\n    Image,\n    Title,\n    Level,\n    Content,\n    open,\n    onClose,\n    loading,\n  } = props;\n\n  const classes = useStyle();\n\n  return (\n    <Popover\n      classes={{\n        root: `${classes.root} flex-center`,\n        paper: `${classes.paper} container`,\n      }}\n      open={open}\n      onClose={onClose}\n      anchorReference={'none'}>\n      <div className=\"flex-center-between\">\n        <h2 className={classes.title}>\n          Chi tiết từ <span className={classes.wordTitle}>{`\"${Title}\"`}</span>\n        </h2>\n        <CloseIcon\n          className={`${classes.closeIcon} cur-pointer`}\n          onClick={onClose}\n        />\n      </div>\n\n      <div className=\"dyno-break\"></div>\n\n      {loading ? (\n        <Skeleton\n          style={{ width: '100%', height: '35vh' }}\n          variant=\"rect\"\n          animation=\"wave\"\n        />\n      ) : (\n        <div className={classes.content}>\n          <div className=\"flex-center--ver my-4\">\n            {Image && Image !== '' && (\n              <img\n                src={cloudinaryImgOptimize(Image, 56, 56, true)}\n                alt=\"Photo\"\n                className={`${classes.picture} mr-8`}\n              />\n            )}\n            <div>\n              <p className={classes.word}>\n                {Title}&nbsp;\n               \n                <span className={classes.mean}> {Content}</span>\n              </p>\n              {Boolean(Level) && (\n                <p className={`${classes.phonetic} mt-4`}>Level: {Level}</p>\n              )}\n            </div>\n          </div>\n\n          {/* {level !== '0' && (\n            <p className={classes.level}>\n              <b className={classes.label}>Cấp độ:</b>&nbsp;&nbsp;\n              {level}\n            </p>\n          )} */}\n         \n        </div>\n      )}\n    </Popover>\n  );\n}\n\nGrammarDetailModal.propTypes = {\n  loading: PropTypes.bool,\n  Content: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  Level: PropTypes.string,\n  Image: PropTypes.string,\n  Title: PropTypes.string,\n  _id: PropTypes.string,\n};\n\nGrammarDetailModal.defaultProps = {\n  loading: true,\n  Content: '',\n  onClose: function () {},\n  open: false,\n  Level: '',\n  Image: '',\n  Title: '',\n  _id: '',\n};\n\nexport default GrammarDetailModal;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\GrammarAdmin\\GrammarItem\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\PhoneticKeyboard\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GrammarDetailModal\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GrammarLevel\\index.js",["1114","1115"],"import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport SelectCustom from 'components/UI/SelectCustom';\n// import { WORD_TYPES, WORD_SPECIALTY, WORD_LEVELS } from 'constants';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport TopicSelect from '../../UI/TopicSelect';\nimport useStyle from './style';\nimport {GRAMMAR_LEVEL } from '../../../constants/grammarLevels';\n\nconst formId = 'grammarLevelPackForm';\n\nfunction addAllOption(optionList = []) {\n  return [{ value: 'All', label: 'All' }, ...optionList];\n}\n\nfunction GrammarLevel(props) {\n  const {\n    onChoose,\n    onCancel,\n    open,\n    title,\n    okBtnText,\n    cancelBtnText,\n    okBtnProps,\n    cancelBtnProps,\n  } = props;\n\n  const classes = useStyle();\n  //const topics = useRef([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { target } = e;\n    const level = target.level?.value || '-1'\n\n    //console.log(topic);\n    onChoose({\n     level\n    });\n  };\n\n  return (\n    <Dialog\n      classes={{ paper: classes.dialogPaper }}\n      maxWidth=\"md\"\n      fullWidth\n      disableBackdropClick\n      open={open}>\n      <DialogTitle classes={{ root: classes.title }}>{title}</DialogTitle>\n\n      <DialogContent dividers classes={{ dividers: classes.breakLine }}>\n        <form id={formId} onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <SelectCustom\n                label=\"Level\"\n                className=\"w-100\"\n                index={0}\n                options={addAllOption(GRAMMAR_LEVEL)}\n                inputProps={{ name: 'level' }}\n              />\n            </Grid>\n           \n          \n          </Grid>\n        </form>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={onCancel}\n          className=\"_btn _btn-stand\"\n          variant=\"outlined\"\n          {...cancelBtnProps}>\n          {cancelBtnText}\n        </Button>\n        <Button\n          autoFocus\n          disableFocusRipple\n          component=\"button\"\n          type=\"submit\"\n          form={formId}\n          className=\"_btn _btn-primary\"\n          variant=\"contained\"\n          {...okBtnProps}>\n          {okBtnText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nGrammarLevel.propTypes = {\n  cancelBtnProps: PropTypes.object,\n  cancelBtnText: PropTypes.string,\n  okBtnProps: PropTypes.object,\n  okBtnText: PropTypes.string,\n  onCancel: PropTypes.func,\n  onChoose: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n // topicMultiples: PropTypes.bool,\n};\n\nGrammarLevel.defaultProps = {\n  onChoose: function () {},\n  open: true,\n // topicMultiples: true,\n  title: 'Gói từ vựng',\n  okBtnText: 'Ok',\n  cancelBtnText: 'Đóng',\n  okBtnProps: {},\n  cancelBtnProps: {},\n};\n\nexport default GrammarLevel;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\grammarAction.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\GrammarLevel\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\questionApi.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\quizApi.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\Vowels.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\Consonants.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\Diphthongs.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\data.js",["1116","1117","1118"],"import commonApi from 'apis/commonApi';\nimport wordApi from 'apis/wordApi';\nimport { equalArray } from 'helper';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { setMessage } from 'redux/actions/messageAction';\nimport Vocabulary from '.';\n\nconst perPage = 7;\n\nfunction VocabularyData() {\n  const dispatch = useDispatch();\n  const topicParams =useParams().topic;\n\n  const list = useRef([]); // list store all item to prevent call API when prev button click\n  const [currentList, setCurrentList] = useState([]);\n  const [total, setTotal] = useState(-1);\n  const [pageInfo, setPageInfo] = useState({\n    page: 1,\n    packInfo: {\n    topics:[topicParams],\n    }\n  });\n\n  // get total word pack\n  useEffect(() => {\n    let isSubscribe = true;\n\n    if (total !== -1) {\n      return;\n    }\n\n    (async function getTotalWordPack() {\n      try {\n        const apiRes = await commonApi.getWordTopicTotal(pageInfo.packInfo);\n\n        if (apiRes.status === 200 && isSubscribe) {\n          const total = apiRes.data.total;\n          if (total === 0) {\n            dispatch(\n              setMessage(\"No word for this topic.\",\"warning\")\n            );\n          }\n          setTotal(total);\n        \n        }\n      } catch (error) {\n        setTotal(0);\n      }\n    })();\n\n    return () => (isSubscribe = false);\n  }, [total]);\n\n\n  // get word pack when page change\n  useEffect(() => {\n    let isSubscribe = true;\n    if (pageInfo.page < list.current.length / perPage) return; // prevent call API when element already exists in the old array\n\n    async function getVocabularyList() {\n      try {\n        const apiRes = await wordApi.getWordTopic(pageInfo.packInfo);\n\n        if (apiRes.status === 200 && isSubscribe) {\n          setCurrentList(apiRes.data);\n          list.current = [...list.current, apiRes.data];\n        }\n      } catch (error) {}\n    }\n\n    isSubscribe && getVocabularyList();\n\n    return () => (isSubscribe = false);\n  }, [pageInfo]);\n\n  return (\n    <Vocabulary\n     list={currentList}\n      total={total}\n    />\n  );\n}\n\nexport default VocabularyData;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\apis\\commonApi.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\WordSkeleton.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\WordPackSetting.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\FeatureBox\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\IPA\\GroupCollapse.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\WordItem\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\UserCard\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordSortModal\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\FeatureBox\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\index.js",["1119","1120","1121","1122","1123","1124","1125"],"import Tooltip from '@material-ui/core/Tooltip';\nimport HelpIcon from '@material-ui/icons/Help';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CarouselIcon from '@material-ui/icons/ViewCarousel';\nimport CollectionsIcon from '@material-ui/icons/ViewQuilt';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport TooltipCustom from 'components/UI/TooltipCustom';\nimport WordPack from 'components/UI/WordPack';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport GalleryList from './GalleryList';\nimport SlideShow from './SlideShow';\nimport useStyle from './style';\n\nconst perPage = 7;\nconst tutorial =\n  'Có 2 chế độ xem là gallery và slide. Bấm vào biểu tượng mắt để bật tắt nghĩa của từ.';\n\nfunction Vocabulary({\n  list,\n  total,\n}) {\n  const classes = useStyle();\n  const [mode, setMode] = useState(0); // 0 - gallery, 1 - slide show\n  const currentSlide = useRef(0);\n \n  \n  return (\n    <div className=\"container my-10\">\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">Vocabulary</h1>\n        <div className={classes.iconWrap}>\n          <Tooltip title=\"Collection\" placement=\"bottom\">\n            <CollectionsIcon\n              onClick={() => setMode(0)}\n              className={`${classes.icon} ${mode === 0 ? 'active' : ''}`}\n            />\n          </Tooltip>\n\n          <Tooltip title=\"Item\" placement=\"bottom\">\n            <CarouselIcon\n              onClick={() => setMode(1)}\n              className={`${classes.icon} ${mode === 1 ? 'active' : ''}`}\n            />\n          </Tooltip>\n\n          {/* <Tooltip title=\"Xem nghĩa của từ\" placement=\"bottom\">\n            {isShowMean ? (\n              <VisibilityOffIcon\n                className={classes.icon}\n                onClick={() => setIsShowMean(false)}\n              />\n            ) : (\n              <VisibilityIcon\n                className={classes.icon}\n                onClick={() => setIsShowMean(true)}\n              />\n            )}\n          </Tooltip>\n\n          <Tooltip title=\"Cài đặt gói từ vựng\" placement=\"bottom\">\n            <SettingsIcon\n              className={classes.icon}\n              onClick={() => setOpenWordPack(true)}\n            />\n          </Tooltip>\n\n          <TooltipCustom title={tutorial} placement=\"bottom\">\n            <HelpIcon className={classes.icon} />\n          </TooltipCustom>\n\n             */}\n        </div>\n      </div>\n      <div className=\"dyno-break\" />\n{/* \n      {openWordPack && (\n        <WordPack\n          open={true}\n          topicMultiples={true}\n          onCancel={() => setOpenWordPack(false)}\n          cancelBtnText=\"Đóng\"\n          onChoose={(packInfo) => {\n            onWordPackChange(packInfo);\n            setOpenWordPack(false);\n          }}\n        />\n      )} */}\n    \n\n      {mode === 0 ? (\n        <GalleryList\n          list={list}\n          total={Math.ceil(total / perPage)}\n        />\n      ) : (\n        <SlideShow\n          list={list}\n          total={total}\n          currentSlide={currentSlide.current}\n          onSaveCurrentSlide={(v) => (currentSlide.current = v)}\n          totalCurrentSlide={currentSlide.current}\n        />\n      )}\n    </div>\n  );\n}\n\nVocabulary.propTypes = {\n  list: PropTypes.array,\n  total: PropTypes.number,\n};\n\nVocabulary.defaultProps = {\n  list: [],\n  total: 0,\n};\n\nexport default Vocabulary;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordAdmin\\WordItem\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordSortModal\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\UserCard\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\redux\\actions\\wordAction.js",["1126"],"import WORD_CONSTANT from \"../constants/wordConstant\";\nimport wordApi from \"./../../apis/wordApi\";\nimport authReducer from \"../reducers/authReducer\";\n\n\nexport const getWord = (word) => {\n    return async (dispatch) => {\n        try { \n\n          const response = await wordApi.getWord(word);\n          console.log(response.data);\n            if(response.status===200){\n              dispatch({\n                  type: WORD_CONSTANT.GET_WORD,\n                  payload: response.data,\n                })\n            }\n            else\n            {\n              dispatch({\n                type: WORD_CONSTANT.SET_WORD_ERROR,\n                payload: response.data.message,\n              })\n            }\n        } catch (error) {\n          dispatch({\n            type: WORD_CONSTANT.SET_WORD_ERROR,\n            payload: error.response.message,\n          })\n        }\n      }\n};\n\nexport const getAllWord = () => {\n    return async (dispatch, getState) => {\n        try { \n          dispatch({\n            type: WORD_CONSTANT.SET_WORD_LOADING,\n          });\n\n          const {\n            authReducer: { user },\n          } = getState();\n          \n          const response = await wordApi.getAllWord(user.access_token);\n            if(response.status===200){\n              dispatch({\n                  type: WORD_CONSTANT.GET_ALL_WORD,\n                  payload: response.data.words,\n                })\n            }\n            else\n            {\n              dispatch({\n                type: WORD_CONSTANT.SET_WORD_ERROR,\n                payload: response.data.message,\n              })\n            }\n        } catch (error) {\n          dispatch({\n            type: WORD_CONSTANT.SET_WORD_ERROR,\n            payload: error.response.message,\n          })\n        }\n      }\n};\n\nexport const getWordByTopic = (topic) => {\n    return async (dispatch, getState) => {\n        try { \n          dispatch({\n            type: WORD_CONSTANT.SET_WORD_LOADING,\n          });\n\n          const {\n            authReducer: { user },\n          } = getState();\n          \n          const response = await wordApi.getWordByTopic(topic, user.access_token);\n            if(response.status===200){\n              dispatch({\n                  type: WORD_CONSTANT.GET_WORD_BY_TOPIC,\n                  payload: response.data.words,\n                })\n            }\n            else\n            {\n              dispatch({\n                type: WORD_CONSTANT.SET_WORD_ERROR,\n                payload: response.data.message,\n              })\n            }\n        } catch (error) {\n          dispatch({\n            type: WORD_CONSTANT.SET_WORD_ERROR,\n            payload: error.response.message,\n          })\n        }\n      }\n};\n\nexport const getWordTopics = () => {\n    return async (dispatch, getState) => {\n        try { \n          dispatch({\n            type: WORD_CONSTANT.SET_WORD_LOADING,\n          });\n\n          const {\n            authReducer: { user },\n          } = getState();\n          \n          const response = await wordApi.getWordTopics(user.access_token);\n            if(response.status===200){\n              dispatch({\n                  type: WORD_CONSTANT.GET_WORD_TOPICS,\n                  payload: response.data.topics,\n                })\n            }\n            else\n            {\n              dispatch({\n                type: WORD_CONSTANT.SET_WORD_ERROR,\n                payload: response.data.message,\n              })\n            }\n        } catch (error) {\n          dispatch({\n            type: WORD_CONSTANT.SET_WORD_ERROR,\n            payload: error.response.message,\n          })\n        }\n      }\n};\n\nexport const searchWord = (word) => {\n    return async (dispatch, getState) => {\n        try { \n          const {\n            authReducer: { user },\n          } = getState();\n          \n          const response = await wordApi.getWordTopics(word, user.access_token);\n            if(response.status===200){\n              dispatch({\n                  type: WORD_CONSTANT.SEARCH_WORD,\n                  payload: response.data.words,\n                })\n            }\n            else\n            {\n              dispatch({\n                type: WORD_CONSTANT.SET_WORD_ERROR,\n                payload: response.data.message,\n              })\n            }\n        } catch (error) {\n          dispatch({\n            type: WORD_CONSTANT.SET_WORD_ERROR,\n            payload: error.response.message,\n          })\n        }\n      }\n};\n\nexport const checkWordExist = (formData) => {\n    return async (dispatch, getState) => {\n        try { \n          const {\n            authReducer: { user },\n          } = getState();\n          \n          const response = await wordApi.checkWordExist(formData, user.access_token);\n            if(response.status===200){\n              dispatch({\n                  type: WORD_CONSTANT.EXIST_WORD,\n                  payload: response.data.word,\n                })\n            }\n            else\n            {\n              dispatch({\n                type: WORD_CONSTANT.SET_WORD_ERROR,\n                payload: response.data.isExist,\n              })\n            }\n        } catch (error) {\n          dispatch({\n            type: WORD_CONSTANT.SET_WORD_ERROR,\n            payload: error.response.message,\n          })\n        }\n      }\n};\n\nexport const getWordPack = (formData) => {\n    return async (dispatch, getState) => {\n        try { \n          const {\n            authReducer: { user },\n          } = getState();\n          \n          const response = await wordApi.getWordPack(formData, user.access_token);\n            if(response.status===200){\n              dispatch({\n                  type: WORD_CONSTANT.EXIST_WORD,\n                  payload: response.data.packList,\n                })\n            }\n            else\n            {\n              dispatch({\n                type: WORD_CONSTANT.SET_WORD_ERROR,\n                payload: response.data.message,\n              })\n            }\n        } catch (error) {\n          dispatch({\n            type: WORD_CONSTANT.SET_WORD_ERROR,\n            payload: error.response.message,\n          })\n        }\n      }\n};\n\nexport const postWord = (formData) => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await wordApi.postWord(formData);\n      if (response.status === 200) {\n        dispatch({\n          type: WORD_CONSTANT.CREATE_WORD,\n          payload: response.data.word,\n        });\n        //  toast.success(\"Add successfully\")\n      } else {\n        dispatch({\n          type: WORD_CONSTANT.SET_WORD_ERROR,\n          payload: response.data.message,\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: WORD_CONSTANT.SET_WORD_ERROR,\n        payload: error.response.message,\n      });\n    }\n  };\n};\n\nexport const putWord = (word, formData) => {\n  return async (dispatch) => {\n    try {\n      const response = await wordApi.putWord(word, formData);\n      console.log(response.data.word);\n      if (response.status === 200) {\n        dispatch({\n          type: WORD_CONSTANT.EDIT_WORD,\n          payload: response.data.word,\n        });\n      } else {\n        dispatch({\n          type: WORD_CONSTANT.SET_WORD_ERROR,\n          payload: response.data.message,\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: WORD_CONSTANT.SET_WORD_ERROR,\n        payload: error.response.message,\n      });\n    }\n  };\n};\n\nexport const deleteWord = (word, type) => {\n    return async (dispatch) => {\n        try { \n         \n          const response = await wordApi.deleteWord(word, type);\n            if(response.status===200){\n              dispatch({\n                  type: WORD_CONSTANT.DELETE_WORD,\n                  payload: {word, type},\n                })\n          //  toast.success(response.data.message)\n            }\n            else\n            {\n              dispatch({\n                type: WORD_CONSTANT.SET_WORD_ERROR,\n                payload: response.data.message,\n              })\n            }\n        } catch (error) {\n          dispatch({\n            type: WORD_CONSTANT.SET_WORD_ERROR,\n            payload: error.response.message,\n          })\n        }\n      }\n};\n\n\n\n\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordPack\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\SlideShow\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\GalleryList\\index.js",["1127","1128"],"import Tooltip from '@material-ui/core/Tooltip';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport GalleryItem from '../GalleryItem';\nimport useStyle from './style';\n\nconst perPage = 7;\nfunction GalleryList({ list, total}) {\n  const classes = useStyle();\n  const [currentPage, setCurrentPage]= useState(1);\n\n  const handleNextClick = () => {\n    if (currentPage < total) {\n      setCurrentPage(currentPage +1);\n    }\n  };\n\n  const handlePrevClick = () => {\n    if (currentPage > 1) {\n     setCurrentPage(currentPage-1)\n    }\n  };\n\n  return (\n    <div className={`${classes.root} dyno-container`}>\n      {list && list.length > 0 &&(\n        <>\n          {/* gallery */}\n          {list.slice((currentPage-1)*perPage, currentPage*perPage).map((item, index) => (\n            <GalleryItem key={index} {...item}/>\n          ))}\n\n          {/* navigation arrow */}\n          {currentPage > 1 && (\n            <Tooltip title=\"Previous\">\n              <span className=\"nav-arrow prev\" onClick={handlePrevClick} />\n            </Tooltip>\n          )}\n          {currentPage < total && (\n            <Tooltip title=\"Next\">\n              <span className=\"nav-arrow next\" onClick={handleNextClick} />\n            </Tooltip>\n          )}\n        </>\n      //  ) : (\n      //   <>\n      //     {new Array(7).fill(0).map((_, index) => (\n      //       <div key={index}>\n      //         <Skeleton\n      //           className=\"w-100 h-100\"\n      //           variant=\"rect\"\n      //           animation=\"wave\"\n      //         />\n      //       </div>\n      //     ))}\n        // </>\n      )}\n    </div>\n  );\n}\n\nGalleryList.propTypes = {\n  current: PropTypes.number,\n  list: PropTypes.array,\n  onNext: PropTypes.func,\n  onPrev: PropTypes.func,\n  total: PropTypes.number,\n};\n\nGalleryList.defaultProps = {\n  list: [],\n  onPrev: function () {},\n  onNext: function () {},\n  total: 1,\n  current: 1,\n};\n\nexport default GalleryList;\n","D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\UI\\WordPack\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\SlideShow\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\GalleryList\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\GalleryItem\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\SlideItem\\index.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\GalleryItem\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\WordUser\\Vocabulary\\SlideItem\\style.js",[],"D:\\Downloads\\LearningEnglishWebsite-main\\LearningEnglishWebsite-main\\frontend\\src\\components\\Contacts\\index.js",["1129","1130","1131","1132","1133","1134","1135","1136"],{"ruleId":"1137","replacedBy":"1138"},{"ruleId":"1139","replacedBy":"1140"},{"ruleId":"1141","severity":1,"message":"1142","line":9,"column":10,"nodeType":"1143","messageId":"1144","endLine":9,"endColumn":23},{"ruleId":"1145","severity":1,"message":"1146","line":355,"column":1,"nodeType":"1147","endLine":358,"endColumn":3},{"ruleId":"1148","severity":1,"message":"1149","line":15,"column":6,"nodeType":"1150","endLine":15,"endColumn":8,"suggestions":"1151"},{"ruleId":"1152","severity":1,"message":"1153","line":116,"column":11,"nodeType":"1154","endLine":116,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":117,"column":11,"nodeType":"1154","endLine":117,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":118,"column":11,"nodeType":"1154","endLine":118,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":119,"column":11,"nodeType":"1154","endLine":119,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":120,"column":11,"nodeType":"1154","endLine":120,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":121,"column":11,"nodeType":"1154","endLine":121,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":122,"column":11,"nodeType":"1154","endLine":122,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":123,"column":11,"nodeType":"1154","endLine":123,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":124,"column":11,"nodeType":"1154","endLine":124,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":125,"column":11,"nodeType":"1154","endLine":125,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":126,"column":11,"nodeType":"1154","endLine":126,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":127,"column":11,"nodeType":"1154","endLine":127,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":128,"column":11,"nodeType":"1154","endLine":128,"endColumn":48},{"ruleId":"1152","severity":1,"message":"1153","line":129,"column":11,"nodeType":"1154","endLine":129,"endColumn":48},{"ruleId":"1141","severity":1,"message":"1155","line":5,"column":8,"nodeType":"1143","messageId":"1144","endLine":5,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1156","line":9,"column":8,"nodeType":"1143","messageId":"1144","endLine":9,"endColumn":17},{"ruleId":"1141","severity":1,"message":"1157","line":10,"column":8,"nodeType":"1143","messageId":"1144","endLine":10,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1158","line":12,"column":8,"nodeType":"1143","messageId":"1144","endLine":12,"endColumn":18},{"ruleId":"1141","severity":1,"message":"1159","line":14,"column":8,"nodeType":"1143","messageId":"1144","endLine":14,"endColumn":20},{"ruleId":"1141","severity":1,"message":"1160","line":17,"column":10,"nodeType":"1143","messageId":"1144","endLine":17,"endColumn":20},{"ruleId":"1141","severity":1,"message":"1161","line":18,"column":10,"nodeType":"1143","messageId":"1144","endLine":18,"endColumn":14},{"ruleId":"1141","severity":1,"message":"1162","line":21,"column":25,"nodeType":"1143","messageId":"1144","endLine":21,"endColumn":34},{"ruleId":"1141","severity":1,"message":"1163","line":21,"column":51,"nodeType":"1143","messageId":"1144","endLine":21,"endColumn":63},{"ruleId":"1141","severity":1,"message":"1164","line":26,"column":7,"nodeType":"1143","messageId":"1144","endLine":26,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1165","line":34,"column":11,"nodeType":"1143","messageId":"1144","endLine":34,"endColumn":17},{"ruleId":"1141","severity":1,"message":"1166","line":34,"column":19,"nodeType":"1143","messageId":"1144","endLine":34,"endColumn":23},{"ruleId":"1141","severity":1,"message":"1167","line":37,"column":9,"nodeType":"1143","messageId":"1144","endLine":37,"endColumn":16},{"ruleId":"1168","severity":1,"message":"1169","line":62,"column":35,"nodeType":"1170","messageId":"1171","endLine":62,"endColumn":37},{"ruleId":"1172","severity":1,"message":"1173","line":21,"column":35,"nodeType":"1174","messageId":"1175","endLine":21,"endColumn":36,"suggestions":"1176"},{"ruleId":"1172","severity":1,"message":"1177","line":21,"column":37,"nodeType":"1174","messageId":"1175","endLine":21,"endColumn":38,"suggestions":"1178"},{"ruleId":"1172","severity":1,"message":"1179","line":21,"column":41,"nodeType":"1174","messageId":"1175","endLine":21,"endColumn":42,"suggestions":"1180"},{"ruleId":"1172","severity":1,"message":"1181","line":21,"column":43,"nodeType":"1174","messageId":"1175","endLine":21,"endColumn":44,"suggestions":"1182"},{"ruleId":"1172","severity":1,"message":"1183","line":21,"column":46,"nodeType":"1174","messageId":"1175","endLine":21,"endColumn":47,"suggestions":"1184"},{"ruleId":"1172","severity":1,"message":"1185","line":21,"column":48,"nodeType":"1174","messageId":"1175","endLine":21,"endColumn":49,"suggestions":"1186"},{"ruleId":"1172","severity":1,"message":"1187","line":21,"column":52,"nodeType":"1174","messageId":"1175","endLine":21,"endColumn":53,"suggestions":"1188"},{"ruleId":"1172","severity":1,"message":"1189","line":21,"column":54,"nodeType":"1174","messageId":"1175","endLine":21,"endColumn":55,"suggestions":"1190"},{"ruleId":"1172","severity":1,"message":"1191","line":21,"column":56,"nodeType":"1174","messageId":"1175","endLine":21,"endColumn":57,"suggestions":"1192"},{"ruleId":"1141","severity":1,"message":"1193","line":13,"column":9,"nodeType":"1143","messageId":"1144","endLine":13,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1194","line":12,"column":8,"nodeType":"1143","messageId":"1144","endLine":12,"endColumn":22},{"ruleId":"1141","severity":1,"message":"1195","line":13,"column":8,"nodeType":"1143","messageId":"1144","endLine":13,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1196","line":18,"column":10,"nodeType":"1143","messageId":"1144","endLine":18,"endColumn":12},{"ruleId":"1141","severity":1,"message":"1167","line":32,"column":9,"nodeType":"1143","messageId":"1144","endLine":32,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1197","line":3,"column":8,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":22},{"ruleId":"1141","severity":1,"message":"1198","line":4,"column":8,"nodeType":"1143","messageId":"1144","endLine":4,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1199","line":5,"column":8,"nodeType":"1143","messageId":"1144","endLine":5,"endColumn":20},{"ruleId":"1141","severity":1,"message":"1200","line":8,"column":8,"nodeType":"1143","messageId":"1144","endLine":8,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1201","line":10,"column":8,"nodeType":"1143","messageId":"1144","endLine":10,"endColumn":15},{"ruleId":"1141","severity":1,"message":"1157","line":12,"column":8,"nodeType":"1143","messageId":"1144","endLine":12,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1202","line":13,"column":8,"nodeType":"1143","messageId":"1144","endLine":13,"endColumn":17},{"ruleId":"1141","severity":1,"message":"1159","line":16,"column":8,"nodeType":"1143","messageId":"1144","endLine":16,"endColumn":20},{"ruleId":"1148","severity":1,"message":"1203","line":142,"column":6,"nodeType":"1150","endLine":142,"endColumn":32,"suggestions":"1204"},{"ruleId":"1141","severity":1,"message":"1193","line":13,"column":9,"nodeType":"1143","messageId":"1144","endLine":13,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1205","line":8,"column":10,"nodeType":"1143","messageId":"1144","endLine":8,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1206","line":81,"column":19,"nodeType":"1143","messageId":"1144","endLine":81,"endColumn":29},{"ruleId":"1141","severity":1,"message":"1207","line":82,"column":21,"nodeType":"1143","messageId":"1144","endLine":82,"endColumn":33},{"ruleId":"1168","severity":1,"message":"1169","line":101,"column":33,"nodeType":"1170","messageId":"1171","endLine":101,"endColumn":35},{"ruleId":"1168","severity":1,"message":"1169","line":125,"column":63,"nodeType":"1170","messageId":"1171","endLine":125,"endColumn":65},{"ruleId":"1168","severity":1,"message":"1169","line":126,"column":63,"nodeType":"1170","messageId":"1171","endLine":126,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":164,"column":27,"nodeType":"1154","endLine":164,"endColumn":80},{"ruleId":"1168","severity":1,"message":"1169","line":195,"column":50,"nodeType":"1170","messageId":"1171","endLine":195,"endColumn":52},{"ruleId":"1168","severity":1,"message":"1169","line":200,"column":51,"nodeType":"1170","messageId":"1171","endLine":200,"endColumn":53},{"ruleId":"1168","severity":1,"message":"1169","line":208,"column":48,"nodeType":"1170","messageId":"1171","endLine":208,"endColumn":50},{"ruleId":"1141","severity":1,"message":"1210","line":1,"column":17,"nodeType":"1143","messageId":"1144","endLine":1,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1210","line":1,"column":17,"nodeType":"1143","messageId":"1144","endLine":1,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1160","line":10,"column":10,"nodeType":"1143","messageId":"1144","endLine":10,"endColumn":20},{"ruleId":"1148","severity":1,"message":"1211","line":31,"column":37,"nodeType":"1150","endLine":31,"endColumn":47,"suggestions":"1212"},{"ruleId":"1208","severity":1,"message":"1209","line":44,"column":27,"nodeType":"1154","endLine":44,"endColumn":80},{"ruleId":"1141","severity":1,"message":"1213","line":1,"column":8,"nodeType":"1143","messageId":"1144","endLine":1,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1214","line":2,"column":8,"nodeType":"1143","messageId":"1144","endLine":2,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1215","line":3,"column":8,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1209","line":24,"column":25,"nodeType":"1154","endLine":24,"endColumn":121},{"ruleId":"1141","severity":1,"message":"1216","line":3,"column":8,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":18},{"ruleId":"1141","severity":1,"message":"1217","line":4,"column":8,"nodeType":"1143","messageId":"1144","endLine":4,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1194","line":7,"column":8,"nodeType":"1143","messageId":"1144","endLine":7,"endColumn":22},{"ruleId":"1141","severity":1,"message":"1195","line":8,"column":8,"nodeType":"1143","messageId":"1144","endLine":8,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1218","line":135,"column":11,"nodeType":"1143","messageId":"1144","endLine":135,"endColumn":15},{"ruleId":"1141","severity":1,"message":"1210","line":1,"column":17,"nodeType":"1143","messageId":"1144","endLine":1,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1219","line":4,"column":8,"nodeType":"1143","messageId":"1144","endLine":4,"endColumn":21},{"ruleId":"1141","severity":1,"message":"1220","line":5,"column":8,"nodeType":"1143","messageId":"1144","endLine":5,"endColumn":18},{"ruleId":"1141","severity":1,"message":"1221","line":6,"column":8,"nodeType":"1143","messageId":"1144","endLine":6,"endColumn":23},{"ruleId":"1141","severity":1,"message":"1222","line":8,"column":8,"nodeType":"1143","messageId":"1144","endLine":8,"endColumn":20},{"ruleId":"1141","severity":1,"message":"1223","line":6,"column":8,"nodeType":"1143","messageId":"1144","endLine":6,"endColumn":16},{"ruleId":"1224","severity":1,"message":"1225","line":28,"column":15,"nodeType":"1154","endLine":28,"endColumn":84},{"ruleId":"1141","severity":1,"message":"1226","line":3,"column":8,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":17},{"ruleId":"1141","severity":1,"message":"1227","line":4,"column":8,"nodeType":"1143","messageId":"1144","endLine":4,"endColumn":24},{"ruleId":"1148","severity":1,"message":"1228","line":63,"column":5,"nodeType":"1150","endLine":63,"endColumn":7,"suggestions":"1229"},{"ruleId":"1152","severity":1,"message":"1153","line":92,"column":11,"nodeType":"1154","endLine":92,"endColumn":14},{"ruleId":"1224","severity":1,"message":"1225","line":93,"column":13,"nodeType":"1154","endLine":93,"endColumn":108},{"ruleId":"1141","severity":1,"message":"1205","line":8,"column":10,"nodeType":"1143","messageId":"1144","endLine":8,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1206","line":96,"column":19,"nodeType":"1143","messageId":"1144","endLine":96,"endColumn":29},{"ruleId":"1141","severity":1,"message":"1207","line":120,"column":21,"nodeType":"1143","messageId":"1144","endLine":120,"endColumn":33},{"ruleId":"1168","severity":1,"message":"1169","line":136,"column":32,"nodeType":"1170","messageId":"1171","endLine":136,"endColumn":34},{"ruleId":"1168","severity":1,"message":"1169","line":163,"column":62,"nodeType":"1170","messageId":"1171","endLine":163,"endColumn":64},{"ruleId":"1168","severity":1,"message":"1169","line":164,"column":62,"nodeType":"1170","messageId":"1171","endLine":164,"endColumn":64},{"ruleId":"1208","severity":1,"message":"1209","line":200,"column":33,"nodeType":"1154","endLine":200,"endColumn":87},{"ruleId":"1230","severity":1,"message":"1231","line":202,"column":17,"nodeType":"1154","endLine":202,"endColumn":92},{"ruleId":"1168","severity":1,"message":"1169","line":258,"column":50,"nodeType":"1170","messageId":"1171","endLine":258,"endColumn":52},{"ruleId":"1168","severity":1,"message":"1169","line":263,"column":51,"nodeType":"1170","messageId":"1171","endLine":263,"endColumn":53},{"ruleId":"1168","severity":1,"message":"1169","line":271,"column":48,"nodeType":"1170","messageId":"1171","endLine":271,"endColumn":50},{"ruleId":"1141","severity":1,"message":"1226","line":3,"column":8,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":17},{"ruleId":"1141","severity":1,"message":"1227","line":4,"column":8,"nodeType":"1143","messageId":"1144","endLine":4,"endColumn":24},{"ruleId":"1148","severity":1,"message":"1232","line":63,"column":5,"nodeType":"1150","endLine":63,"endColumn":7,"suggestions":"1233"},{"ruleId":"1152","severity":1,"message":"1153","line":92,"column":11,"nodeType":"1154","endLine":92,"endColumn":14},{"ruleId":"1224","severity":1,"message":"1225","line":93,"column":13,"nodeType":"1154","endLine":93,"endColumn":108},{"ruleId":"1141","severity":1,"message":"1223","line":6,"column":8,"nodeType":"1143","messageId":"1144","endLine":6,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1231","line":28,"column":15,"nodeType":"1154","endLine":28,"endColumn":68},{"ruleId":"1141","severity":1,"message":"1210","line":1,"column":17,"nodeType":"1143","messageId":"1144","endLine":1,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1234","line":7,"column":10,"nodeType":"1143","messageId":"1144","endLine":7,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1210","line":1,"column":17,"nodeType":"1143","messageId":"1144","endLine":1,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1160","line":10,"column":10,"nodeType":"1143","messageId":"1144","endLine":10,"endColumn":20},{"ruleId":"1148","severity":1,"message":"1211","line":31,"column":37,"nodeType":"1150","endLine":31,"endColumn":47,"suggestions":"1235"},{"ruleId":"1208","severity":1,"message":"1209","line":44,"column":27,"nodeType":"1154","endLine":44,"endColumn":80},{"ruleId":"1141","severity":1,"message":"1236","line":3,"column":8,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":12},{"ruleId":"1141","severity":1,"message":"1234","line":8,"column":10,"nodeType":"1143","messageId":"1144","endLine":8,"endColumn":16},{"ruleId":"1172","severity":1,"message":"1173","line":22,"column":35,"nodeType":"1174","messageId":"1175","endLine":22,"endColumn":36,"suggestions":"1237"},{"ruleId":"1172","severity":1,"message":"1177","line":22,"column":37,"nodeType":"1174","messageId":"1175","endLine":22,"endColumn":38,"suggestions":"1238"},{"ruleId":"1172","severity":1,"message":"1179","line":22,"column":41,"nodeType":"1174","messageId":"1175","endLine":22,"endColumn":42,"suggestions":"1239"},{"ruleId":"1172","severity":1,"message":"1181","line":22,"column":43,"nodeType":"1174","messageId":"1175","endLine":22,"endColumn":44,"suggestions":"1240"},{"ruleId":"1172","severity":1,"message":"1183","line":22,"column":46,"nodeType":"1174","messageId":"1175","endLine":22,"endColumn":47,"suggestions":"1241"},{"ruleId":"1172","severity":1,"message":"1185","line":22,"column":48,"nodeType":"1174","messageId":"1175","endLine":22,"endColumn":49,"suggestions":"1242"},{"ruleId":"1172","severity":1,"message":"1187","line":22,"column":52,"nodeType":"1174","messageId":"1175","endLine":22,"endColumn":53,"suggestions":"1243"},{"ruleId":"1172","severity":1,"message":"1189","line":22,"column":54,"nodeType":"1174","messageId":"1175","endLine":22,"endColumn":55,"suggestions":"1244"},{"ruleId":"1172","severity":1,"message":"1191","line":22,"column":56,"nodeType":"1174","messageId":"1175","endLine":22,"endColumn":57,"suggestions":"1245"},{"ruleId":"1141","severity":1,"message":"1246","line":8,"column":8,"nodeType":"1143","messageId":"1144","endLine":8,"endColumn":17},{"ruleId":"1141","severity":1,"message":"1247","line":9,"column":17,"nodeType":"1143","messageId":"1144","endLine":9,"endColumn":23},{"ruleId":"1141","severity":1,"message":"1248","line":16,"column":8,"nodeType":"1143","messageId":"1144","endLine":16,"endColumn":15},{"ruleId":"1141","severity":1,"message":"1236","line":3,"column":8,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":12},{"ruleId":"1141","severity":1,"message":"1249","line":5,"column":8,"nodeType":"1143","messageId":"1144","endLine":5,"endColumn":17},{"ruleId":"1141","severity":1,"message":"1194","line":19,"column":8,"nodeType":"1143","messageId":"1144","endLine":19,"endColumn":22},{"ruleId":"1141","severity":1,"message":"1195","line":20,"column":8,"nodeType":"1143","messageId":"1144","endLine":20,"endColumn":25},{"ruleId":"1172","severity":1,"message":"1173","line":24,"column":35,"nodeType":"1174","messageId":"1175","endLine":24,"endColumn":36,"suggestions":"1250"},{"ruleId":"1172","severity":1,"message":"1177","line":24,"column":37,"nodeType":"1174","messageId":"1175","endLine":24,"endColumn":38,"suggestions":"1251"},{"ruleId":"1172","severity":1,"message":"1179","line":24,"column":41,"nodeType":"1174","messageId":"1175","endLine":24,"endColumn":42,"suggestions":"1252"},{"ruleId":"1172","severity":1,"message":"1181","line":24,"column":43,"nodeType":"1174","messageId":"1175","endLine":24,"endColumn":44,"suggestions":"1253"},{"ruleId":"1172","severity":1,"message":"1183","line":24,"column":46,"nodeType":"1174","messageId":"1175","endLine":24,"endColumn":47,"suggestions":"1254"},{"ruleId":"1172","severity":1,"message":"1185","line":24,"column":48,"nodeType":"1174","messageId":"1175","endLine":24,"endColumn":49,"suggestions":"1255"},{"ruleId":"1172","severity":1,"message":"1187","line":24,"column":52,"nodeType":"1174","messageId":"1175","endLine":24,"endColumn":53,"suggestions":"1256"},{"ruleId":"1172","severity":1,"message":"1189","line":24,"column":54,"nodeType":"1174","messageId":"1175","endLine":24,"endColumn":55,"suggestions":"1257"},{"ruleId":"1172","severity":1,"message":"1191","line":24,"column":56,"nodeType":"1174","messageId":"1175","endLine":24,"endColumn":57,"suggestions":"1258"},{"ruleId":"1148","severity":1,"message":"1259","line":11,"column":6,"nodeType":"1150","endLine":11,"endColumn":8,"suggestions":"1260"},{"ruleId":"1141","severity":1,"message":"1210","line":1,"column":17,"nodeType":"1143","messageId":"1144","endLine":1,"endColumn":25},{"ruleId":"1148","severity":1,"message":"1261","line":25,"column":25,"nodeType":"1150","endLine":25,"endColumn":35,"suggestions":"1262"},{"ruleId":"1208","severity":1,"message":"1209","line":56,"column":33,"nodeType":"1154","endLine":56,"endColumn":83},{"ruleId":"1230","severity":1,"message":"1231","line":58,"column":17,"nodeType":"1154","endLine":58,"endColumn":92},{"ruleId":"1263","severity":1,"message":"1264","line":83,"column":3,"nodeType":"1265","messageId":"1171","endLine":83,"endColumn":16},{"ruleId":"1172","severity":1,"message":"1173","line":104,"column":25,"nodeType":"1174","messageId":"1175","endLine":104,"endColumn":26,"suggestions":"1266"},{"ruleId":"1172","severity":1,"message":"1177","line":104,"column":27,"nodeType":"1174","messageId":"1175","endLine":104,"endColumn":28,"suggestions":"1267"},{"ruleId":"1172","severity":1,"message":"1179","line":104,"column":31,"nodeType":"1174","messageId":"1175","endLine":104,"endColumn":32,"suggestions":"1268"},{"ruleId":"1172","severity":1,"message":"1181","line":104,"column":33,"nodeType":"1174","messageId":"1175","endLine":104,"endColumn":34,"suggestions":"1269"},{"ruleId":"1172","severity":1,"message":"1183","line":104,"column":36,"nodeType":"1174","messageId":"1175","endLine":104,"endColumn":37,"suggestions":"1270"},{"ruleId":"1172","severity":1,"message":"1185","line":104,"column":38,"nodeType":"1174","messageId":"1175","endLine":104,"endColumn":39,"suggestions":"1271"},{"ruleId":"1172","severity":1,"message":"1187","line":104,"column":42,"nodeType":"1174","messageId":"1175","endLine":104,"endColumn":43,"suggestions":"1272"},{"ruleId":"1172","severity":1,"message":"1189","line":104,"column":44,"nodeType":"1174","messageId":"1175","endLine":104,"endColumn":45,"suggestions":"1273"},{"ruleId":"1172","severity":1,"message":"1191","line":104,"column":46,"nodeType":"1174","messageId":"1175","endLine":104,"endColumn":47,"suggestions":"1274"},{"ruleId":"1148","severity":1,"message":"1275","line":93,"column":6,"nodeType":"1150","endLine":93,"endColumn":22,"suggestions":"1276"},{"ruleId":"1141","severity":1,"message":"1277","line":116,"column":21,"nodeType":"1143","messageId":"1144","endLine":116,"endColumn":33},{"ruleId":"1141","severity":1,"message":"1278","line":126,"column":19,"nodeType":"1143","messageId":"1144","endLine":126,"endColumn":29},{"ruleId":"1141","severity":1,"message":"1279","line":129,"column":23,"nodeType":"1143","messageId":"1144","endLine":129,"endColumn":37},{"ruleId":"1141","severity":1,"message":"1280","line":351,"column":12,"nodeType":"1143","messageId":"1144","endLine":351,"endColumn":29},{"ruleId":"1148","severity":1,"message":"1281","line":18,"column":61,"nodeType":"1150","endLine":18,"endColumn":71,"suggestions":"1282"},{"ruleId":"1152","severity":1,"message":"1153","line":55,"column":21,"nodeType":"1154","endLine":55,"endColumn":24},{"ruleId":"1224","severity":1,"message":"1225","line":56,"column":23,"nodeType":"1154","endLine":61,"endColumn":25},{"ruleId":"1148","severity":1,"message":"1275","line":100,"column":6,"nodeType":"1150","endLine":100,"endColumn":32,"suggestions":"1283"},{"ruleId":"1148","severity":1,"message":"1275","line":99,"column":6,"nodeType":"1150","endLine":99,"endColumn":32,"suggestions":"1284"},{"ruleId":"1141","severity":1,"message":"1285","line":2,"column":27,"nodeType":"1143","messageId":"1144","endLine":2,"endColumn":36},{"ruleId":"1141","severity":1,"message":"1286","line":3,"column":23,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":34},{"ruleId":"1141","severity":1,"message":"1285","line":2,"column":27,"nodeType":"1143","messageId":"1144","endLine":2,"endColumn":36},{"ruleId":"1141","severity":1,"message":"1286","line":3,"column":23,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":34},{"ruleId":"1168","severity":1,"message":"1287","line":36,"column":43,"nodeType":"1170","messageId":"1171","endLine":36,"endColumn":45},{"ruleId":"1141","severity":1,"message":"1210","line":6,"column":17,"nodeType":"1143","messageId":"1144","endLine":6,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1285","line":6,"column":27,"nodeType":"1143","messageId":"1144","endLine":6,"endColumn":36},{"ruleId":"1141","severity":1,"message":"1247","line":11,"column":17,"nodeType":"1143","messageId":"1144","endLine":11,"endColumn":23},{"ruleId":"1141","severity":1,"message":"1277","line":77,"column":21,"nodeType":"1143","messageId":"1144","endLine":77,"endColumn":33},{"ruleId":"1141","severity":1,"message":"1277","line":81,"column":21,"nodeType":"1143","messageId":"1144","endLine":81,"endColumn":33},{"ruleId":"1141","severity":1,"message":"1278","line":91,"column":19,"nodeType":"1143","messageId":"1144","endLine":91,"endColumn":29},{"ruleId":"1141","severity":1,"message":"1288","line":92,"column":10,"nodeType":"1143","messageId":"1144","endLine":92,"endColumn":14},{"ruleId":"1141","severity":1,"message":"1289","line":92,"column":16,"nodeType":"1143","messageId":"1144","endLine":92,"endColumn":23},{"ruleId":"1141","severity":1,"message":"1279","line":94,"column":23,"nodeType":"1143","messageId":"1144","endLine":94,"endColumn":37},{"ruleId":"1141","severity":1,"message":"1290","line":7,"column":8,"nodeType":"1143","messageId":"1144","endLine":7,"endColumn":15},{"ruleId":"1141","severity":1,"message":"1210","line":6,"column":17,"nodeType":"1143","messageId":"1144","endLine":6,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1285","line":6,"column":27,"nodeType":"1143","messageId":"1144","endLine":6,"endColumn":36},{"ruleId":"1141","severity":1,"message":"1248","line":11,"column":8,"nodeType":"1143","messageId":"1144","endLine":11,"endColumn":15},{"ruleId":"1141","severity":1,"message":"1234","line":12,"column":10,"nodeType":"1143","messageId":"1144","endLine":12,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1167","line":26,"column":9,"nodeType":"1143","messageId":"1144","endLine":26,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1231","line":50,"column":11,"nodeType":"1154","endLine":50,"endColumn":71},{"ruleId":"1148","severity":1,"message":"1291","line":27,"column":6,"nodeType":"1150","endLine":27,"endColumn":17,"suggestions":"1292"},{"ruleId":"1141","severity":1,"message":"1293","line":4,"column":10,"nodeType":"1143","messageId":"1144","endLine":4,"endColumn":24},{"ruleId":"1141","severity":1,"message":"1294","line":9,"column":8,"nodeType":"1143","messageId":"1144","endLine":9,"endColumn":11},{"ruleId":"1141","severity":1,"message":"1295","line":12,"column":10,"nodeType":"1143","messageId":"1144","endLine":12,"endColumn":21},{"ruleId":"1141","severity":1,"message":"1296","line":22,"column":5,"nodeType":"1143","messageId":"1144","endLine":22,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1231","line":65,"column":15,"nodeType":"1154","endLine":69,"endColumn":17},{"ruleId":"1141","severity":1,"message":"1247","line":10,"column":17,"nodeType":"1143","messageId":"1144","endLine":10,"endColumn":23},{"ruleId":"1141","severity":1,"message":"1297","line":11,"column":8,"nodeType":"1143","messageId":"1144","endLine":11,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1298","line":3,"column":8,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1299","line":30,"column":9,"nodeType":"1143","messageId":"1144","endLine":30,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1231","line":72,"column":15,"nodeType":"1154","endLine":76,"endColumn":17},{"ruleId":"1263","severity":1,"message":"1300","line":26,"column":5,"nodeType":"1265","messageId":"1171","endLine":26,"endColumn":24},{"ruleId":"1141","severity":1,"message":"1301","line":13,"column":8,"nodeType":"1143","messageId":"1144","endLine":13,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1231","line":50,"column":11,"nodeType":"1154","endLine":50,"endColumn":71},{"ruleId":"1141","severity":1,"message":"1293","line":4,"column":10,"nodeType":"1143","messageId":"1144","endLine":4,"endColumn":24},{"ruleId":"1141","severity":1,"message":"1294","line":9,"column":8,"nodeType":"1143","messageId":"1144","endLine":9,"endColumn":11},{"ruleId":"1141","severity":1,"message":"1295","line":12,"column":10,"nodeType":"1143","messageId":"1144","endLine":12,"endColumn":21},{"ruleId":"1141","severity":1,"message":"1296","line":22,"column":5,"nodeType":"1143","messageId":"1144","endLine":22,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1231","line":65,"column":15,"nodeType":"1154","endLine":69,"endColumn":17},{"ruleId":"1141","severity":1,"message":"1247","line":10,"column":17,"nodeType":"1143","messageId":"1144","endLine":10,"endColumn":23},{"ruleId":"1141","severity":1,"message":"1297","line":11,"column":8,"nodeType":"1143","messageId":"1144","endLine":11,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1302","line":3,"column":10,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":20},{"ruleId":"1141","severity":1,"message":"1303","line":19,"column":20,"nodeType":"1143","messageId":"1144","endLine":19,"endColumn":31},{"ruleId":"1148","severity":1,"message":"1304","line":54,"column":6,"nodeType":"1150","endLine":54,"endColumn":13,"suggestions":"1305"},{"ruleId":"1141","severity":1,"message":"1306","line":2,"column":8,"nodeType":"1143","messageId":"1144","endLine":2,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1307","line":3,"column":8,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":20},{"ruleId":"1141","severity":1,"message":"1194","line":6,"column":8,"nodeType":"1143","messageId":"1144","endLine":6,"endColumn":22},{"ruleId":"1141","severity":1,"message":"1195","line":7,"column":8,"nodeType":"1143","messageId":"1144","endLine":7,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1308","line":8,"column":8,"nodeType":"1143","messageId":"1144","endLine":8,"endColumn":21},{"ruleId":"1141","severity":1,"message":"1309","line":9,"column":8,"nodeType":"1143","messageId":"1144","endLine":9,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1310","line":17,"column":7,"nodeType":"1143","messageId":"1144","endLine":17,"endColumn":15},{"ruleId":"1141","severity":1,"message":"1298","line":3,"column":8,"nodeType":"1143","messageId":"1144","endLine":3,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1311","line":2,"column":8,"nodeType":"1143","messageId":"1144","endLine":2,"endColumn":16},{"ruleId":"1141","severity":1,"message":"1312","line":5,"column":10,"nodeType":"1143","messageId":"1144","endLine":5,"endColumn":19},{"ruleId":"1141","severity":1,"message":"1210","line":2,"column":17,"nodeType":"1143","messageId":"1144","endLine":2,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1313","line":6,"column":10,"nodeType":"1143","messageId":"1144","endLine":6,"endColumn":25},{"ruleId":"1141","severity":1,"message":"1165","line":12,"column":13,"nodeType":"1143","messageId":"1144","endLine":12,"endColumn":19},{"ruleId":"1314","severity":1,"message":"1315","line":25,"column":13,"nodeType":"1154","messageId":"1316","endLine":25,"endColumn":122,"fix":"1317"},{"ruleId":"1314","severity":1,"message":"1315","line":27,"column":13,"nodeType":"1154","messageId":"1316","endLine":27,"endColumn":113,"fix":"1318"},{"ruleId":"1314","severity":1,"message":"1315","line":29,"column":13,"nodeType":"1154","messageId":"1316","endLine":29,"endColumn":113,"fix":"1319"},{"ruleId":"1314","severity":1,"message":"1315","line":31,"column":13,"nodeType":"1154","messageId":"1316","endLine":31,"endColumn":113,"fix":"1320"},{"ruleId":"1224","severity":1,"message":"1225","line":50,"column":17,"nodeType":"1154","endLine":50,"endColumn":61},"no-native-reassign",["1321"],"no-negated-in-lhs",["1322"],"no-unused-vars","'GRAMMAR_LEVEL' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1323"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'friendsIcon' is defined but never used.","'toeicIcon' is defined but never used.","'verbIcon' is defined but never used.","'FeatureBox' is defined but never used.","'useScrollTop' is defined but never used.","'makeStyles' is defined but never used.","'Link' is defined but never used.","'faArchive' is defined but never used.","'faBookReader' is defined but never used.","'FEATURE_LIST' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'role' is assigned a value but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\(.","Literal","unnecessaryEscape",["1324","1325"],"Unnecessary escape character: \\).",["1326","1327"],"Unnecessary escape character: \\|.",["1328","1329"],"Unnecessary escape character: \\..",["1330","1331"],"Unnecessary escape character: \\?.",["1332","1333"],"Unnecessary escape character: \\/.",["1334","1335"],"Unnecessary escape character: \\+.",["1336","1337"],"Unnecessary escape character: \\=.",["1338","1339"],"Unnecessary escape character: \\_.",["1340","1341"],"'classes' is assigned a value but never used.","'VisibilityIcon' is defined but never used.","'VisibilityOffIcon' is defined but never used.","'UX' is defined but never used.","'dictionaryIcon' is defined but never used.","'editIcon' is defined but never used.","'favoriteIcon' is defined but never used.","'gameIcon' is defined but never used.","'ipaIcon' is defined but never used.","'medalIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'isFirstLoad' and 'list'. Either include them or remove the dependency array.",["1342"],"'VideoCard' is defined but never used.","'setAnswers' is assigned a value but never used.","'setisCorrect' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'listenId'. Either include it or remove the dependency array.",["1343"],"'ipaChartSrc' is defined but never used.","'ipaTableSrc' is defined but never used.","'mouthShapeSrc' is defined but never used.","'CameraIcon' is defined but never used.","'InputCustom' is defined but never used.","'user' is assigned a value but never used.","'grammarlyIcon' is defined but never used.","'jigsawIcon' is defined but never used.","'millionaireIcon' is defined but never used.","'oppositeIcon' is defined but never used.","'TopicBox' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","React Hook useEffect has a missing dependency: 'topic'. Either include it or remove the dependency array.",["1344"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'level'. Either include it or remove the dependency array.",["1345"],"'ROUTES' is defined but never used.",["1346"],"'Grid' is defined but never used.",["1347","1348"],["1349","1350"],["1351","1352"],["1353","1354"],["1355","1356"],["1357","1358"],["1359","1360"],["1361","1362"],["1363","1364"],"'PropTypes' is defined but never used.","'useRef' is defined but never used.","'AddIcon' is defined but never used.","'ResetIcon' is defined but never used.",["1365","1366"],["1367","1368"],["1369","1370"],["1371","1372"],["1373","1374"],["1375","1376"],["1377","1378"],["1379","1380"],["1381","1382"],"React Hook useEffect has missing dependencies: 'isOverride' and 'title'. Either include them or remove the dependency array.",["1383"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1384"],"no-dupe-keys","Duplicate key 'GRAMMAR_ADMIN'.","ObjectExpression",["1385","1386"],["1387","1388"],["1389","1390"],["1391","1392"],["1393","1394"],["1395","1396"],["1397","1398"],["1399","1400"],["1401","1402"],"React Hook useEffect has a missing dependency: 'isFirstLoad'. Either include it or remove the dependency array.",["1403"],"'setResetFlag' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setIsFirstLoad' is assigned a value but never used.","'handleClickGoBack' is defined but never used.","React Hook useEffect has missing dependencies: 'phonetic' and 'type'. Either include them or remove the dependency array.",["1404"],["1405"],["1406"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","Expected '!==' and instead saw '!='.","'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'wordApi' is defined but never used.","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["1407"],"'WORD_SPECIALTY' is defined but never used.","'Tag' is defined but never used.","'sliceTopics' is defined but never used.","'_id' is assigned a value but never used.","'TopicSelect' is defined but never used.","'authReducer' is defined but never used.","'deleteHandler' is assigned a value but never used.","Duplicate key '& .MuiSelect-root'.","'RichTextEditor' is defined but never used.","'equalArray' is defined but never used.","'setPageInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'pageInfo.packInfo'. Either include them or remove the dependency array.",["1408"],"'HelpIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'TooltipCustom' is defined but never used.","'WordPack' is defined but never used.","'tutorial' is assigned a value but never used.","'Skeleton' is defined but never used.","'useParams' is defined but never used.","'FontAwesomeIcon' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1409","text":"1410"},{"range":"1411","text":"1410"},{"range":"1412","text":"1410"},{"range":"1413","text":"1410"},"no-global-assign","no-unsafe-negation",{"desc":"1414","fix":"1415"},{"messageId":"1416","fix":"1417","desc":"1418"},{"messageId":"1419","fix":"1420","desc":"1421"},{"messageId":"1416","fix":"1422","desc":"1418"},{"messageId":"1419","fix":"1423","desc":"1421"},{"messageId":"1416","fix":"1424","desc":"1418"},{"messageId":"1419","fix":"1425","desc":"1421"},{"messageId":"1416","fix":"1426","desc":"1418"},{"messageId":"1419","fix":"1427","desc":"1421"},{"messageId":"1416","fix":"1428","desc":"1418"},{"messageId":"1419","fix":"1429","desc":"1421"},{"messageId":"1416","fix":"1430","desc":"1418"},{"messageId":"1419","fix":"1431","desc":"1421"},{"messageId":"1416","fix":"1432","desc":"1418"},{"messageId":"1419","fix":"1433","desc":"1421"},{"messageId":"1416","fix":"1434","desc":"1418"},{"messageId":"1419","fix":"1435","desc":"1421"},{"messageId":"1416","fix":"1436","desc":"1418"},{"messageId":"1419","fix":"1437","desc":"1421"},{"desc":"1438","fix":"1439"},{"desc":"1440","fix":"1441"},{"desc":"1442","fix":"1443"},{"desc":"1444","fix":"1445"},{"desc":"1440","fix":"1446"},{"messageId":"1416","fix":"1447","desc":"1418"},{"messageId":"1419","fix":"1448","desc":"1421"},{"messageId":"1416","fix":"1449","desc":"1418"},{"messageId":"1419","fix":"1450","desc":"1421"},{"messageId":"1416","fix":"1451","desc":"1418"},{"messageId":"1419","fix":"1452","desc":"1421"},{"messageId":"1416","fix":"1453","desc":"1418"},{"messageId":"1419","fix":"1454","desc":"1421"},{"messageId":"1416","fix":"1455","desc":"1418"},{"messageId":"1419","fix":"1456","desc":"1421"},{"messageId":"1416","fix":"1457","desc":"1418"},{"messageId":"1419","fix":"1458","desc":"1421"},{"messageId":"1416","fix":"1459","desc":"1418"},{"messageId":"1419","fix":"1460","desc":"1421"},{"messageId":"1416","fix":"1461","desc":"1418"},{"messageId":"1419","fix":"1462","desc":"1421"},{"messageId":"1416","fix":"1463","desc":"1418"},{"messageId":"1419","fix":"1464","desc":"1421"},{"messageId":"1416","fix":"1465","desc":"1418"},{"messageId":"1419","fix":"1466","desc":"1421"},{"messageId":"1416","fix":"1467","desc":"1418"},{"messageId":"1419","fix":"1468","desc":"1421"},{"messageId":"1416","fix":"1469","desc":"1418"},{"messageId":"1419","fix":"1470","desc":"1421"},{"messageId":"1416","fix":"1471","desc":"1418"},{"messageId":"1419","fix":"1472","desc":"1421"},{"messageId":"1416","fix":"1473","desc":"1418"},{"messageId":"1419","fix":"1474","desc":"1421"},{"messageId":"1416","fix":"1475","desc":"1418"},{"messageId":"1419","fix":"1476","desc":"1421"},{"messageId":"1416","fix":"1477","desc":"1418"},{"messageId":"1419","fix":"1478","desc":"1421"},{"messageId":"1416","fix":"1479","desc":"1418"},{"messageId":"1419","fix":"1480","desc":"1421"},{"messageId":"1416","fix":"1481","desc":"1418"},{"messageId":"1419","fix":"1482","desc":"1421"},{"desc":"1483","fix":"1484"},{"desc":"1485","fix":"1486"},{"messageId":"1416","fix":"1487","desc":"1418"},{"messageId":"1419","fix":"1488","desc":"1421"},{"messageId":"1416","fix":"1489","desc":"1418"},{"messageId":"1419","fix":"1490","desc":"1421"},{"messageId":"1416","fix":"1491","desc":"1418"},{"messageId":"1419","fix":"1492","desc":"1421"},{"messageId":"1416","fix":"1493","desc":"1418"},{"messageId":"1419","fix":"1494","desc":"1421"},{"messageId":"1416","fix":"1495","desc":"1418"},{"messageId":"1419","fix":"1496","desc":"1421"},{"messageId":"1416","fix":"1497","desc":"1418"},{"messageId":"1419","fix":"1498","desc":"1421"},{"messageId":"1416","fix":"1499","desc":"1418"},{"messageId":"1419","fix":"1500","desc":"1421"},{"messageId":"1416","fix":"1501","desc":"1418"},{"messageId":"1419","fix":"1502","desc":"1421"},{"messageId":"1416","fix":"1503","desc":"1418"},{"messageId":"1419","fix":"1504","desc":"1421"},{"desc":"1505","fix":"1506"},{"desc":"1507","fix":"1508"},{"desc":"1509","fix":"1510"},{"desc":"1509","fix":"1511"},{"desc":"1512","fix":"1513"},{"desc":"1514","fix":"1515"},[962,962]," rel=\"noreferrer\"",[1190,1190],[1413,1413],[1645,1645],"Update the dependencies array to be: [dispatch]",{"range":"1516","text":"1517"},"removeEscape",{"range":"1518","text":"1519"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1520","text":"1521"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1522","text":"1519"},{"range":"1523","text":"1521"},{"range":"1524","text":"1519"},{"range":"1525","text":"1521"},{"range":"1526","text":"1519"},{"range":"1527","text":"1521"},{"range":"1528","text":"1519"},{"range":"1529","text":"1521"},{"range":"1530","text":"1519"},{"range":"1531","text":"1521"},{"range":"1532","text":"1519"},{"range":"1533","text":"1521"},{"range":"1534","text":"1519"},{"range":"1535","text":"1521"},{"range":"1536","text":"1519"},{"range":"1537","text":"1521"},"Update the dependencies array to be: [page, packInfo, sortType, list, isFirstLoad]",{"range":"1538","text":"1539"},"Update the dependencies array to be: [dispatch, listenId]",{"range":"1540","text":"1541"},"Update the dependencies array to be: [topic]",{"range":"1542","text":"1543"},"Update the dependencies array to be: [level]",{"range":"1544","text":"1545"},{"range":"1546","text":"1541"},{"range":"1547","text":"1519"},{"range":"1548","text":"1521"},{"range":"1549","text":"1519"},{"range":"1550","text":"1521"},{"range":"1551","text":"1519"},{"range":"1552","text":"1521"},{"range":"1553","text":"1519"},{"range":"1554","text":"1521"},{"range":"1555","text":"1519"},{"range":"1556","text":"1521"},{"range":"1557","text":"1519"},{"range":"1558","text":"1521"},{"range":"1559","text":"1519"},{"range":"1560","text":"1521"},{"range":"1561","text":"1519"},{"range":"1562","text":"1521"},{"range":"1563","text":"1519"},{"range":"1564","text":"1521"},{"range":"1565","text":"1519"},{"range":"1566","text":"1521"},{"range":"1567","text":"1519"},{"range":"1568","text":"1521"},{"range":"1569","text":"1519"},{"range":"1570","text":"1521"},{"range":"1571","text":"1519"},{"range":"1572","text":"1521"},{"range":"1573","text":"1519"},{"range":"1574","text":"1521"},{"range":"1575","text":"1519"},{"range":"1576","text":"1521"},{"range":"1577","text":"1519"},{"range":"1578","text":"1521"},{"range":"1579","text":"1519"},{"range":"1580","text":"1521"},{"range":"1581","text":"1519"},{"range":"1582","text":"1521"},"Update the dependencies array to be: [isOverride, title]",{"range":"1583","text":"1584"},"Update the dependencies array to be: [dispatch, id]",{"range":"1585","text":"1586"},{"range":"1587","text":"1519"},{"range":"1588","text":"1521"},{"range":"1589","text":"1519"},{"range":"1590","text":"1521"},{"range":"1591","text":"1519"},{"range":"1592","text":"1521"},{"range":"1593","text":"1519"},{"range":"1594","text":"1521"},{"range":"1595","text":"1519"},{"range":"1596","text":"1521"},{"range":"1597","text":"1519"},{"range":"1598","text":"1521"},{"range":"1599","text":"1519"},{"range":"1600","text":"1521"},{"range":"1601","text":"1519"},{"range":"1602","text":"1521"},{"range":"1603","text":"1519"},{"range":"1604","text":"1521"},"Update the dependencies array to be: [page, packInfo, isFirstLoad]",{"range":"1605","text":"1606"},"Update the dependencies array to be: [dispatch, phonetic, type]",{"range":"1607","text":"1608"},"Update the dependencies array to be: [page, packInfo, sortType, isFirstLoad]",{"range":"1609","text":"1610"},{"range":"1611","text":"1610"},"Update the dependencies array to be: [options, resetFlag]",{"range":"1612","text":"1613"},"Update the dependencies array to be: [dispatch, pageInfo.packInfo, total]",{"range":"1614","text":"1615"},[446,448],"[dispatch]",[972,973],"",[972,972],"\\",[974,975],[974,974],[978,979],[978,978],[980,981],[980,980],[983,984],[983,983],[985,986],[985,985],[989,990],[989,989],[991,992],[991,991],[993,994],[993,993],[3886,3912],"[page, packInfo, sortType, list, isFirstLoad]",[975,985],"[dispatch, listenId]",[1503,1505],"[topic]",[1486,1488],"[level]",[975,985],[990,991],[990,990],[992,993],[992,992],[996,997],[996,996],[998,999],[998,998],[1001,1002],[1001,1001],[1003,1004],[1003,1003],[1007,1008],[1007,1007],[1009,1010],[1009,1009],[1011,1012],[1011,1011],[1118,1119],[1118,1118],[1120,1121],[1120,1120],[1124,1125],[1124,1124],[1126,1127],[1126,1126],[1129,1130],[1129,1129],[1131,1132],[1131,1131],[1135,1136],[1135,1135],[1137,1138],[1137,1137],[1139,1140],[1139,1139],[317,319],"[isOverride, title]",[1002,1012],"[dispatch, id]",[2879,2880],[2879,2879],[2881,2882],[2881,2881],[2885,2886],[2885,2885],[2887,2888],[2887,2887],[2890,2891],[2890,2890],[2892,2893],[2892,2892],[2896,2897],[2896,2896],[2898,2899],[2898,2898],[2900,2901],[2900,2900],[2383,2399],"[page, packInfo, isFirstLoad]",[793,803],"[dispatch, phonetic, type]",[2659,2685],"[page, packInfo, sortType, isFirstLoad]",[2685,2711],[738,749],"[options, resetFlag]",[1410,1417],"[dispatch, pageInfo.packInfo, total]"]