{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\components\\\\WordAdmin\\\\AddWord\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport wordApi from \"apis/wordApi\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport SelectCustom from \"components/UI/SelectCustom\";\nimport TopicSelect from \"components/UI/TopicSelect\";\nimport { MAX, WORD_LEVELS, WORD_SPECIALTY, WORD_TYPES } from \"./../../../constants\";\nimport PropTypes from \"prop-types\";\nimport React, { useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport * as yup from \"yup\";\nimport InformationTooltip from \"./InformationTooltip\";\nimport PhoneticInput from \"./PhoneticInput\";\nimport useStyle from \"./style\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport useTitle from \"hooks/useTitle\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  word: yup.string().trim().required(\"Hãy nhập một từ vào đây\").lowercase().max(MAX.WORD_LEN, `Từ dài tối đã ${MAX.WORD_LEN} ký tự`),\n  mean: yup.string().trim().lowercase().required(\"Hãy nhập ý nghĩa từ\").max(MAX.MEAN_WORD_LEN, `Từ dài tối đã ${MAX.MEAN_WORD_LEN} ký tự`),\n  phonetic: yup.string().trim().lowercase().required(\"Hãy nhập ký âm của từ\").max(MAX.PHONETIC_LEN, `Từ dài tối đã ${MAX.PHONETIC_LEN} ký tự`),\n  type: yup.string().required(\"Chọn loại của từ\").oneOf(WORD_TYPES.map(i => i.value)),\n  level: yup.string().required(\"Chọn cấp bậc của từ\").oneOf(WORD_LEVELS.map(i => i.value)),\n  specialty: yup.string().required(\"Chọn cấp bậc của từ\").oneOf(WORD_SPECIALTY.map(i => i.value)),\n  examples: yup.string().max(MAX.EXAMPLE_WORD_LEN, `Ví dụ tối đa ${MAX.EXAMPLE_WORD_LEN} ký tự`),\n  synonyms: yup.string().max(MAX.SYNONYMS_WORD_LEN, `Từ đồng nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`),\n  antonyms: yup.string().max(MAX.SYNONYMS_WORD_LEN, `Từ trái nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`),\n  note: yup.string().max(MAX.NOTE_WORD_LEN, `Ghi chú tối đa ${MAX.NOTE_WORD_LEN} ký tự`)\n}); // Prevent unmount component topic select\n\nconst ButtonWrapper = props => /*#__PURE__*/_jsxDEV(Grid, { ...props,\n  item: true,\n  xs: 12,\n  md: 6,\n  lg: 4\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 82,\n  columnNumber: 34\n}, this);\n\n_c = ButtonWrapper;\n\nconst TagsWrapper = props => /*#__PURE__*/_jsxDEV(Grid, { ...props,\n  item: true,\n  xs: 12\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 32\n}, this);\n\n_c2 = TagsWrapper;\n\nfunction WordContribution({\n  onSubmitForm,\n  submitting\n}) {\n  _s();\n\n  var _errors$word, _errors$mean, _errors$phonetic, _errors$type, _errors$level, _errors$specialty, _errors$examples, _errors$synonyms, _errors$antonyms, _errors$note;\n\n  useTitle(\"Add word\");\n  const classes = useStyle();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const topics = useRef([]);\n  const history = useHistory();\n  const defaultImg = \"https://res.cloudinary.com/phongvn2611/image/upload/v1638368033/english/word/default-image_fbmbtn.png\";\n  const [image, setImage] = useState(defaultImg);\n\n  const convertImageToBase64 = image => {\n    const reader = new FileReader();\n    reader.readAsDataURL(image);\n    return new Promise(resolve => {\n      reader.onloadend = () => {\n        resolve(reader.result);\n      };\n    });\n  };\n\n  const handleChangePicture = e => {\n    e.preventDefault();\n\n    try {\n      const file = e.target.files[0];\n\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n\n      convertImageToBase64(file).then(res => {\n        setImage(res);\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const onSubmit = data => {\n    onSubmitForm({ ...data,\n      topics: topics.current,\n      picture: image\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: \"Th\\xEAm t\\u1EEB m\\u1EDBi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dyno-break\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.avtWrap,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image ? image : defaultImg,\n            alt: \"\",\n            className: `${classes.avt} w-100 h-100`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.cameraIconWrap} flex-center`,\n            children: [/*#__PURE__*/_jsxDEV(CameraIcon, {\n              className: classes.cameraIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: classes.fileInput,\n              onChange: handleChangePicture,\n              accept: \"image/*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.grid,\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"T\\u1EEB m\\u1EDBi (*)\",\n            error: Boolean(errors.word),\n            inputProps: {\n              autoFocus: true,\n              maxLength: MAX.WORD_LEN,\n              name: \"word\",\n              ...register(\"word\")\n            } // onChange={(e) => handleCheckWordExistence(e, null)}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), errors.word && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$word = errors.word) === null || _errors$word === void 0 ? void 0 : _errors$word.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"Ngh\\u0129a c\\u1EE7a t\\u1EEB (*)\",\n            error: Boolean(errors.mean),\n            inputProps: {\n              maxLength: MAX.MEAN_WORD_LEN,\n              name: \"mean\",\n              ...register(\"mean\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), errors.mean && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$mean = errors.mean) === null || _errors$mean === void 0 ? void 0 : _errors$mean.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PhoneticInput, {\n          errorMessage: (_errors$phonetic = errors.phonetic) === null || _errors$phonetic === void 0 ? void 0 : _errors$phonetic.message,\n          error: Boolean(errors.phonetic),\n          valuePhonetic: \"\",\n          inputProps: {\n            maxLength: MAX.PHONETIC_LEN,\n            name: \"phonetic\"\n          },\n          register: register(\"phonetic\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(SelectCustom, {\n            className: \"w-100\",\n            label: \"Lo\\u1EA1i t\\u1EEB (*)\",\n            options: WORD_TYPES,\n            error: Boolean(errors.type),\n            index: 0,\n            inputProps: {\n              name: \"type\",\n              ...register(\"type\")\n            } // onChange={(e) => handleCheckWordExistence(null, e)}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), errors.type && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$type = errors.type) === null || _errors$type === void 0 ? void 0 : _errors$type.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(SelectCustom, {\n            className: \"w-100\",\n            label: \"C\\u1EA5p b\\u1EADc c\\u1EE7a t\\u1EEB (*)\",\n            options: WORD_LEVELS,\n            error: Boolean(errors.level),\n            index: 0,\n            inputProps: {\n              name: \"level\",\n              ...register(\"level\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), errors.level && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$level = errors.level) === null || _errors$level === void 0 ? void 0 : _errors$level.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(SelectCustom, {\n            className: \"w-100\",\n            label: \"Thu\\u1ED9c chuy\\xEAn ng\\xE0nh\",\n            options: WORD_SPECIALTY,\n            error: Boolean(errors.specialty),\n            index: 0,\n            inputProps: {\n              name: \"specialty\",\n              ...register(\"specialty\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), errors.specialty && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$specialty = errors.specialty) === null || _errors$specialty === void 0 ? void 0 : _errors$specialty.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"C\\xE2u v\\xED d\\u1EE5\",\n            multiline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InformationTooltip, {\n              title: \"Th\\xEAm c\\xE1c c\\xE2u v\\xED d\\u1EE5 cho t\\u1EEB tr\\xEAn. \\u0110\\u1EA3m b\\u1EA3o c\\xF3 s\\u1EF1 xu\\u1EA5t hi\\u1EC7n c\\u1EE7a t\\u1EEB \\u0111\\xF3 trong c\\xE2u. B\\u1EA1n c\\xF3 th\\u1EC3 th\\xEAm nhi\\u1EC1u c\\xE2u b\\u1EB1ng c\\xE1ch xu\\u1ED1ng d\\xF2ng.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this),\n            error: Boolean(errors.examples),\n            inputProps: {\n              name: \"examples\",\n              ...register(\"examples\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), errors.examples && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$examples = errors.examples) === null || _errors$examples === void 0 ? void 0 : _errors$examples.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"C\\xE1c t\\u1EEB \\u0111\\u1ED3ng ngh\\u0129a\",\n            multiline: true,\n            error: Boolean(errors.synonyms),\n            inputProps: {\n              name: \"synonyms\",\n              ...register(\"synonyms\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), errors.synonyms && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$synonyms = errors.synonyms) === null || _errors$synonyms === void 0 ? void 0 : _errors$synonyms.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"C\\xE1c t\\u1EEB tr\\xE1i ngh\\u0129a\",\n            multiline: true,\n            error: Boolean(errors.antonyms),\n            inputProps: {\n              name: \"antonyms\",\n              ...register(\"antonyms\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), errors.antonyms && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$antonyms = errors.antonyms) === null || _errors$antonyms === void 0 ? void 0 : _errors$antonyms.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"Ghi ch\\xFA\",\n            multiline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InformationTooltip, {\n              title: \"Nh\\u1EADp th\\xEAm ghi ch\\xFA m\\xE0 b\\u1EA1n mu\\u1ED1n cho t\\u1EEB. Th\\xEAm nhi\\u1EC1u d\\xF2ng b\\u1EB1ng c\\xE1ch xu\\u1ED1ng d\\xF2ng.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this),\n            error: Boolean(errors.note),\n            inputProps: {\n              name: \"note\",\n              ...register(\"note\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), errors.note && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$note = errors.note) === null || _errors$note === void 0 ? void 0 : _errors$note.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopicSelect, {\n          onChange: topicList => topics.current = topicList,\n          buttonTitle: \"Th\\xEAm ch\\u1EE7 \\u0111\\u1EC1\",\n          buttonWrapper: ButtonWrapper,\n          tagsWrapper: TagsWrapper\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dyno-break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-end jus-content-end pt-5 w-100\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: `${classes.btn} ${classes.btnReset}`,\n          color: \"secondary\",\n          endIcon: /*#__PURE__*/_jsxDEV(ResetIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 22\n          }, this),\n          variant: \"outlined\",\n          onClick: () => history.push(\"/admin/word\"),\n          children: \"Quay l\\u1EA1i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: `${classes.btn} _btn _btn-primary`,\n          disabled: submitting,\n          endIcon: submitting ? /*#__PURE__*/_jsxDEV(LoopIcon, {\n            className: \"ani-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 64\n          }, this),\n          variant: \"contained\",\n          children: \"Th\\xEAm t\\u1EEB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WordContribution, \"rDhi2GPDk/JJmFdioD/09bBGdR4=\", false, function () {\n  return [useTitle, useStyle, useDispatch, useForm, useHistory];\n});\n\n_c3 = WordContribution;\nWordContribution.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool\n};\nWordContribution.defaultProps = {\n  onSubmitForm: function () {},\n  submitting: false\n};\nexport default WordContribution;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"TagsWrapper\");\n$RefreshReg$(_c3, \"WordContribution\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/components/WordAdmin/AddWord/index.js"],"names":["yupResolver","Button","Grid","LoopIcon","ResetIcon","SaveIcon","wordApi","InputCustom","SelectCustom","TopicSelect","MAX","WORD_LEVELS","WORD_SPECIALTY","WORD_TYPES","PropTypes","React","useRef","useState","useForm","setMessage","yup","InformationTooltip","PhoneticInput","useStyle","CameraIcon","useTitle","useHistory","useDispatch","schema","object","shape","word","string","trim","required","lowercase","max","WORD_LEN","mean","MEAN_WORD_LEN","phonetic","PHONETIC_LEN","type","oneOf","map","i","value","level","specialty","examples","EXAMPLE_WORD_LEN","synonyms","SYNONYMS_WORD_LEN","antonyms","note","NOTE_WORD_LEN","ButtonWrapper","props","TagsWrapper","WordContribution","onSubmitForm","submitting","classes","dispatch","register","handleSubmit","formState","errors","resolver","topics","history","defaultImg","image","setImage","convertImageToBase64","reader","FileReader","readAsDataURL","Promise","resolve","onloadend","result","handleChangePicture","e","preventDefault","file","target","files","size","then","res","err","onSubmit","data","current","picture","title","avtWrap","avt","cameraIconWrap","cameraIcon","fileInput","grid","Boolean","autoFocus","maxLength","name","message","topicList","btn","btnReset","push","propTypes","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport wordApi from \"apis/wordApi\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport SelectCustom from \"components/UI/SelectCustom\";\nimport TopicSelect from \"components/UI/TopicSelect\";\nimport {\n  MAX,\n  WORD_LEVELS,\n  WORD_SPECIALTY,\n  WORD_TYPES,\n} from \"./../../../constants\";\nimport PropTypes from \"prop-types\";\nimport React, { useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport * as yup from \"yup\";\nimport InformationTooltip from \"./InformationTooltip\";\nimport PhoneticInput from \"./PhoneticInput\";\nimport useStyle from \"./style\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport useTitle from \"hooks/useTitle\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nconst schema = yup.object().shape({\n  word: yup\n    .string()\n    .trim()\n    .required(\"Hãy nhập một từ vào đây\")\n    .lowercase()\n    .max(MAX.WORD_LEN, `Từ dài tối đã ${MAX.WORD_LEN} ký tự`),\n  mean: yup\n    .string()\n    .trim()\n    .lowercase()\n    .required(\"Hãy nhập ý nghĩa từ\")\n    .max(MAX.MEAN_WORD_LEN, `Từ dài tối đã ${MAX.MEAN_WORD_LEN} ký tự`),\n  phonetic: yup\n    .string()\n    .trim()\n    .lowercase()\n    .required(\"Hãy nhập ký âm của từ\")\n    .max(MAX.PHONETIC_LEN, `Từ dài tối đã ${MAX.PHONETIC_LEN} ký tự`),\n  type: yup\n    .string()\n    .required(\"Chọn loại của từ\")\n    .oneOf(WORD_TYPES.map((i) => i.value)),\n  level: yup\n    .string()\n    .required(\"Chọn cấp bậc của từ\")\n    .oneOf(WORD_LEVELS.map((i) => i.value)),\n  specialty: yup\n    .string()\n    .required(\"Chọn cấp bậc của từ\")\n    .oneOf(WORD_SPECIALTY.map((i) => i.value)),\n  examples: yup\n    .string()\n    .max(MAX.EXAMPLE_WORD_LEN, `Ví dụ tối đa ${MAX.EXAMPLE_WORD_LEN} ký tự`),\n  synonyms: yup\n    .string()\n    .max(\n      MAX.SYNONYMS_WORD_LEN,\n      `Từ đồng nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`\n    ),\n  antonyms: yup\n    .string()\n    .max(\n      MAX.SYNONYMS_WORD_LEN,\n      `Từ trái nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`\n    ),\n  note: yup\n    .string()\n    .max(MAX.NOTE_WORD_LEN, `Ghi chú tối đa ${MAX.NOTE_WORD_LEN} ký tự`),\n});\n\n// Prevent unmount component topic select\nconst ButtonWrapper = (props) => <Grid {...props} item xs={12} md={6} lg={4} />;\nconst TagsWrapper = (props) => <Grid {...props} item xs={12} />;\n\nfunction WordContribution({ onSubmitForm, submitting }) {\n  useTitle(\"Add word\");\n\n  const classes = useStyle();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const topics = useRef([]);\n  const history = useHistory();\n  const defaultImg =\n  \"https://res.cloudinary.com/phongvn2611/image/upload/v1638368033/english/word/default-image_fbmbtn.png\";\n  const [image, setImage] = useState(defaultImg);\n\n  const convertImageToBase64 = (image) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(image);\n    return new Promise((resolve) => {\n      reader.onloadend = () => {\n        resolve(reader.result);\n      };\n    });\n  };\n\n  const handleChangePicture = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n      convertImageToBase64(file).then(res => {\n        setImage(res);\n      });\n      \n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const onSubmit = (data) => {\n    onSubmitForm({ ...data, topics: topics.current, picture: image });\n  };\n\n  return (\n    <div>\n      <h1 className={classes.title}>Thêm từ mới</h1>\n      <div className=\"dyno-break\"></div>\n\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <Grid container alignContent=\"center\">\n          <div className={classes.avtWrap}>\n            <img\n              src={image ? image : defaultImg}\n              alt=\"\"\n              className={`${classes.avt} w-100 h-100`}\n            />\n            <div className={`${classes.cameraIconWrap} flex-center`}>\n              <CameraIcon className={classes.cameraIcon} />\n              <input\n                type=\"file\"\n                className={classes.fileInput}\n                onChange={handleChangePicture}\n                accept=\"image/*\"\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid className={classes.grid} container spacing={3}>\n          {/* new word */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Từ mới (*)\"\n              error={Boolean(errors.word)}\n              inputProps={{\n                autoFocus: true,\n                maxLength: MAX.WORD_LEN,\n                name: \"word\",\n                ...register(\"word\"),\n              }}\n              // onChange={(e) => handleCheckWordExistence(e, null)}\n            />\n            {errors.word && (\n              <p className=\"text-error\">{errors.word?.message}</p>\n            )}\n          </Grid>\n\n          {/* mean */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Nghĩa của từ (*)\"\n              error={Boolean(errors.mean)}\n              inputProps={{\n                maxLength: MAX.MEAN_WORD_LEN,\n                name: \"mean\",\n                ...register(\"mean\"),\n              }}\n            />\n            {errors.mean && (\n              <p className=\"text-error\">{errors.mean?.message}</p>\n            )}\n          </Grid>\n\n          {/* phonetic */}\n          <PhoneticInput\n            errorMessage={errors.phonetic?.message}\n            error={Boolean(errors.phonetic)}\n            valuePhonetic=\"\"\n            inputProps={{\n              maxLength: MAX.PHONETIC_LEN,\n              name: \"phonetic\",\n            }}\n            register={register(\"phonetic\")}\n          />\n\n          {/* word type */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Loại từ (*)\"\n              options={WORD_TYPES}\n              error={Boolean(errors.type)}\n              index={0}\n              inputProps={{\n                name: \"type\",\n                ...register(\"type\"),\n              }}\n              // onChange={(e) => handleCheckWordExistence(null, e)}\n            />\n            {errors.type && (\n              <p className=\"text-error\">{errors.type?.message}</p>\n            )}\n          </Grid>\n\n          {/* word level */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Cấp bậc của từ (*)\"\n              options={WORD_LEVELS}\n              error={Boolean(errors.level)}\n              index={0}\n              inputProps={{ name: \"level\", ...register(\"level\") }}\n            />\n            {errors.level && (\n              <p className=\"text-error\">{errors.level?.message}</p>\n            )}\n          </Grid>\n\n          {/* word specialty */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Thuộc chuyên ngành\"\n              options={WORD_SPECIALTY}\n              error={Boolean(errors.specialty)}\n              index={0}\n              inputProps={{\n                name: \"specialty\",\n                ...register(\"specialty\"),\n              }}\n            />\n            {errors.specialty && (\n              <p className=\"text-error\">{errors.specialty?.message}</p>\n            )}\n          </Grid>\n\n          {/* examples */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Câu ví dụ\"\n              multiline\n              endAdornment={\n                <InformationTooltip title=\"Thêm các câu ví dụ cho từ trên. Đảm bảo có sự xuất hiện của từ đó trong câu. Bạn có thể thêm nhiều câu bằng cách xuống dòng.\" />\n              }\n              error={Boolean(errors.examples)}\n              inputProps={{\n                name: \"examples\",\n                ...register(\"examples\"),\n              }}\n            />\n\n            {errors.examples && (\n              <p className=\"text-error\">{errors.examples?.message}</p>\n            )}\n          </Grid>\n\n          {/* synonyms */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Các từ đồng nghĩa\"\n              multiline\n              error={Boolean(errors.synonyms)}\n              inputProps={{\n                name: \"synonyms\",\n                ...register(\"synonyms\"),\n              }}\n            />\n            {errors.synonyms && (\n              <p className=\"text-error\">{errors.synonyms?.message}</p>\n            )}\n          </Grid>\n\n          {/* antonyms */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Các từ trái nghĩa\"\n              multiline\n              error={Boolean(errors.antonyms)}\n              inputProps={{\n                name: \"antonyms\",\n                ...register(\"antonyms\"),\n              }}\n            />\n            {errors.antonyms && (\n              <p className=\"text-error\">{errors.antonyms?.message}</p>\n            )}\n          </Grid>\n\n          {/* note */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Ghi chú\"\n              multiline\n              endAdornment={\n                <InformationTooltip title=\"Nhập thêm ghi chú mà bạn muốn cho từ. Thêm nhiều dòng bằng cách xuống dòng.\" />\n              }\n              error={Boolean(errors.note)}\n              inputProps={{\n                name: \"note\",\n                ...register(\"note\"),\n              }}\n            />\n            {errors.note && (\n              <p className=\"text-error\">{errors.note?.message}</p>\n            )}\n          </Grid>\n\n          <TopicSelect\n            onChange={(topicList) => (topics.current = topicList)}\n            buttonTitle=\"Thêm chủ đề\"\n            buttonWrapper={ButtonWrapper}\n            tagsWrapper={TagsWrapper}\n          />\n        </Grid>\n\n        <div className=\"dyno-break\"></div>\n        {/* button group */}\n        <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\n          <Button\n            className={`${classes.btn} ${classes.btnReset}`}\n            color=\"secondary\"\n            endIcon={<ResetIcon />}\n            variant=\"outlined\"\n            onClick={() => history.push(\"/admin/word\")}\n          >\n            Quay lại\n          </Button>\n          <Button\n            type=\"submit\"\n            className={`${classes.btn} _btn _btn-primary`}\n            disabled={submitting}\n            endIcon={\n              submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\n            }\n            variant=\"contained\"\n          >\n            Thêm từ\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nWordContribution.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool,\n};\n\nWordContribution.defaultProps = {\n  onSubmitForm: function () {},\n  submitting: false,\n};\n\nexport default WordContribution;\n"]},"metadata":{},"sourceType":"module"}