{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\components\\\\WordUser\\\\Vocabulary\\\\SlideItem\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport Speaker from 'components/UI/Speaker';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SliceExample({\n  word,\n  example\n}) {\n  const index = example.toLowerCase().indexOf(word.toLowerCase());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: index === -1 ? example : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [example.slice(0, index), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), example.slice(index + word.length)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_c = SliceExample;\n\nfunction SlideItem({\n  mean,\n  word,\n  type,\n  phonetic,\n  example,\n  picture\n}) {\n  _s();\n\n  const classes = useStyle({\n    picture\n  });\n  useEffect(() => {\n    const item = document.getElementsByClassName(classes.root)[0];\n    item.classList.remove('ani-fade');\n    setTimeout(() => {\n      item.classList.add('ani-fade');\n    }, 0);\n    return () => {};\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.root} ani-fade`,\n    children: word && word !== '' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.picture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.content} flex-center-col`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: classes.mean,\n          children: mean\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `${classes.word} flex-center--ver`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Speaker, {\n            className: \"ml-4\",\n            text: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), Boolean(type) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.type,\n          children: [\"(\", type, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 31\n        }, this), Boolean(phonetic) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.phonetic,\n          children: [\"/\", phonetic, \"/\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), example && example !== '' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.example,\n          children: /*#__PURE__*/_jsxDEV(SliceExample, {\n            word: word,\n            example: example\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SlideItem, \"r+g8ZeNNbr3jSapkoZ7Xv27oCrg=\", false, function () {\n  return [useStyle];\n});\n\n_c2 = SlideItem;\nSlideItem.propTypes = {\n  example: PropTypes.string,\n  mean: PropTypes.string,\n  phonetic: PropTypes.string,\n  picture: PropTypes.string,\n  // showMean: PropTypes.bool,\n  type: PropTypes.string,\n  word: PropTypes.string\n};\nSliceExample.propTypes = {\n  example: PropTypes.string,\n  word: PropTypes.string\n};\nexport default SlideItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SliceExample\");\n$RefreshReg$(_c2, \"SlideItem\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/components/WordUser/Vocabulary/SlideItem/index.js"],"names":["Speaker","PropTypes","React","useEffect","useStyle","SliceExample","word","example","index","toLowerCase","indexOf","slice","length","SlideItem","mean","type","phonetic","picture","classes","item","document","getElementsByClassName","root","classList","remove","setTimeout","add","content","Boolean","propTypes","string"],"mappings":"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","sourcesContent":["import Speaker from 'components/UI/Speaker';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport useStyle from './style';\n\nfunction SliceExample({ word, example }) {\n  const index = example.toLowerCase().indexOf(word.toLowerCase());\n\n  return (\n    <>\n      {index === -1 ? (\n        example\n      ) : (\n        <>\n          {example.slice(0, index)}\n          <b>{word}</b>\n          {example.slice(index + word.length)}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction SlideItem({ mean, word, type, phonetic, example, picture}) {\n  const classes = useStyle({ picture });\n\n  useEffect(() => {\n    const item = document.getElementsByClassName(classes.root)[0];\n    item.classList.remove('ani-fade');\n    setTimeout(() => {\n      item.classList.add('ani-fade');\n    }, 0);\n    return () => {};\n  });\n\n  return (\n    <div className={`${classes.root} ani-fade`}>\n      {word && word !== '' && (\n        <>\n          <div className={classes.picture} />\n          <div className={`${classes.content} flex-center-col`}>\n           <h2 className={classes.mean}>{mean}</h2>\n            <h3 className={`${classes.word} flex-center--ver`}>\n              <span>{word}</span> <Speaker className=\"ml-4\" text={word} />\n            </h3>\n            {Boolean(type) && <p className={classes.type}>({type})</p>}\n            {Boolean(phonetic) && (\n              <p className={classes.phonetic}>/{phonetic}/</p>\n            )}\n            {example && example !== '' && (\n              <p className={classes.example}>\n                <SliceExample word={word} example={example} />\n              </p>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nSlideItem.propTypes = {\n  example: PropTypes.string,\n  mean: PropTypes.string,\n  phonetic: PropTypes.string,\n  picture: PropTypes.string,\n // showMean: PropTypes.bool,\n  type: PropTypes.string,\n  word: PropTypes.string,\n};\n\nSliceExample.propTypes = {\n  example: PropTypes.string,\n  word: PropTypes.string,\n};\n\nexport default SlideItem;\n"]},"metadata":{},"sourceType":"module"}