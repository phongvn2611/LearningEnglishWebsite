{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\pages\\\\WordAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport useTitle from \"hooks/useTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { dictionaryRoot } from \"components/UI/style\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport AutoSearchInput from \"components/UI/AutoSearchInput\";\nimport InfiniteScroll from \"components/UI/InfiniteScroll\";\nimport WordSortModal from \"components/UI/WordSortModal\";\nimport WordItem from \"components/WordAdmin/WordItem\";\nimport WordPackSetting from \"components/WordAdmin/WordPackSetting\";\nimport WordSkeleton from \"components/WordAdmin/WordSkeleton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport commonApi from \"apis/commonApi\";\nimport wordApi from \"apis/wordApi\";\nimport WordDetailModal from \"components/UI/WordDetailModal\";\nimport { equalArray } from \"helper\";\nimport { ROUTES } from 'constants/index';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(theme => ({ ...dictionaryRoot(theme)\n}));\nconst perPage = 20;\nexport default function WordAdminPage() {\n  _s();\n\n  useTitle(\"Word Admin\");\n  const classes = useStyle();\n  const history = useHistory();\n  const [page, setPage] = useState(1);\n  const [sortType, setSortType] = useState(\"rand\");\n  const [packInfo, setPackInfo] = useState(() => ({\n    type: \"-1\",\n    level: \"-1\",\n    specialty: \"-1\",\n    topics: []\n  }));\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const totalPage = useRef(0);\n  const preSearchList = useRef([]);\n\n  const nextPage = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const onSettingWordPack = info => {\n    // check old pack vs new pack\n    let isEqual = true;\n\n    for (let k in packInfo) {\n      if (k !== \"topics\" && packInfo[k] !== info[k]) {\n        isEqual = false;\n        break;\n      }\n    }\n\n    if (isEqual) isEqual = equalArray(packInfo.topics, info.topics);\n    totalPage.current = 0;\n    preSearchList.current = [];\n    setMore(true);\n    setList([]);\n    setPackInfo(info);\n    setPage(1);\n  };\n\n  const onSortTypeChange = (type = \"rand\") => {\n    if (type === sortType) return;\n    preSearchList.current = [];\n    setSortType(type);\n    setPage(1);\n    setList([]);\n  };\n\n  const onSearchWord = async word => {\n    try {\n      if (word === \"\") {\n        setList(preSearchList.current);\n        setMore(true);\n        return;\n      }\n\n      const apiRes = await wordApi.searchWord(word);\n\n      if (apiRes.status === 200) {\n        const {\n          packList = []\n        } = apiRes.data;\n        setList(packList);\n        setMore(false);\n      }\n    } catch (error) {}\n  }; // get total word pack\n\n\n  useEffect(() => {\n    let isSub = true;\n\n    (async function () {\n      try {\n        const apiRes = await commonApi.getWordPackTotal(packInfo);\n\n        if (apiRes && isSub) {\n          const {\n            total = 0\n          } = apiRes.data;\n          totalPage.current = Math.ceil(total / perPage);\n        }\n      } catch (error) {}\n    })();\n\n    return () => isSub = false;\n  }, [packInfo]); // get word pack\n\n  useEffect(() => {\n    let isSub = true;\n\n    (async function () {\n      try {\n        setLoading(true);\n        const apiRes = await wordApi.getWordList(page, perPage, packInfo, sortType);\n\n        if (apiRes && isSub) {\n          const {\n            packList = []\n          } = apiRes.data;\n          const newList = [...list, ...packList];\n          preSearchList.current = newList;\n          setList(newList);\n        }\n      } catch (error) {} finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n\n    return () => isSub = false;\n  }, [page, packInfo, sortType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.root} dyno-container`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-center-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dyno-title\",\n          children: \"Qu\\u1EA3n l\\xFD t\\u1EEB v\\u1EF1ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \"dyno-setting-icon mr-5\",\n            onClick: () => history.push(ROUTES.ADD_WORD)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WordSortModal, {\n            onSelect: onSortTypeChange,\n            classNameIcon: \"dyno-setting-icon mr-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WordPackSetting, {\n            onChoose: onSettingWordPack,\n            classNameIcon: \"dyno-setting-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dyno-break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.contentWrap,\n        children: [/*#__PURE__*/_jsxDEV(AutoSearchInput, {\n          disabled: loading,\n          onSearch: onSearchWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.listWrap} w-100`,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"dictionaryId\",\n            className: `${classes.list} flex-col w-100`,\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: isFirstLoad ? /*#__PURE__*/_jsxDEV(WordSkeleton, {\n                className: classes.skeleton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: list && list.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [list.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: classes.listItem,\n                    children: /*#__PURE__*/_jsxDEV(WordItem, { ...item\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 29\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 27\n                  }, this)), !loading && more && /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n                    onTouchAnchor: nextPage,\n                    threshold: 1,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-100 t-center\",\n                      children: /*#__PURE__*/_jsxDEV(LoopIcon, {\n                        className: \"ani-spin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) :\n                /*#__PURE__*/\n                // empty list\n                _jsxDEV(\"h3\", {\n                  className: \"notfound-title h-100 flex-center t-center\",\n                  children: \"Kh\\xF4ng t\\xECm th\\u1EA5y t\\u1EEB n\\xE0o trong t\\u1EEB \\u0111i\\u1EC3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordDetailModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WordAdminPage, \"5c/axTp3A4p/ZcxBXm4JuyDCAps=\", false, function () {\n  return [useTitle, useStyle, useHistory];\n});\n\n_c = WordAdminPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordAdminPage\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/pages/WordAdmin.js"],"names":["React","useEffect","useRef","useState","useTitle","makeStyles","dictionaryRoot","LoopIcon","AutoSearchInput","InfiniteScroll","WordSortModal","WordItem","WordPackSetting","WordSkeleton","AddIcon","commonApi","wordApi","WordDetailModal","equalArray","ROUTES","useHistory","useStyle","theme","perPage","WordAdminPage","classes","history","page","setPage","sortType","setSortType","packInfo","setPackInfo","type","level","specialty","topics","loading","setLoading","list","setList","more","setMore","isFirstLoad","setIsFirstLoad","totalPage","preSearchList","nextPage","current","onSettingWordPack","info","isEqual","k","onSortTypeChange","onSearchWord","word","apiRes","searchWord","status","packList","data","error","isSub","getWordPackTotal","total","Math","ceil","getWordList","newList","root","push","ADD_WORD","contentWrap","listWrap","skeleton","length","map","item","index","listItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport useTitle from \"hooks/useTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { dictionaryRoot } from \"components/UI/style\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport AutoSearchInput from \"components/UI/AutoSearchInput\";\nimport InfiniteScroll from \"components/UI/InfiniteScroll\";\nimport WordSortModal from \"components/UI/WordSortModal\";\nimport WordItem from \"components/WordAdmin/WordItem\";\nimport WordPackSetting from \"components/WordAdmin/WordPackSetting\";\nimport WordSkeleton from \"components/WordAdmin/WordSkeleton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport commonApi from \"apis/commonApi\";\nimport wordApi from \"apis/wordApi\";\nimport WordDetailModal from \"components/UI/WordDetailModal\";\nimport { equalArray } from \"helper\";\nimport { ROUTES } from 'constants/index';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyle = makeStyles((theme) => ({\n  ...dictionaryRoot(theme),\n}));\nconst perPage = 20;\n\nexport default function WordAdminPage() {\n  useTitle(\"Word Admin\");\n  const classes = useStyle();\n  const history = useHistory();\n  const [page, setPage] = useState(1);\n  const [sortType, setSortType] = useState(\"rand\");\n  const [packInfo, setPackInfo] = useState(() => ({\n    type: \"-1\",\n    level: \"-1\",\n    specialty: \"-1\",\n    topics: [],\n  }));\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const totalPage = useRef(0);\n  const preSearchList = useRef([]);\n\n  const nextPage = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const onSettingWordPack = (info) => {\n    // check old pack vs new pack\n    let isEqual = true;\n    for (let k in packInfo) {\n      if (k !== \"topics\" && packInfo[k] !== info[k]) {\n        isEqual = false;\n        break;\n      }\n    }\n    if (isEqual) isEqual = equalArray(packInfo.topics, info.topics);\n\n    totalPage.current = 0;\n    preSearchList.current = [];\n    setMore(true);\n    setList([]);\n    setPackInfo(info);\n    setPage(1);\n  };\n\n  const onSortTypeChange = (type = \"rand\") => {\n    if (type === sortType) return;\n    preSearchList.current = [];\n    setSortType(type);\n    setPage(1);\n    setList([]);\n  };\n\n  const onSearchWord = async (word) => {\n    try {\n      if (word === \"\") {\n        setList(preSearchList.current);\n        setMore(true);\n        return;\n      }\n\n      const apiRes = await wordApi.searchWord(word);\n      if (apiRes.status === 200) {\n        const { packList = [] } = apiRes.data;\n        setList(packList);\n        setMore(false);\n      }\n    } catch (error) {}\n  };\n\n  // get total word pack\n  useEffect(() => {\n    let isSub = true;\n\n    (async function () {\n      try {\n        const apiRes = await commonApi.getWordPackTotal(packInfo);\n        if (apiRes && isSub) {\n          const { total = 0 } = apiRes.data;\n          totalPage.current = Math.ceil(total / perPage);\n        }\n      } catch (error) {}\n    })();\n\n    return () => (isSub = false);\n  }, [packInfo]);\n\n  // get word pack\n  useEffect(() => {\n    let isSub = true;\n\n    (async function () {\n      try {\n        setLoading(true);\n        const apiRes = await wordApi.getWordList(\n          page,\n          perPage,\n          packInfo,\n          sortType\n        );\n        if (apiRes && isSub) {\n          const { packList = [] } = apiRes.data;\n          const newList = [...list, ...packList];\n          preSearchList.current = newList;\n          setList(newList);\n        }\n      } catch (error) {\n      } finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n\n    return () => (isSub = false);\n  }, [page, packInfo, sortType]);\n\n  return (\n    <div className=\"container\">\n      <div className={`${classes.root} dyno-container`}>\n        {/* title - menu */}\n        <div className=\"flex-center-between\">\n          <h1 className=\"dyno-title\">Quản lý từ vựng</h1>\n          <div>\n            <AddIcon className=\"dyno-setting-icon mr-5\" onClick={() => history.push(ROUTES.ADD_WORD)} />\n            <WordSortModal\n              onSelect={onSortTypeChange}\n              classNameIcon=\"dyno-setting-icon mr-5\"\n            />\n            <WordPackSetting\n              onChoose={onSettingWordPack}\n              classNameIcon=\"dyno-setting-icon\"\n            />\n          </div>\n        </div>\n        <div className=\"dyno-break\"></div>\n\n        {/* list content */}\n        <div className={classes.contentWrap}>\n          <AutoSearchInput disabled={loading} onSearch={onSearchWord} />\n\n          <div className={`${classes.listWrap} w-100`}>\n            <ul id=\"dictionaryId\" className={`${classes.list} flex-col w-100`}>\n              <>\n                {isFirstLoad ? (\n                  <WordSkeleton className={classes.skeleton} />\n                ) : (\n                  <>\n                    {list && list.length > 0 ? (\n                      <>\n                        {/* render list */}\n                        {list.map((item, index) => (\n                          <li className={classes.listItem} key={index}>\n                            <WordItem {...item} />\n                          </li>\n                        ))}\n\n                        {/* infinite scrolling */}\n                        {!loading && more && (\n                          <InfiniteScroll\n                            onTouchAnchor={nextPage}\n                            threshold={1}\n                          >\n                            <div className=\"w-100 t-center\">\n                              <LoopIcon className=\"ani-spin\" />\n                            </div>\n                          </InfiniteScroll>\n                        )}\n                      </>\n                    ) : (\n                      // empty list\n                      <h3 className=\"notfound-title h-100 flex-center t-center\">\n                        Không tìm thấy từ nào trong từ điển\n                      </h3>\n                    )}\n                  </>\n                )}\n              </>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <WordDetailModal />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}