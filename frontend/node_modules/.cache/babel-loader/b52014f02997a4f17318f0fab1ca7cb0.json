{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\pages\\\\Grammar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport useTitle from \"../hooks/useTitle\";\nimport { VideoCard } from \"material-ui-player\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGrammar } from \"../redux/actions/grammarAction\";\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from \"@material-ui/core\";\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from '../constants/index';\nimport incorrectIcon from 'assets/icons/checkAnswer/incorrect.gif';\nimport correctIcon from 'assets/icons/checkAnswer/correct.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(() => ({\n  borderTopic: {\n    borderStyle: \"solid\",\n    borderColor: \"initial\",\n    borderWidth: \"1px\",\n    backgroundColor: \"#ccff66\",\n    width: \"700px\",\n    height: \"auto\"\n  },\n  grammarbox: {\n    backgroundColor: \"#CF9\",\n    padding: \"10px 10px\",\n    border: \"1px solid #666\",\n    marginBottom: \"10px\"\n  },\n  picture: {\n    width: '50rem',\n    height: '30rem',\n    marginLeft: '15rem'\n  }\n}));\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nexport default function GrammarPage() {\n  _s();\n\n  useTitle(\"Grammar\");\n  const classes = useStyle();\n  const [value, setValue] = useState(0);\n  const [checkAnswer, setCheckAnswer] = useState(false);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const grammarId = useParams().id;\n  const {\n    grammar,\n    questions\n  } = useSelector(state => state.grammarReducer);\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(getGrammar(grammarId), [dispatch]));\n  const [answers, setAnswers] = useState([]);\n\n  const getText = text => {\n    let Text = [];\n\n    if (text) {\n      Text = text.split(\"\\n\");\n    }\n\n    return Text;\n  };\n\n  let imgSrc = null;\n\n  if (grammar) {\n    imgSrc = cloudinaryImgOptimize(grammar.Image ? grammar.Image : DEFAULTS.IMAGE_SRC, 200, 200, true, true);\n  }\n\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [isCorrect, setisCorrect] = useState([]);\n\n  const handleClickShowAnswer = () => {\n    setShowAnswer(true);\n  };\n\n  const handleClickReset = () => {\n    if (window.confirm('Do you want reload page again?')) {\n      window.location.reload();\n    }\n  };\n\n  const handleCheck = (index, i) => {\n    if (answers[index]) {\n      if (answers[index].includes(i)) {\n        for (var j = 0; j < answers[index].length; j++) {\n          if (answers[index][j] == i) {\n            answers[index].splice(j, 1);\n          }\n        }\n      } else {\n        answers[index].push(i);\n      }\n    } else {\n      let ar = [];\n      answers[index] = ar;\n      answers[index].push(i);\n    }\n  };\n\n  const handleClickCheckAnswer = () => {\n    if (answers.length > 0) {\n      console.log(answers);\n\n      for (var i = 0; i < answers.length; i++) {\n        if (answers[i]) {\n          console.log(i);\n          console.log(answers[i]);\n\n          if (answers[i].length > 0) {\n            if (answers[i].length > 1) {\n              isCorrect[i] = false;\n            } else {\n              if (questions[i].Answers[answers[i][0]].isCorrect == true) {\n                isCorrect[i] = true;\n              }\n\n              if (questions[i].Answers[answers[i][0]].isCorrect == false) {\n                isCorrect[i] = false;\n              }\n            }\n          } else {\n            if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n              window.close();\n            }\n          }\n        } else {\n          if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n            window.close();\n          }\n        }\n      }\n    } else {\n      if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n        window.close();\n      }\n    }\n\n    setCheckAnswer(true);\n    setShowAnswer(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          children: grammar.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: grammar.Content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true), grammar.Video ? /*#__PURE__*/_jsxDEV(\"p\", {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: grammar.Video,\n          width: \"500\",\n          height: \"300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.picture,\n        src: imgSrc,\n        alt: \"photo\",\n        align: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), grammar.Audio && /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: grammar.Audio,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this), \"Your browser does not support the audio element.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            borderBottom: 1,\n            borderColor: \"divider\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            value: value,\n            onChange: handleChange,\n            \"aria-label\": \"basic tabs example\",\n            indicatorColor: \"primary\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Script\",\n              ...a11yProps(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Grammar\",\n              ...a11yProps(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Quiz\",\n              ...a11yProps(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: value,\n          index: 0,\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            dangerouslySetInnerHTML: {\n              __html: grammar.Script\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: value,\n          index: 1,\n          children: grammar.Items && grammar.Items.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.grammarbox,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Point \", index + 1, \" :  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 18\n                }, this), item.Point]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: getText(item.Examples).map(it => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                align: \"justify\",\n                children: it\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: value,\n          index: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Answer the following questions about the interview.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), questions && questions.map((question, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [index + 1, \") \", question.Content, checkAnswer && isCorrect[index] == true && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: correctIcon,\n                  alt: \"Correct!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), checkAnswer && isCorrect[index] == false && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: incorrectIcon,\n                  alt: \"Correct!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: question.Answers.map((item, i) => showAnswer && item.isCorrect == true ? /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  color: \"primary\",\n                  id: `${item}-${i}`,\n                  onClick: () => handleCheck(index, i)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 30\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    color: '#008000'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: item.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 69\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 28\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  color: \"primary\",\n                  id: `${item}-${i}`,\n                  onClick: () => handleCheck(index, i)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 30\n                }, this),\n                label: item.content\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => handleClickCheckAnswer(),\n            children: \"Check Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => handleClickReset(),\n            children: \"Reset Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => handleClickShowAnswer(),\n            children: \"Show Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(GrammarPage, \"mL5lvHd6FSYK3TU72UeMk9RBwEk=\", false, function () {\n  return [useTitle, useStyle, useParams, useSelector, useDispatch];\n});\n\n_c2 = GrammarPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"GrammarPage\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/pages/Grammar.js"],"names":["React","useState","useEffect","PropTypes","Tabs","Tab","Typography","Box","useTitle","VideoCard","FormGroup","FormControlLabel","Checkbox","Container","Button","useDispatch","useSelector","getGrammar","useParams","makeStyles","cloudinaryImgOptimize","DEFAULTS","incorrectIcon","correctIcon","useStyle","borderTopic","borderStyle","borderColor","borderWidth","backgroundColor","width","height","grammarbox","padding","border","marginBottom","picture","marginLeft","TabPanel","props","children","value","index","other","p","propTypes","node","number","isRequired","a11yProps","id","GrammarPage","classes","setValue","checkAnswer","setCheckAnswer","showAnswer","setShowAnswer","grammarId","grammar","questions","state","grammarReducer","dispatch","answers","setAnswers","getText","text","Text","split","imgSrc","Image","IMAGE_SRC","handleChange","_event","newValue","isCorrect","setisCorrect","handleClickShowAnswer","handleClickReset","window","confirm","location","reload","handleCheck","i","includes","j","length","splice","push","ar","handleClickCheckAnswer","console","log","Answers","close","Title","Content","Video","Audio","borderBottom","__html","Script","Items","map","item","Point","Examples","it","question","color","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport useTitle from \"../hooks/useTitle\";\nimport { VideoCard } from \"material-ui-player\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {getGrammar}  from \"../redux/actions/grammarAction\";\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from \"@material-ui/core\";\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from '../constants/index';\nimport incorrectIcon from 'assets/icons/checkAnswer/incorrect.gif';\nimport correctIcon from 'assets/icons/checkAnswer/correct.gif'\n  \nconst useStyle = makeStyles(() => ({\n    borderTopic: {\n        borderStyle: \"solid\",\n        borderColor: \"initial\",\n        borderWidth: \"1px\",\n        backgroundColor: \"#ccff66\",\n        width: \"700px\",\n        height: \"auto\",\n      },\n      grammarbox: {\n        backgroundColor: \"#CF9\",\n        padding: \"10px 10px\",\n        border: \"1px solid #666\",\n        marginBottom: \"10px\",\t\n      },\n      picture: {\n        width: '50rem',\n        height: '30rem',\n        marginLeft: '15rem',\n      },\n   \n  }));\n  \n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function GrammarPage() {\n  useTitle(\"Grammar\");\n  const classes= useStyle();\n  const [value, setValue] = useState(0);\n  const [checkAnswer, setCheckAnswer] = useState(false);\n  const [showAnswer, setShowAnswer] = useState(false);\n\n\n  const grammarId = useParams().id;\n  const {grammar, questions} = useSelector((state) => state.grammarReducer);\n \n  const dispatch = useDispatch();\n  useEffect(() => \n  dispatch(getGrammar(grammarId), [dispatch]))\n\n  const [answers, setAnswers] = useState([]);\n\n  const getText = (text) =>{\n    let Text =[];\n    if(text){\n    Text = text.split(\"\\n\");\n    } \n    return Text;\n  };\n\n  let imgSrc = null;\n    if(grammar)\n    {\n        imgSrc = cloudinaryImgOptimize( grammar.Image ? grammar.Image : DEFAULTS.IMAGE_SRC,\n            200,\n            200,\n            true,\n            true\n        );\n    }\n\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n  const [isCorrect, setisCorrect] = useState([]);\n\n  const handleClickShowAnswer = () =>{\n    setShowAnswer(true)\n };\n\n const handleClickReset = () =>{\n   if (window.confirm('Do you want reload page again?')) {\n     window.location.reload();\n   }\n};\n\n const handleCheck = (index, i) => {\n   if(answers[index]){\n     if(answers[index].includes(i)){\n       for (var j = 0; j < answers[index].length; j++) {\n         if (answers[index][j] == i) {\n            answers[index].splice(j, 1);\n         }\n       }\n     }\n     else{\n       answers[index].push(i)\n     }\n   }\n   else{\n     let ar=[];\n     answers[index]=ar;\n     answers[index].push(i);\n   }\n };\n \n const handleClickCheckAnswer = ()=>{\n if(answers.length>0){\n   console.log(answers)\n     for(var i=0;i<answers.length;i++){\n       if(answers[i])\n       {\n         console.log(i)\n        console.log(answers[i])\n         if(answers[i].length>0){\n           if(answers[i].length>1) {isCorrect[i]=false;}\n           else{\n             if(questions[i].Answers[answers[i][0]].isCorrect==true) {isCorrect[i]=true;}\n             if(questions[i].Answers[answers[i][0]].isCorrect==false) {isCorrect[i]=false;}\n           }\n         }\n         else{\n           if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n             window.close();\n           }\n         }\n       }\n       else{\n        if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n          window.close();\n        }\n       }\n     }\n   }\n   else{\n       if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n         window.close();\n       }\n   }\n   setCheckAnswer(true);\n   setShowAnswer(true)\n }\n\n  return (\n    <>\n      <Container>\n        <><Typography variant=\"h6\" align=\"center\">\n            {grammar.Title}\n        </Typography>\n        <Typography>\n            {grammar.Content}\n        </Typography></>\n\n        {grammar.Video ?  (\n              <p align=\"center\"><iframe src= {grammar.Video} width=\"500\" height=\"300\"></iframe></p>             \n            ):(              \n                <img className={classes.picture} src={imgSrc} alt=\"photo\" align=\"center\" />\n        )}\n        \n        {grammar.Audio && (\n        <audio controls>\n        <source src={grammar.Audio} type=\"audio/mpeg\"/>\n        Your browser does not support the audio element.\n        </audio>\n        )}\n\n        <Box sx={{ width: \"100%\" }}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"basic tabs example\"\n              indicatorColor=\"primary\"\n            >\n              <Tab label=\"Script\" {...a11yProps(0)} />\n              <Tab label=\"Grammar\" {...a11yProps(1)} />\n              <Tab label=\"Quiz\" {...a11yProps(2)} />\n             \n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n          <td dangerouslySetInnerHTML={{__html: grammar.Script}} />\n          </TabPanel>\n\n          <TabPanel value={value} index={1}>\n          {grammar.Items && (\n              grammar.Items.map((item, index) =>\n            <>\n            <Typography className={classes.grammarbox}>\n              <p><strong>Point {index+1} :  </strong>{item.Point}</p>\n            </Typography>\n           \n            <div>\n                {getText(item.Examples).map((it) => \n                <Typography variant=\"body2\" align=\"justify\">\n                {it}\n                </Typography>\n                )}\n            </div></>\n         ))}\n          </TabPanel>\n                \n          <TabPanel value={value} index={2}>\n            <Typography variant=\"h6\">\n              Answer the following questions about the interview.\n            </Typography>\n\n\n            {questions && (\n            questions.map((question, index) => \n            <><Typography variant=\"body2\">\n               {index+1}) {question.Content}\n                { checkAnswer && isCorrect[index]==true && (\n                <span>\n                <img src={correctIcon} alt=\"Correct!\"/>\n                </span>\n                )} \n                 { checkAnswer && isCorrect[index]==false &&(\n                <span>\n                <img src={incorrectIcon} alt=\"Correct!\"/>\n                </span>\n                )} \n              </Typography>\n              <FormGroup>\n                  {question.Answers.map((item, i) => \n                  (showAnswer && item.isCorrect==true ?(\n                  <FormControlLabel\n                    key={i}\n                    control={<Checkbox color=\"primary\" id={`${item}-${i}`} onClick={()=>handleCheck(index,i)}/>}\n                    label={<Typography style={{ color: '#008000' }}><strong>{item.content}</strong></Typography>}\n                  >\n                  </FormControlLabel>\n                  ):(\n                    <FormControlLabel\n                    key={i}\n                    control={<Checkbox color=\"primary\" id={`${item}-${i}`} onClick={()=>handleCheck(index,i)}/>}\n                    label={item.content}\n                  >\n                  </FormControlLabel>\n                  )\n                  ))} \n                </FormGroup></>                        \n            )\n            )}\n           \n\n            <Button color='primary' onClick={()=> handleClickCheckAnswer()}>Check Answers</Button>\n            <Button color='primary' onClick={()=> handleClickReset()}>Reset Quiz</Button>\n            <Button color='primary' onClick={()=> handleClickShowAnswer()}>Show Answers</Button>\n          </TabPanel>\n               \n        </Box>\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}