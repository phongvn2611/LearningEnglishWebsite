{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\components\\\\UI\\\\TopicSelect\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Collapse } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Tag from 'components/UI/Tag';\nimport { TOPICS } from 'constants/topics';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TopicSelect({\n  onChange,\n  buttonTitle,\n  topicList,\n  buttonWrapper,\n  tagsWrapper\n}) {\n  _s();\n\n  const classes = useStyle();\n  const [visible, setVisible] = useState(false);\n  const topics = useRef([]);\n  const ButtonWrapper = buttonWrapper || Grid;\n  const TagsWrapper = tagsWrapper || Grid;\n\n  const handleTopicChange = (id, isActive) => {\n    if (isActive) {\n      topics.current.push(id);\n    } else {\n      topics.current = topics.current.filter(i => i !== id);\n    }\n\n    onChange(topics.current);\n  };\n\n  useEffect(() => {\n    topics.current = [];\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        endIcon: visible ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 51\n        }, this),\n        className: `${classes.button} w-100 h-100`,\n        onClick: () => setVisible(!visible),\n        children: buttonTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagsWrapper, {\n      className: visible ? '' : classes.tagsWrap,\n      children: /*#__PURE__*/_jsxDEV(Collapse, {\n        in: visible,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tags,\n          children: topicList.map((topic, index) => /*#__PURE__*/_jsxDEV(Tag, {\n            iconSrc: topic.icon,\n            title: topic.title,\n            id: topic.key,\n            onChange: handleTopicChange\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TopicSelect, \"OtEJxnnficz70dk0JAHX5K+yhL4=\", false, function () {\n  return [useStyle];\n});\n\n_c = TopicSelect;\nTopicSelect.propTypes = {\n  onChange: PropTypes.func,\n  resetFlag: PropTypes.number,\n  buttonTitle: PropTypes.string,\n  topicList: PropTypes.array,\n  buttonWrapper: PropTypes.any,\n  tagsWrapper: PropTypes.any\n};\nTopicSelect.defaultProps = {\n  onChange: () => {},\n  resetFlag: 0,\n  buttonTitle: 'Chọn chủ đề',\n  topicList: TOPICS\n};\nexport default TopicSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopicSelect\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/components/UI/TopicSelect/index.js"],"names":["Button","Collapse","Grid","ExpandLessIcon","ExpandMoreIcon","Tag","TOPICS","PropTypes","React","useEffect","useRef","useState","useStyle","TopicSelect","onChange","buttonTitle","topicList","buttonWrapper","tagsWrapper","classes","visible","setVisible","topics","ButtonWrapper","TagsWrapper","handleTopicChange","id","isActive","current","push","filter","i","button","tagsWrap","tags","map","topic","index","icon","title","key","propTypes","func","resetFlag","number","string","array","any","defaultProps"],"mappings":"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","sourcesContent":["import { Button, Collapse } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Tag from 'components/UI/Tag';\nimport { TOPICS } from 'constants/topics';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport useStyle from './style';\n\nfunction TopicSelect({\n  onChange,\n  buttonTitle,\n  topicList,\n  buttonWrapper,\n  tagsWrapper,\n}) {\n  const classes = useStyle();\n  const [visible, setVisible] = useState(false);\n  const topics = useRef([]);\n\n  const ButtonWrapper = buttonWrapper || Grid;\n  const TagsWrapper = tagsWrapper || Grid;\n\n  const handleTopicChange = (id, isActive) => {\n    if (isActive) {\n      topics.current.push(id);\n    } else {\n      topics.current = topics.current.filter((i) => i !== id);\n    }\n    onChange(topics.current);\n  };\n\n\n  useEffect(() => {\n    topics.current = [];\n  }, []);\n\n  return (\n    <>\n      <ButtonWrapper>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          endIcon={visible ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n          className={`${classes.button} w-100 h-100`}\n          onClick={() => setVisible(!visible)}>\n          {buttonTitle}\n        </Button>\n      </ButtonWrapper>\n      <TagsWrapper className={visible ? '' : classes.tagsWrap}>\n        <Collapse in={visible}>\n          <div className={classes.tags}>\n            {topicList.map((topic, index) => (\n              <Tag\n                iconSrc={topic.icon}\n                title={topic.title}\n                key={index}\n                id={topic.key}\n                onChange={handleTopicChange}\n              />\n            ))}\n          </div>\n        </Collapse>\n      </TagsWrapper>\n    </>\n  );\n}\n\nTopicSelect.propTypes = {\n  onChange: PropTypes.func,\n  resetFlag: PropTypes.number,\n  buttonTitle: PropTypes.string,\n  topicList: PropTypes.array,\n  buttonWrapper: PropTypes.any,\n  tagsWrapper: PropTypes.any,\n};\n\nTopicSelect.defaultProps = {\n  onChange: () => {},\n  resetFlag: 0,\n  buttonTitle: 'Chọn chủ đề',\n  topicList: TOPICS,\n};\n\nexport default TopicSelect;\n"]},"metadata":{},"sourceType":"module"}