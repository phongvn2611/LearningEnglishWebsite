{"ast":null,"code":"import LISTEN_CONSTANT from \"../constants/listeningConstant\";\nconst initialState = {\n  questions: [],\n  listen: [],\n  listens: [],\n  topics: [],\n  message: null,\n  isListenLoading: false\n};\n\nconst listeningReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case LISTEN_CONSTANT.SET_LISTEN_LOADING:\n      return { ...state,\n        isListenLoading: payload\n      };\n\n    case LISTEN_CONSTANT.SET_LISTEN_ERROR:\n      return { ...state,\n        message: payload,\n        isListenLoading: true\n      };\n\n    case LISTEN_CONSTANT.GET_LISTENING:\n      return { ...state,\n        listen: payload.listen,\n        questions: payload.questions\n      };\n\n    case LISTEN_CONSTANT.GET_LISTEN_BY_ID:\n      return { ...state,\n        listen: payload\n      };\n\n    case LISTEN_CONSTANT.CREATE_LISTEN:\n      return { ...state,\n        listen: payload,\n        listens: [...state.listens, payload]\n      };\n\n    case LISTEN_CONSTANT.EDIT_LISTEN:\n      const newListens = state.listens.map(listen => listen._id === payload._id ? payload : listen);\n      return { ...state,\n        listen: payload,\n        listens: newListens\n      };\n\n    case LISTEN_CONSTANT.DELETE_LISTEN:\n      return { ...state,\n        listens: state.listens.filter(listen => listen._id !== payload)\n      };\n\n    case LISTEN_CONSTANT.GET_ALL_LISTEN:\n      return { ...state,\n        listens: payload\n      };\n\n    case LISTEN_CONSTANT.GET_LISTEN_BY_TOPIC:\n      return { ...state,\n        listens: payload\n      };\n\n    case LISTEN_CONSTANT.GET_LISTEN_TOPICS:\n      return { ...state,\n        topics: payload\n      };\n\n    case LISTEN_CONSTANT.SEARCH_LISTEN:\n      return { ...state,\n        listens: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default listeningReducer;","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/redux/reducers/listeningReducer.js"],"names":["LISTEN_CONSTANT","initialState","questions","listen","listens","topics","message","isListenLoading","listeningReducer","state","action","type","payload","SET_LISTEN_LOADING","SET_LISTEN_ERROR","GET_LISTENING","GET_LISTEN_BY_ID","CREATE_LISTEN","EDIT_LISTEN","newListens","map","_id","DELETE_LISTEN","filter","GET_ALL_LISTEN","GET_LISTEN_BY_TOPIC","GET_LISTEN_TOPICS","SEARCH_LISTEN"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,gCAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,OAAO,EAAC,EAHW;AAInBC,EAAAA,MAAM,EAAC,EAJY;AAKnBC,EAAAA,OAAO,EAAE,IALU;AAMnBC,EAAAA,eAAe,EAAE;AANE,CAArB;;AAQA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACzD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKX,eAAe,CAACa,kBAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,eAAe,EAAEK;AAFZ,OAAP;;AAIF,SAAKZ,eAAe,CAACc,gBAArB;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,OAAO,EAAEM,OAFJ;AAGLL,QAAAA,eAAe,EAAE;AAHZ,OAAP;;AAMF,SAAKP,eAAe,CAACe,aAArB;AACE,aAAO,EACL,GAAGN,KADE;AAELN,QAAAA,MAAM,EAAES,OAAO,CAACT,MAFX;AAGLD,QAAAA,SAAS,EAAEU,OAAO,CAACV;AAHd,OAAP;;AAKA,SAAKF,eAAe,CAACgB,gBAArB;AACE,aAAO,EACL,GAAGP,KADE;AAELN,QAAAA,MAAM,EAAES;AAFH,OAAP;;AAIF,SAAKZ,eAAe,CAACiB,aAArB;AACI,aAAO,EACL,GAAGR,KADE;AAELN,QAAAA,MAAM,EAAES,OAFH;AAGLR,QAAAA,OAAO,EAAE,CAAC,GAAGK,KAAK,CAACL,OAAV,EAAmBQ,OAAnB;AAHJ,OAAP;;AAKJ,SAAKZ,eAAe,CAACkB,WAArB;AACI,YAAMC,UAAU,GAAGV,KAAK,CAACL,OAAN,CAAcgB,GAAd,CAAmBjB,MAAD,IAC/BA,MAAM,CAACkB,GAAP,KAAeT,OAAO,CAACS,GAAvB,GAA6BT,OAA7B,GAAuCT,MAD1B,CAAnB;AAGA,aAAO,EACH,GAAGM,KADA;AAEHN,QAAAA,MAAM,EAAES,OAFL;AAGHR,QAAAA,OAAO,EAAEe;AAHN,OAAP;;AAKJ,SAAKnB,eAAe,CAACsB,aAArB;AACI,aAAO,EACH,GAAGb,KADA;AAEHL,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,CAAcmB,MAAd,CACRpB,MAAD,IAAYA,MAAM,CAACkB,GAAP,KAAeT,OADlB;AAFN,OAAP;;AAMJ,SAAKZ,eAAe,CAACwB,cAArB;AACI,aAAO,EACH,GAAGf,KADA;AAEHL,QAAAA,OAAO,EAAEQ;AAFN,OAAP;;AAIJ,SAAKZ,eAAe,CAACyB,mBAArB;AACI,aAAO,EACH,GAAGhB,KADA;AAEHL,QAAAA,OAAO,EAAEQ;AAFN,OAAP;;AAIJ,SAAKZ,eAAe,CAAC0B,iBAArB;AACI,aAAO,EACH,GAAGjB,KADA;AAEHJ,QAAAA,MAAM,EAAEO;AAFL,OAAP;;AAIJ,SAAKZ,eAAe,CAAC2B,aAArB;AACI,aAAO,EACH,GAAGlB,KADA;AAEHL,QAAAA,OAAO,EAAEQ;AAFN,OAAP;;AAIJ;AACE,aAAOH,KAAP;AAnEN;AAqEC,CAvEH;;AAyEE,eAAeD,gBAAf","sourcesContent":["import LISTEN_CONSTANT from \"../constants/listeningConstant\";\n\nconst initialState = {\n  questions: [],\n  listen: [],\n  listens:[],\n  topics:[],\n  message: null,\n  isListenLoading: false,\n}\nconst listeningReducer = (state = initialState, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case LISTEN_CONSTANT.SET_LISTEN_LOADING:\n      return {\n        ...state,\n        isListenLoading: payload,\n      }\n    case LISTEN_CONSTANT.SET_LISTEN_ERROR:\n      return {\n        ...state,\n        message: payload,\n        isListenLoading: true,\n      }\n\n    case LISTEN_CONSTANT.GET_LISTENING: \n      return {\n        ...state,\n        listen: payload.listen,\n        questions: payload.questions,\n      }\n      case LISTEN_CONSTANT.GET_LISTEN_BY_ID:\n        return {\n          ...state,\n          listen: payload,\n        }\n      case LISTEN_CONSTANT.CREATE_LISTEN:\n          return {\n            ...state,\n            listen: payload,\n            listens: [...state.listens, payload],\n          }\n      case LISTEN_CONSTANT.EDIT_LISTEN:\n          const newListens = state.listens.map((listen) =>\n                listen._id === payload._id ? payload : listen\n          )\n          return {\n              ...state,\n              listen: payload,\n              listens: newListens,\n          }\n      case LISTEN_CONSTANT.DELETE_LISTEN:\n          return {\n              ...state,\n              listens: state.listens.filter(\n              (listen) => listen._id !== payload\n              ),\n          }\n      case LISTEN_CONSTANT.GET_ALL_LISTEN:\n          return {\n              ...state,\n              listens: payload,\n          }\n      case LISTEN_CONSTANT.GET_LISTEN_BY_TOPIC:\n          return {\n              ...state,\n              listens: payload,\n          }\n      case LISTEN_CONSTANT.GET_LISTEN_TOPICS:\n          return {\n              ...state,\n              topics: payload,\n          }\n      case LISTEN_CONSTANT.SEARCH_LISTEN:\n          return {\n              ...state,\n              listens: payload,\n          }       \n      default:\n        return state\n    }\n  }\n  \n  export default listeningReducer\n  "]},"metadata":{},"sourceType":"module"}