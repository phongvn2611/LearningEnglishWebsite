{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\pages\\\\QuizDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport quizApi from \"apis/quizApi\";\nimport questionApi from \"apis/questionApi\";\nimport { dictionaryRoot } from \"../components/UI/style\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport useTitle from 'hooks/useTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(theme => ({ ...dictionaryRoot(theme)\n}));\nexport default function QuizDetailPage() {\n  _s();\n\n  useTitle('Quiz detail');\n  const classes = useStyle();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const [quiz, setQuiz] = useState(null);\n  const [quizID, settQuizID] = useState(null);\n  const [questions, setQuestions] = useState(null);\n  useEffect(() => {\n    (async function () {\n      const apiRes = await quizApi.getQuizByListen(id);\n      setQuiz(apiRes.data);\n      settQuizID(apiRes.data ? apiRes.data._id : null);\n    })();\n\n    return () => {};\n  }, [id]);\n  useEffect(() => {\n    (async function () {\n      if (quizID === null) {\n        return;\n      }\n\n      const apiRes = await questionApi.getQuestionByQuiz(quizID);\n      setQuestions(apiRes.data.questions);\n    })();\n\n    return () => {};\n  }, [quizID]);\n\n  const handleAddQuiz = async () => {\n    try {\n      const apiRes = await quizApi.postQuizByListen(id);\n\n      if (apiRes) {\n        dispatch(setMessage(\"Create quiz successfully\", \"success\"));\n        window.location.reload();\n      }\n    } catch (error) {\n      dispatch(setMessage(error.response.data.message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.root} dyno-container`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-center-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dyno-title\",\n        children: \"Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), quiz && /*#__PURE__*/_jsxDEV(AddIcon, {\n        className: \"dyno-setting-icon mr-5\",\n        onClick: () => history.push(`/admin/quiz/add/${id}/${quizID}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dyno-break\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), quiz ? questions ? questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: question.Content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this), question.Answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: \"mb-2\",\n          children: answer.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), answer.isCorrect && /*#__PURE__*/_jsxDEV(CheckIcon, {\n          className: \"ml-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 40\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mt-5\",\n      variant: \"h5\",\n      children: \"Ch\\u01B0a c\\xF3 c\\xE2u h\\u1ECFi n\\xE0o trong quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: \"mt-5 mb-5\",\n        variant: \"h5\",\n        children: \"B\\xE0i nghe ch\\u01B0a c\\xF3 quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"_btn _btn-primary\",\n        onClick: handleAddQuiz,\n        children: \"Th\\xEAm quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizDetailPage, \"d70+sHYiS3FjQHZHcDGj+UdYB9A=\", false, function () {\n  return [useTitle, useStyle, useHistory, useDispatch, useParams];\n});\n\n_c = QuizDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizDetailPage\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/pages/QuizDetail.js"],"names":["React","useParams","useState","useEffect","quizApi","questionApi","dictionaryRoot","makeStyles","useHistory","AddIcon","Button","Typography","useDispatch","setMessage","CheckIcon","useTitle","useStyle","theme","QuizDetailPage","classes","history","dispatch","id","quiz","setQuiz","quizID","settQuizID","questions","setQuestions","apiRes","getQuizByListen","data","_id","getQuestionByQuiz","handleAddQuiz","postQuizByListen","window","location","reload","error","response","message","root","push","map","question","index","Content","Answers","answer","content","isCorrect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport quizApi from \"apis/quizApi\";\nimport questionApi from \"apis/questionApi\";\nimport { dictionaryRoot } from \"../components/UI/style\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport useTitle from 'hooks/useTitle';\n\nconst useStyle = makeStyles((theme) => ({\n  ...dictionaryRoot(theme),\n}));\n\nexport default function QuizDetailPage() {\n  useTitle('Quiz detail');\n  const classes = useStyle();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const [quiz, setQuiz] = useState(null);\n  const [quizID, settQuizID] = useState(null);\n  const [questions, setQuestions] = useState(null);\n  useEffect(() => {\n    (async function () {\n      const apiRes = await quizApi.getQuizByListen(id);\n      setQuiz(apiRes.data);\n      settQuizID(apiRes.data ? apiRes.data._id : null);\n    })();\n    return () => {};\n  }, [id]);\n\n  useEffect(() => {\n    (async function () {\n      if (quizID === null) {\n        return;\n      }\n      const apiRes = await questionApi.getQuestionByQuiz(quizID);\n      setQuestions(apiRes.data.questions);\n    })();\n    return () => {};\n  }, [quizID]);\n\n  const handleAddQuiz = async () => {\n    try {\n      const apiRes = await quizApi.postQuizByListen(id);\n      if (apiRes) {\n        dispatch(setMessage(\"Create quiz successfully\", \"success\"));\n        window.location.reload();\n      }\n    } catch (error) {\n      dispatch(setMessage(error.response.data.message));\n    }\n  };\n  return (\n    <div className={`${classes.root} dyno-container`}>\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">Quiz</h1>\n        {quiz && (\n          <AddIcon\n            className=\"dyno-setting-icon mr-5\"\n            onClick={() => history.push(`/admin/quiz/add/${id}/${quizID}`)}\n          />\n        )}\n      </div>\n      <div className=\"dyno-break\"></div>\n      {quiz ? (\n        questions ? (\n          questions.map((question, index) => (\n            <div key={index} className=\"mb-6\">\n              <Typography variant=\"h5\">{question.Content}</Typography>\n              {question.Answers.map((answer, index) => (\n                <div key={index} className=\"d-flex\">\n                <Typography variant=\"body2\" className=\"mb-2\">\n                  {answer.content}\n                  </Typography>\n                  {answer.isCorrect && <CheckIcon className=\"ml-3\" />}\n                </div>\n              ))}\n            </div>\n          ))\n        ) : (\n          <Typography className=\"mt-5\" variant=\"h5\">\n            Chưa có câu hỏi nào trong quiz\n          </Typography>\n        )\n      ) : (\n        <div>\n          <Typography className=\"mt-5 mb-5\" variant=\"h5\">\n            Bài nghe chưa có quiz\n          </Typography>\n          <Button className=\"_btn _btn-primary\" onClick={handleAddQuiz}>\n            Thêm quiz\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}