{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\components\\\\UI\\\\SelectCustom\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SelectCustom(props) {\n  _s();\n\n  var _options$index;\n\n  const {\n    label,\n    options,\n    className,\n    error,\n    resetFlag,\n    index,\n    onChange,\n    ...selectProps\n  } = props;\n  const [value, setValue] = useState((_options$index = options[index]) === null || _options$index === void 0 ? void 0 : _options$index.value);\n  const classes = useStyle();\n  useEffect(() => {\n    var _options$;\n\n    if (!resetFlag) return; // reset value if parent component reset, except first render\n\n    setValue((_options$ = options[0]) === null || _options$ === void 0 ? void 0 : _options$.value);\n  }, [resetFlag]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      className: `${classes.root} ${className}`,\n      variant: \"filled\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        classes: {\n          root: classes.label,\n          focused: classes.labelFocus\n        },\n        id: label,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        classes: {\n          root: classes.selectRoot,\n          icon: classes.selectIcon\n        },\n        MenuProps: {\n          classes: {\n            paper: classes.selectMenu\n          }\n        },\n        disableUnderline: true,\n        error: error,\n        labelId: label,\n        label: label,\n        value: value,\n        onChange: e => {\n          setValue(e.target.value);\n          onChange(e);\n        },\n        ...selectProps,\n        children: options && options.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SelectCustom, \"jmMWaVa39S5/To65Q06QGmsEtMQ=\", false, function () {\n  return [useStyle];\n});\n\n_c = SelectCustom;\nSelectCustom.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.array,\n  error: PropTypes.bool,\n  resetFlag: PropTypes.number,\n  onChange: PropTypes.func\n};\nSelectCustom.defaultProps = {\n  className: '',\n  label: 'Label',\n  options: [],\n  error: false,\n  resetFlag: 0,\n  onChange: function () {}\n};\nexport default SelectCustom;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCustom\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/components/UI/SelectCustom/index.js"],"names":["FormControl","InputLabel","MenuItem","Select","PropTypes","React","useEffect","useState","useStyle","SelectCustom","props","label","options","className","error","resetFlag","index","onChange","selectProps","value","setValue","classes","root","focused","labelFocus","selectRoot","icon","selectIcon","paper","selectMenu","e","target","map","option","propTypes","string","array","bool","number","func","defaultProps"],"mappings":"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","sourcesContent":["import FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport useStyle from './style';\n\nfunction SelectCustom(props) {\n  const {\n    label,\n    options,\n    className,\n    error,\n    resetFlag,\n    index,\n    onChange,\n    ...selectProps\n  } = props;\n  const [value, setValue] = useState(options[index]?.value);\n  const classes = useStyle();\n\n  useEffect(() => {\n    if (!resetFlag) return;\n    // reset value if parent component reset, except first render\n    setValue(options[0]?.value);\n  }, [resetFlag]);\n\n  return (\n    <>\n      <FormControl className={`${classes.root} ${className}`} variant=\"filled\">\n        <InputLabel\n          classes={{ root: classes.label, focused: classes.labelFocus }}\n          id={label}>\n          {label}\n        </InputLabel>\n        <Select\n          classes={{\n            root: classes.selectRoot,\n            icon: classes.selectIcon,\n          }}\n          MenuProps={{ classes: { paper: classes.selectMenu } }}\n          disableUnderline\n          error={error}\n          labelId={label}\n          label={label}\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n            onChange(e);\n          }}\n          {...selectProps}>\n          {options &&\n            options.map((option, index) => (\n              <MenuItem key={index} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n\nSelectCustom.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.array,\n  error: PropTypes.bool,\n  resetFlag: PropTypes.number,\n  onChange: PropTypes.func,\n};\n\nSelectCustom.defaultProps = {\n  className: '',\n  label: 'Label',\n  options: [],\n  error: false,\n  resetFlag: 0,\n  onChange: function () {},\n};\n\nexport default SelectCustom;\n"]},"metadata":{},"sourceType":"module"}