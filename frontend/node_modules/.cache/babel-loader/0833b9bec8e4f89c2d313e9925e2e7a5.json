{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\components\\\\WordAdmin\\\\EditWord\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport wordApi from \"apis/wordApi\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport SelectCustom from \"components/UI/SelectCustom\";\nimport TopicSelect from \"components/UI/TopicSelect\";\nimport { MAX, WORD_LEVELS, WORD_SPECIALTY, WORD_TYPES } from \"constants/index\";\nimport PropTypes from \"prop-types\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport * as yup from \"yup\";\nimport InformationTooltip from \"./../AddWord/InformationTooltip\";\nimport PhoneticInput from \"./../AddWord/PhoneticInput\";\nimport useStyle from \"./style\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport { convertImageToBase64 } from \"helper/index\";\nimport useTitle from 'hooks/useTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  word: yup.string().trim().required(\"Hãy nhập một từ vào đây\").lowercase().max(MAX.WORD_LEN, `Từ dài tối đã ${MAX.WORD_LEN} ký tự`),\n  mean: yup.string().trim().lowercase().required(\"Hãy nhập ý nghĩa từ\").max(MAX.MEAN_WORD_LEN, `Từ dài tối đã ${MAX.MEAN_WORD_LEN} ký tự`),\n  phonetic: yup.string().trim().lowercase().required(\"Hãy nhập ký âm của từ\").max(MAX.PHONETIC_LEN, `Từ dài tối đã ${MAX.PHONETIC_LEN} ký tự`),\n  type: yup.string().required(\"Chọn loại của từ\").oneOf(WORD_TYPES.map(i => i.value)),\n  level: yup.string().required(\"Chọn cấp bậc của từ\").oneOf(WORD_LEVELS.map(i => i.value)),\n  specialty: yup.string().required(\"Chọn cấp bậc của từ\").oneOf(WORD_SPECIALTY.map(i => i.value)),\n  examples: yup.string().max(MAX.EXAMPLE_WORD_LEN, `Ví dụ tối đa ${MAX.EXAMPLE_WORD_LEN} ký tự`),\n  synonyms: yup.string().max(MAX.SYNONYMS_WORD_LEN, `Từ đồng nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`),\n  antonyms: yup.string().max(MAX.SYNONYMS_WORD_LEN, `Từ trái nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`),\n  note: yup.string().max(MAX.NOTE_WORD_LEN, `Ghi chú tối đa ${MAX.NOTE_WORD_LEN} ký tự`)\n});\n\nconst analysisExample = (exampleStr = \"\", word = \"\") => {\n  if (typeof exampleStr !== \"string\" || exampleStr === \"\") {\n    return [];\n  }\n\n  const exampleArr = exampleStr.split(\"\\n\");\n\n  for (let str of exampleArr) {\n    if (str.toLocaleLowerCase().indexOf(word.toLocaleLowerCase()) === -1) {\n      return false;\n    }\n  }\n\n  return exampleArr;\n};\n\nconst getTypeCurrent = (type = \"\", options = []) => {\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].value === type) {\n      return i;\n    }\n  }\n\n  return 0;\n}; // Prevent unmount component topic select\n\n\nconst ButtonWrapper = props => /*#__PURE__*/_jsxDEV(Grid, { ...props,\n  item: true,\n  xs: 12,\n  md: 6,\n  lg: 4\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 108,\n  columnNumber: 34\n}, this);\n\n_c = ButtonWrapper;\n\nconst TagsWrapper = props => /*#__PURE__*/_jsxDEV(Grid, { ...props,\n  item: true,\n  xs: 12\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 109,\n  columnNumber: 32\n}, this);\n\n_c2 = TagsWrapper;\n\nfunction EditWord() {\n  _s();\n\n  var _errors$mean, _errors$phonetic, _errors$type, _errors$level, _errors$specialty, _errors$examples, _errors$synonyms, _errors$antonyms, _errors$note;\n\n  useTitle('Edit word');\n  const classes = useStyle();\n  const [submitting, setSubmitting] = useState(false);\n  const defaultImg = \"https://res.cloudinary.com/phongvn2611/image/upload/v1638368033/english/word/default-image_fbmbtn.png\";\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const [phonetic, setPhonetic] = useState('');\n  const [wordValue, setWordValue] = useState(null);\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    (async function () {\n      const apiRes = await wordApi.getWord(id);\n      apiRes.data.examples = apiRes.data.examples.join('\\n');\n      apiRes.data.synonyms = apiRes.data.synonyms.join('\\n');\n      apiRes.data.antonyms = apiRes.data.antonyms.join('\\n');\n      setWordValue(apiRes.data);\n      setPhonetic(apiRes.data.phonetic);\n      setImage(apiRes.data.picture);\n    })();\n\n    return () => {};\n  }, [id]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setWordValue({ ...wordValue,\n      [name]: value\n    });\n  };\n\n  const handleChangePicture = e => {\n    e.preventDefault();\n\n    try {\n      const file = e.target.files[0];\n\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n\n      convertImageToBase64(file).then(res => {\n        setImage(res);\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const topics = useRef([]);\n\n  const onSubmit = async e => {\n    try {\n      setSubmitting(true);\n      const {\n        examples,\n        synonyms,\n        antonyms,\n        word,\n        ...rest\n      } = wordValue; // check examples validation\n\n      const exampleArr = analysisExample(examples, word);\n\n      if (typeof exampleArr === \"boolean\" && !exampleArr) {\n        dispatch(setMessage(\"Câu ví dụ phải chứa từ vựng mới.\", \"warning\"));\n        setSubmitting(false);\n        return;\n      } // split synonyms string to an array synonyms\n\n\n      const synonymArr = synonyms !== \"\" ? synonyms.split(\"\\n\") : []; // split antonyms string to an array synonyms\n\n      const antonymArr = antonyms !== \"\" ? antonyms.split(\"\\n\") : []; // call API\n\n      const dataSend = { ...rest,\n        examples: exampleArr,\n        synonyms: synonymArr,\n        antonyms: antonymArr,\n        topics: topics.current,\n        picture: image,\n        phonetic: phonetic.replaceAll(\"/\", \"\")\n      };\n      const apiRes = await wordApi.putWord(id, dataSend);\n\n      if (apiRes) {\n        dispatch(setMessage(\"Update word successfully\", \"success\"));\n        setSubmitting(false);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error, can not update word.\";\n      dispatch(setMessage(message, \"error\"));\n      setSubmitting(false);\n    }\n  };\n\n  function handleClickGoBack() {\n    history.push(\"/admin/word\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: \"S\\u1EEDa t\\u1EEB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dyno-break\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), wordValue && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.avtWrap,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image ? image : defaultImg,\n            alt: \"\",\n            className: `${classes.avt} w-100 h-100`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.cameraIconWrap} flex-center`,\n            children: [/*#__PURE__*/_jsxDEV(CameraIcon, {\n              className: classes.cameraIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: classes.fileInput,\n              onChange: handleChangePicture,\n              accept: \"image/*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.grid,\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"Word\",\n            value: wordValue.word //  onChange={handleChange}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"Meaning\",\n            value: wordValue.mean,\n            error: Boolean(errors.mean),\n            inputProps: {\n              maxLength: MAX.MEAN_WORD_LEN,\n              name: \"mean\",\n              ...register(\"mean\")\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), errors.mean && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$mean = errors.mean) === null || _errors$mean === void 0 ? void 0 : _errors$mean.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PhoneticInput, {\n          errorMessage: (_errors$phonetic = errors.phonetic) === null || _errors$phonetic === void 0 ? void 0 : _errors$phonetic.message,\n          error: Boolean(errors.phonetic),\n          value: wordValue.phonetic,\n          inputProps: {\n            maxLength: MAX.MEAN_WORD_LEN,\n            name: \"phonetic\"\n          },\n          register: register(\"phonetic\"),\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(SelectCustom, {\n            className: \"w-100\",\n            label: \"Type (*)\",\n            options: WORD_TYPES,\n            error: Boolean(errors.type),\n            index: getTypeCurrent(wordValue.type, WORD_TYPES),\n            inputProps: {\n              name: \"type\",\n              ...register(\"type\")\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), errors.type && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$type = errors.type) === null || _errors$type === void 0 ? void 0 : _errors$type.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(SelectCustom, {\n            className: \"w-100\",\n            label: \"C\\u1EA5p b\\u1EADc c\\u1EE7a t\\u1EEB (*)\",\n            options: WORD_LEVELS,\n            error: Boolean(errors.level),\n            index: getTypeCurrent(wordValue.level, WORD_LEVELS),\n            inputProps: {\n              name: \"level\",\n              ...register(\"level\")\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), errors.level && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$level = errors.level) === null || _errors$level === void 0 ? void 0 : _errors$level.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(SelectCustom, {\n            className: \"w-100\",\n            label: \"Thu\\u1ED9c chuy\\xEAn ng\\xE0nh\",\n            options: WORD_SPECIALTY,\n            error: Boolean(errors.specialty),\n            index: getTypeCurrent(wordValue.specialty, WORD_SPECIALTY),\n            inputProps: {\n              name: \"specialty\",\n              ...register(\"specialty\")\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), errors.specialty && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$specialty = errors.specialty) === null || _errors$specialty === void 0 ? void 0 : _errors$specialty.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"C\\xE2u v\\xED d\\u1EE5\",\n            value: wordValue.examples,\n            multiline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InformationTooltip, {\n              title: \"Th\\xEAm c\\xE1c c\\xE2u v\\xED d\\u1EE5 cho t\\u1EEB tr\\xEAn. \\u0110\\u1EA3m b\\u1EA3o c\\xF3 s\\u1EF1 xu\\u1EA5t hi\\u1EC7n c\\u1EE7a t\\u1EEB \\u0111\\xF3 trong c\\xE2u. B\\u1EA1n c\\xF3 th\\u1EC3 th\\xEAm nhi\\u1EC1u c\\xE2u b\\u1EB1ng c\\xE1ch xu\\u1ED1ng d\\xF2ng.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this),\n            error: Boolean(errors.examples),\n            inputProps: {\n              name: \"examples\",\n              ...register(\"examples\")\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), errors.examples && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$examples = errors.examples) === null || _errors$examples === void 0 ? void 0 : _errors$examples.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"C\\xE1c t\\u1EEB \\u0111\\u1ED3ng ngh\\u0129a\",\n            multiline: true,\n            value: wordValue.synonyms,\n            error: Boolean(errors.synonyms),\n            inputProps: {\n              name: \"synonyms\",\n              ...register(\"synonyms\")\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), errors.synonyms && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$synonyms = errors.synonyms) === null || _errors$synonyms === void 0 ? void 0 : _errors$synonyms.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"C\\xE1c t\\u1EEB tr\\xE1i ngh\\u0129a\",\n            multiline: true,\n            value: wordValue.antonyms,\n            error: Boolean(errors.antonyms),\n            inputProps: {\n              name: \"antonyms\",\n              ...register(\"antonyms\")\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), errors.antonyms && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$antonyms = errors.antonyms) === null || _errors$antonyms === void 0 ? void 0 : _errors$antonyms.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"Ghi ch\\xFA\",\n            multiline: true,\n            value: wordValue.note,\n            endAdornment: /*#__PURE__*/_jsxDEV(InformationTooltip, {\n              title: \"Nh\\u1EADp th\\xEAm ghi ch\\xFA m\\xE0 b\\u1EA1n mu\\u1ED1n cho t\\u1EEB. Th\\xEAm nhi\\u1EC1u d\\xF2ng b\\u1EB1ng c\\xE1ch xu\\u1ED1ng d\\xF2ng.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this),\n            error: Boolean(errors.note),\n            inputProps: {\n              name: \"note\",\n              ...register(\"note\")\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), errors.note && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$note = errors.note) === null || _errors$note === void 0 ? void 0 : _errors$note.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TopicSelect, {\n          onChange: topicList => topics.current = topicList,\n          buttonTitle: \"Ch\\u1ECDn ch\\u1EE7 \\u0111\\u1EC1\",\n          buttonWrapper: ButtonWrapper,\n          tagsWrapper: TagsWrapper\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dyno-break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-end jus-content-end pt-5 w-100\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: `${classes.btn} ${classes.btnReset}`,\n          color: \"secondary\",\n          endIcon: /*#__PURE__*/_jsxDEV(ResetIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 24\n          }, this),\n          variant: \"outlined\" // disabled={}\n          ,\n          onClick: () => handleClickGoBack(),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: `${classes.btn} _btn _btn-primary`,\n          disabled: submitting,\n          endIcon: submitting ? /*#__PURE__*/_jsxDEV(LoopIcon, {\n            className: \"ani-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 66\n          }, this),\n          variant: \"contained\",\n          onClick: () => onSubmit(),\n          children: \"S\\u1EEDa t\\u1EEB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditWord, \"Gtblhyi7YGzeaHTvcT1Tf3hCEdg=\", false, function () {\n  return [useTitle, useStyle, useHistory, useForm, useDispatch, useParams];\n});\n\n_c3 = EditWord;\nEditWord.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool\n};\nEditWord.defaultProps = {\n  onSubmitForm: function () {},\n  submitting: false\n};\nexport default EditWord;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"TagsWrapper\");\n$RefreshReg$(_c3, \"EditWord\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/components/WordAdmin/EditWord/index.js"],"names":["yupResolver","Button","Grid","LoopIcon","ResetIcon","SaveIcon","wordApi","InputCustom","SelectCustom","TopicSelect","MAX","WORD_LEVELS","WORD_SPECIALTY","WORD_TYPES","PropTypes","React","useRef","useState","useEffect","useForm","useDispatch","setMessage","yup","InformationTooltip","PhoneticInput","useStyle","useParams","useHistory","CameraIcon","convertImageToBase64","useTitle","schema","object","shape","word","string","trim","required","lowercase","max","WORD_LEN","mean","MEAN_WORD_LEN","phonetic","PHONETIC_LEN","type","oneOf","map","i","value","level","specialty","examples","EXAMPLE_WORD_LEN","synonyms","SYNONYMS_WORD_LEN","antonyms","note","NOTE_WORD_LEN","analysisExample","exampleStr","exampleArr","split","str","toLocaleLowerCase","indexOf","getTypeCurrent","options","length","ButtonWrapper","props","TagsWrapper","EditWord","classes","submitting","setSubmitting","defaultImg","history","register","handleSubmit","formState","errors","resolver","dispatch","id","setPhonetic","wordValue","setWordValue","image","setImage","apiRes","getWord","data","join","picture","handleChange","e","name","target","handleChangePicture","preventDefault","file","files","size","then","res","err","topics","onSubmit","rest","synonymArr","antonymArr","dataSend","current","replaceAll","putWord","error","message","response","handleClickGoBack","push","root","title","avtWrap","avt","cameraIconWrap","cameraIcon","fileInput","grid","Boolean","maxLength","topicList","btn","btnReset","propTypes","onSubmitForm","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport wordApi from \"apis/wordApi\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport SelectCustom from \"components/UI/SelectCustom\";\nimport TopicSelect from \"components/UI/TopicSelect\";\nimport {\n  MAX,\n  WORD_LEVELS,\n  WORD_SPECIALTY,\n  WORD_TYPES,\n} from \"constants/index\";\nimport PropTypes from \"prop-types\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport * as yup from \"yup\";\nimport InformationTooltip from \"./../AddWord/InformationTooltip\";\nimport PhoneticInput from \"./../AddWord/PhoneticInput\";\nimport useStyle from \"./style\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport { convertImageToBase64 } from \"helper/index\";\nimport useTitle from 'hooks/useTitle';\n\nconst schema = yup.object().shape({\n  word: yup\n    .string()\n    .trim()\n    .required(\"Hãy nhập một từ vào đây\")\n    .lowercase()\n    .max(MAX.WORD_LEN, `Từ dài tối đã ${MAX.WORD_LEN} ký tự`),\n  mean: yup\n    .string()\n    .trim()\n    .lowercase()\n    .required(\"Hãy nhập ý nghĩa từ\")\n    .max(MAX.MEAN_WORD_LEN, `Từ dài tối đã ${MAX.MEAN_WORD_LEN} ký tự`),\n  phonetic: yup\n    .string()\n    .trim()\n    .lowercase()\n    .required(\"Hãy nhập ký âm của từ\")\n    .max(MAX.PHONETIC_LEN, `Từ dài tối đã ${MAX.PHONETIC_LEN} ký tự`),\n  type: yup\n    .string()\n    .required(\"Chọn loại của từ\")\n    .oneOf(WORD_TYPES.map((i) => i.value)),\n  level: yup\n    .string()\n    .required(\"Chọn cấp bậc của từ\")\n    .oneOf(WORD_LEVELS.map((i) => i.value)),\n  specialty: yup\n    .string()\n    .required(\"Chọn cấp bậc của từ\")\n    .oneOf(WORD_SPECIALTY.map((i) => i.value)),\n  examples: yup\n    .string()\n    .max(MAX.EXAMPLE_WORD_LEN, `Ví dụ tối đa ${MAX.EXAMPLE_WORD_LEN} ký tự`),\n  synonyms: yup\n    .string()\n    .max(\n      MAX.SYNONYMS_WORD_LEN,\n      `Từ đồng nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`\n    ),\n  antonyms: yup\n    .string()\n    .max(\n      MAX.SYNONYMS_WORD_LEN,\n      `Từ trái nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`\n    ),\n  note: yup\n    .string()\n    .max(MAX.NOTE_WORD_LEN, `Ghi chú tối đa ${MAX.NOTE_WORD_LEN} ký tự`),\n});\n\nconst analysisExample = (exampleStr = \"\", word = \"\") => {\n  if (typeof exampleStr !== \"string\" || exampleStr === \"\") {\n    return [];\n  }\n\n  const exampleArr = exampleStr.split(\"\\n\");\n  for (let str of exampleArr) {\n    if (str.toLocaleLowerCase().indexOf(word.toLocaleLowerCase()) === -1) {\n      return false;\n    }\n  }\n\n  return exampleArr;\n};\n\nconst getTypeCurrent = (type = \"\", options = []) => {\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].value === type) {\n      return i;\n    }\n  }\n  return 0;\n};\n\n// Prevent unmount component topic select\nconst ButtonWrapper = (props) => <Grid {...props} item xs={12} md={6} lg={4} />;\nconst TagsWrapper = (props) => <Grid {...props} item xs={12} />;\n\nfunction EditWord() {\n  useTitle('Edit word');\n  const classes = useStyle();\n  const [submitting, setSubmitting] = useState(false);\n  const defaultImg =\n    \"https://res.cloudinary.com/phongvn2611/image/upload/v1638368033/english/word/default-image_fbmbtn.png\";\n\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  const [phonetic, setPhonetic] = useState('');\n\n  const [wordValue, setWordValue] = useState(null);\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    (async function () {\n      const apiRes = await wordApi.getWord(id);\n      apiRes.data.examples = apiRes.data.examples.join('\\n');\n      apiRes.data.synonyms = apiRes.data.synonyms.join('\\n');\n      apiRes.data.antonyms = apiRes.data.antonyms.join('\\n');\n      setWordValue(apiRes.data);\n      setPhonetic(apiRes.data.phonetic)\n      setImage(apiRes.data.picture);\n    })();\n    return () => {};\n  }, [id]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setWordValue({ ...wordValue, [name]: value });\n  }\n\n  const handleChangePicture = (e) => {\n    e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      if (!file) {\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\n      }\n      if (file.size / 1024 ** 2 > 2) {\n        dispatch(setMessage(\"Size too large\", \"error\"));\n      }\n      convertImageToBase64(file).then((res) => {\n        setImage(res);\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n  const topics = useRef([]);\n  const onSubmit = async (e) => {\n    try {\n      setSubmitting(true);\n      const { examples, synonyms, antonyms, word, ...rest } = wordValue;\n      // check examples validation\n      const exampleArr = analysisExample(examples, word);\n      if (typeof exampleArr === \"boolean\" && !exampleArr) {\n        dispatch(setMessage(\"Câu ví dụ phải chứa từ vựng mới.\", \"warning\"));\n        setSubmitting(false);\n        return;\n      }\n\n      // split synonyms string to an array synonyms\n      const synonymArr = synonyms !== \"\" ? synonyms.split(\"\\n\") : [];\n\n      // split antonyms string to an array synonyms\n      const antonymArr = antonyms !== \"\" ? antonyms.split(\"\\n\") : [];\n\n      // call API\n      const dataSend = {\n        ...rest,\n        examples: exampleArr,\n        synonyms: synonymArr,\n        antonyms: antonymArr,\n        topics: topics.current,\n        picture: image,\n        phonetic: phonetic.replaceAll(\"/\", \"\"),\n      };\n\n      const apiRes = await wordApi.putWord(id, dataSend);\n\n      if (apiRes) {\n        dispatch(setMessage(\"Update word successfully\", \"success\"));\n        setSubmitting(false);\n      }\n    } catch (error) {\n      const message =\n        error.response?.data?.message || \"Error, can not update word.\";\n      dispatch(setMessage(message, \"error\"));\n      setSubmitting(false);\n    }\n  };\n\n\n  function handleClickGoBack() {\n    history.push(\"/admin/word\");\n  }\n\n  return (\n    <div className={classes.root}>\n      <h1 className={classes.title}>Sửa từ</h1>\n      <div className=\"dyno-break\"></div>\n\n      {wordValue && (\n        <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n          <Grid container alignContent=\"center\">\n            <div className={classes.avtWrap}>\n              <img\n                src={image ? image : defaultImg}\n                alt=\"\"\n                className={`${classes.avt} w-100 h-100`}\n              />\n              <div className={`${classes.cameraIconWrap} flex-center`}>\n                <CameraIcon className={classes.cameraIcon} />\n                <input\n                  type=\"file\"\n                  className={classes.fileInput}\n                  onChange={handleChangePicture}\n                  accept=\"image/*\"\n                />\n              </div>\n            </div>\n          </Grid>\n          <Grid className={classes.grid} container spacing={3}>\n            {/* new word */}\n            <Grid item xs={12} md={6} lg={4}>\n              <InputCustom\n                className=\"w-100\"\n                label=\"Word\"\n                value={wordValue.word}\n              //  onChange={handleChange}\n              />\n            </Grid>\n\n            {/* mean */}\n            <Grid item xs={12} md={6} lg={4}>\n              <InputCustom\n                className=\"w-100\"\n                label=\"Meaning\"\n                value={wordValue.mean}\n                error={Boolean(errors.mean)}\n                inputProps={{\n                  maxLength: MAX.MEAN_WORD_LEN,\n                  name: \"mean\",\n                  ...register(\"mean\"),\n                }}\n                onChange={handleChange}\n              />\n              {errors.mean && (\n                <p className=\"text-error\">{errors.mean?.message}</p>\n              )}\n            </Grid>\n\n            {/* phonetic */}\n            <PhoneticInput\n              errorMessage={errors.phonetic?.message}\n              error={Boolean(errors.phonetic)}\n              value={wordValue.phonetic}\n              inputProps={{\n                maxLength: MAX.MEAN_WORD_LEN,\n                name: \"phonetic\",\n              }}\n              register={register(\"phonetic\")}\n              onChange={handleChange}\n            />\n\n            {/* word type */}\n            <Grid item xs={12} md={6} lg={4}>\n              <SelectCustom\n                className=\"w-100\"\n                label=\"Type (*)\"\n                options={WORD_TYPES}\n                error={Boolean(errors.type)}\n                index={getTypeCurrent(wordValue.type, WORD_TYPES)}\n                inputProps={{\n                  name: \"type\",\n                  ...register(\"type\"),\n                }}\n                onChange={handleChange}\n              />\n              {errors.type && (\n                <p className=\"text-error\">{errors.type?.message}</p>\n              )}\n            </Grid>\n\n            {/* word level */}\n            <Grid item xs={12} md={6} lg={4}>\n              <SelectCustom\n                className=\"w-100\"\n                label=\"Cấp bậc của từ (*)\"\n                options={WORD_LEVELS}\n                error={Boolean(errors.level)}\n                index={getTypeCurrent(wordValue.level, WORD_LEVELS)}\n                inputProps={{ name: \"level\", ...register(\"level\") }}\n                onChange={handleChange}\n              />\n              {errors.level && (\n                <p className=\"text-error\">{errors.level?.message}</p>\n              )}\n            </Grid>\n\n            {/* word specialty */}\n            <Grid item xs={12} md={6} lg={4}>\n              <SelectCustom\n                className=\"w-100\"\n                label=\"Thuộc chuyên ngành\"\n                options={WORD_SPECIALTY}\n                error={Boolean(errors.specialty)}\n                index={getTypeCurrent(wordValue.specialty, WORD_SPECIALTY)}\n                inputProps={{\n                  name: \"specialty\",\n                  ...register(\"specialty\"),\n                }}\n                onChange={handleChange}\n              />\n              {errors.specialty && (\n                <p className=\"text-error\">{errors.specialty?.message}</p>\n              )}\n            </Grid>\n\n            {/* examples */}\n            <Grid item xs={12} md={6} lg={4}>\n              <InputCustom\n                className=\"w-100\"\n                label=\"Câu ví dụ\"\n                value={wordValue.examples}\n                multiline\n                endAdornment={\n                  <InformationTooltip title=\"Thêm các câu ví dụ cho từ trên. Đảm bảo có sự xuất hiện của từ đó trong câu. Bạn có thể thêm nhiều câu bằng cách xuống dòng.\" />\n                }\n                error={Boolean(errors.examples)}\n                inputProps={{\n                  name: \"examples\",\n                  ...register(\"examples\"),\n                }}\n                onChange={handleChange}\n              />\n\n              {errors.examples && (\n                <p className=\"text-error\">{errors.examples?.message}</p>\n              )}\n            </Grid>\n\n            {/* synonyms */}\n            <Grid item xs={12} md={6} lg={4}>\n              <InputCustom\n                className=\"w-100\"\n                label=\"Các từ đồng nghĩa\"\n                multiline\n                value={wordValue.synonyms}\n                error={Boolean(errors.synonyms)}\n                inputProps={{\n                  name: \"synonyms\",\n                  ...register(\"synonyms\"),\n                }}\n                onChange={handleChange}\n              />\n              {errors.synonyms && (\n                <p className=\"text-error\">{errors.synonyms?.message}</p>\n              )}\n            </Grid>\n\n            {/* antonyms */}\n            <Grid item xs={12} md={6} lg={4}>\n              <InputCustom\n                className=\"w-100\"\n                label=\"Các từ trái nghĩa\"\n                multiline\n                value={wordValue.antonyms}\n                error={Boolean(errors.antonyms)}\n                inputProps={{\n                  name: \"antonyms\",\n                  ...register(\"antonyms\"),\n                }}\n                onChange={handleChange}\n              />\n              {errors.antonyms && (\n                <p className=\"text-error\">{errors.antonyms?.message}</p>\n              )}\n            </Grid>\n\n            {/* note */}\n            <Grid item xs={12} md={6} lg={4}>\n              <InputCustom\n                className=\"w-100\"\n                label=\"Ghi chú\"\n                multiline\n                value={wordValue.note}\n                endAdornment={\n                  <InformationTooltip title=\"Nhập thêm ghi chú mà bạn muốn cho từ. Thêm nhiều dòng bằng cách xuống dòng.\" />\n                }\n                error={Boolean(errors.note)}\n                inputProps={{\n                  name: \"note\",\n                  ...register(\"note\"),\n                }}\n                onChange={handleChange}\n              />\n              {errors.note && (\n                <p className=\"text-error\">{errors.note?.message}</p>\n              )}\n            </Grid>\n\n            {/* word topics */}\n            <TopicSelect\n              onChange={(topicList) => (topics.current = topicList)}\n              buttonTitle=\"Chọn chủ đề\"\n              buttonWrapper={ButtonWrapper}\n              tagsWrapper={TagsWrapper}\n            />\n          </Grid>\n\n          <div className=\"dyno-break\"></div>\n          {/* button group */}\n          <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\n            <Button\n              className={`${classes.btn} ${classes.btnReset}`}\n              color=\"secondary\"\n              endIcon={<ResetIcon />}\n              variant=\"outlined\"\n              // disabled={}\n              onClick={() => handleClickGoBack()}\n            >\n              Back\n            </Button>\n            <Button\n              type=\"submit\"\n              className={`${classes.btn} _btn _btn-primary`}\n              disabled={submitting}\n              endIcon={\n                submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\n              }\n              variant=\"contained\"\n              onClick={() => onSubmit()}\n            >\n              Sửa từ\n            </Button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n}\n\nEditWord.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool,\n};\n\nEditWord.defaultProps = {\n  onSubmitForm: function () {},\n  submitting: false,\n};\n\nexport default EditWord;\n"]},"metadata":{},"sourceType":"module"}