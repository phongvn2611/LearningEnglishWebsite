{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\components\\\\WordUser\\\\Vocabulary\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpIcon from '@material-ui/icons/Help';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CarouselIcon from '@material-ui/icons/ViewCarousel';\nimport CollectionsIcon from '@material-ui/icons/ViewQuilt';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport TooltipCustom from 'components/UI/TooltipCustom';\nimport WordPack from 'components/UI/WordPack';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport GalleryList from './GalleryList';\nimport SlideShow from './SlideShow';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst perPage = 7;\nconst tutorial = 'Có 2 chế độ xem là gallery và slide. Bấm vào biểu tượng mắt để bật tắt nghĩa của từ.';\n\nfunction Vocabulary({\n  list,\n  total\n}) {\n  _s();\n\n  const classes = useStyle();\n  const [mode, setMode] = useState(0); // 0 - gallery, 1 - slide show\n\n  const currentSlide = useRef(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-center-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dyno-title\",\n        children: \"Vocabulary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.iconWrap,\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Collection\",\n          placement: \"bottom\",\n          children: /*#__PURE__*/_jsxDEV(CollectionsIcon, {\n            onClick: () => setMode(0),\n            className: `${classes.icon} ${mode === 0 ? 'active' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Item\",\n          placement: \"bottom\",\n          children: /*#__PURE__*/_jsxDEV(CarouselIcon, {\n            onClick: () => setMode(1),\n            className: `${classes.icon} ${mode === 1 ? 'active' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dyno-break\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), mode === 0 ? /*#__PURE__*/_jsxDEV(GalleryList, {\n      list: list,\n      total: Math.ceil(total / perPage)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SlideShow, {\n      list: list,\n      total: total,\n      currentSlide: currentSlide.current,\n      onSaveCurrentSlide: v => currentSlide.current = v,\n      totalCurrentSlide: currentSlide.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Vocabulary, \"AaP5mG6kipncOxHYKYd3S3UVFos=\", false, function () {\n  return [useStyle];\n});\n\n_c = Vocabulary;\nVocabulary.propTypes = {\n  list: PropTypes.array,\n  total: PropTypes.number\n};\nVocabulary.defaultProps = {\n  list: [],\n  total: 0\n};\nexport default Vocabulary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vocabulary\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/components/WordUser/Vocabulary/index.js"],"names":["Tooltip","HelpIcon","SettingsIcon","CarouselIcon","CollectionsIcon","VisibilityIcon","VisibilityOffIcon","TooltipCustom","WordPack","PropTypes","React","useRef","useState","GalleryList","SlideShow","useStyle","perPage","tutorial","Vocabulary","list","total","classes","mode","setMode","currentSlide","iconWrap","icon","Math","ceil","current","v","propTypes","array","number","defaultProps"],"mappings":"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","sourcesContent":["import Tooltip from '@material-ui/core/Tooltip';\nimport HelpIcon from '@material-ui/icons/Help';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CarouselIcon from '@material-ui/icons/ViewCarousel';\nimport CollectionsIcon from '@material-ui/icons/ViewQuilt';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport TooltipCustom from 'components/UI/TooltipCustom';\nimport WordPack from 'components/UI/WordPack';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport GalleryList from './GalleryList';\nimport SlideShow from './SlideShow';\nimport useStyle from './style';\n\nconst perPage = 7;\nconst tutorial =\n  'Có 2 chế độ xem là gallery và slide. Bấm vào biểu tượng mắt để bật tắt nghĩa của từ.';\n\nfunction Vocabulary({\n  list,\n  total,\n}) {\n  const classes = useStyle();\n  const [mode, setMode] = useState(0); // 0 - gallery, 1 - slide show\n  const currentSlide = useRef(0);\n \n  \n  return (\n    <div className=\"container my-10\">\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">Vocabulary</h1>\n        <div className={classes.iconWrap}>\n          <Tooltip title=\"Collection\" placement=\"bottom\">\n            <CollectionsIcon\n              onClick={() => setMode(0)}\n              className={`${classes.icon} ${mode === 0 ? 'active' : ''}`}\n            />\n          </Tooltip>\n\n          <Tooltip title=\"Item\" placement=\"bottom\">\n            <CarouselIcon\n              onClick={() => setMode(1)}\n              className={`${classes.icon} ${mode === 1 ? 'active' : ''}`}\n            />\n          </Tooltip>\n\n          {/* <Tooltip title=\"Xem nghĩa của từ\" placement=\"bottom\">\n            {isShowMean ? (\n              <VisibilityOffIcon\n                className={classes.icon}\n                onClick={() => setIsShowMean(false)}\n              />\n            ) : (\n              <VisibilityIcon\n                className={classes.icon}\n                onClick={() => setIsShowMean(true)}\n              />\n            )}\n          </Tooltip>\n\n          <Tooltip title=\"Cài đặt gói từ vựng\" placement=\"bottom\">\n            <SettingsIcon\n              className={classes.icon}\n              onClick={() => setOpenWordPack(true)}\n            />\n          </Tooltip>\n\n          <TooltipCustom title={tutorial} placement=\"bottom\">\n            <HelpIcon className={classes.icon} />\n          </TooltipCustom>\n\n             */}\n        </div>\n      </div>\n      <div className=\"dyno-break\" />\n{/* \n      {openWordPack && (\n        <WordPack\n          open={true}\n          topicMultiples={true}\n          onCancel={() => setOpenWordPack(false)}\n          cancelBtnText=\"Đóng\"\n          onChoose={(packInfo) => {\n            onWordPackChange(packInfo);\n            setOpenWordPack(false);\n          }}\n        />\n      )} */}\n    \n\n      {mode === 0 ? (\n        <GalleryList\n          list={list}\n          total={Math.ceil(total / perPage)}\n        />\n      ) : (\n        <SlideShow\n          list={list}\n          total={total}\n          currentSlide={currentSlide.current}\n          onSaveCurrentSlide={(v) => (currentSlide.current = v)}\n          totalCurrentSlide={currentSlide.current}\n        />\n      )}\n    </div>\n  );\n}\n\nVocabulary.propTypes = {\n  list: PropTypes.array,\n  total: PropTypes.number,\n};\n\nVocabulary.defaultProps = {\n  list: [],\n  total: 0,\n};\n\nexport default Vocabulary;\n"]},"metadata":{},"sourceType":"module"}