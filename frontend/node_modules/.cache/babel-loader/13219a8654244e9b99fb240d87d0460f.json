{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\components\\\\Navigation\\\\Settings\\\\Theme\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport Collapse from '@material-ui/core/Collapse';\nimport DarkIcon from '@material-ui/icons/Brightness3';\nimport LightIcon from '@material-ui/icons/Brightness7';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport { THEME_KEYS } from 'constants/index';\nimport { getCustomPalettes, setRootPalettes } from 'helper';\nimport React, { useState } from 'react';\nimport PaletteColor from './PaletteColor';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ThemeSetting() {\n  _s();\n\n  const classes = useStyle();\n  const [currentTheme, setCurrentTheme] = useState(localStorage.getItem(THEME_KEYS.LS_KEY) || THEME_KEYS.LIGHT);\n  const [palettes, setPalettes] = useState(() => getCustomPalettes());\n\n  const onChangeTheme = theme => {\n    if (theme === currentTheme) return;\n    const root = document.querySelector(':root');\n    if (currentTheme === THEME_KEYS.CUSTOM) root.removeAttribute('style'); // reset style\n\n    root.setAttribute(THEME_KEYS.ROOT_KEY, theme);\n    localStorage.setItem(THEME_KEYS.LS_KEY, theme);\n  };\n\n  const toggleDarkLight = theme => {\n    onChangeTheme(theme);\n    setCurrentTheme(theme);\n  };\n\n  const onCustomThemeClick = theme => {\n    if (theme === currentTheme) return;\n    setPalettes(getCustomPalettes());\n    setRootPalettes();\n    setCurrentTheme(theme);\n    onChangeTheme(theme);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.root} d-flex`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.item} ${THEME_KEYS.LIGHT === currentTheme ? 'active' : ''}`,\n        onClick: () => toggleDarkLight(THEME_KEYS.LIGHT),\n        children: /*#__PURE__*/_jsxDEV(LightIcon, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.item} ${THEME_KEYS.DARK === currentTheme ? 'active' : ''}`,\n        onClick: () => toggleDarkLight(THEME_KEYS.DARK),\n        children: /*#__PURE__*/_jsxDEV(DarkIcon, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.item} ${THEME_KEYS.CUSTOM === currentTheme ? 'active' : ''}`,\n        onClick: () => onCustomThemeClick(THEME_KEYS.CUSTOM),\n        children: /*#__PURE__*/_jsxDEV(PaletteIcon, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: currentTheme === THEME_KEYS.CUSTOM,\n      children: /*#__PURE__*/_jsxDEV(PaletteColor, {\n        palettes: palettes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ThemeSetting, \"HCterPJyg3eH8JtyGPO4xHkOUy4=\", false, function () {\n  return [useStyle];\n});\n\n_c = ThemeSetting;\nexport default ThemeSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSetting\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/components/Navigation/Settings/Theme/index.js"],"names":["Collapse","DarkIcon","LightIcon","PaletteIcon","THEME_KEYS","getCustomPalettes","setRootPalettes","React","useState","PaletteColor","useStyle","ThemeSetting","classes","currentTheme","setCurrentTheme","localStorage","getItem","LS_KEY","LIGHT","palettes","setPalettes","onChangeTheme","theme","root","document","querySelector","CUSTOM","removeAttribute","setAttribute","ROOT_KEY","setItem","toggleDarkLight","onCustomThemeClick","item","DARK"],"mappings":"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","sourcesContent":["import Collapse from '@material-ui/core/Collapse';\nimport DarkIcon from '@material-ui/icons/Brightness3';\nimport LightIcon from '@material-ui/icons/Brightness7';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport { THEME_KEYS } from 'constants/index';\nimport { getCustomPalettes, setRootPalettes } from 'helper';\nimport React, { useState } from 'react';\nimport PaletteColor from './PaletteColor';\nimport useStyle from './style';\n\nfunction ThemeSetting() {\n  const classes = useStyle();\n  const [currentTheme, setCurrentTheme] = useState(\n    localStorage.getItem(THEME_KEYS.LS_KEY) || THEME_KEYS.LIGHT,\n  );\n  const [palettes, setPalettes] = useState(() => getCustomPalettes());\n\n  const onChangeTheme = (theme) => {\n    if (theme === currentTheme) return;\n\n    const root = document.querySelector(':root');\n    if (currentTheme === THEME_KEYS.CUSTOM) root.removeAttribute('style'); // reset style\n    root.setAttribute(THEME_KEYS.ROOT_KEY, theme);\n    localStorage.setItem(THEME_KEYS.LS_KEY, theme);\n  };\n\n  const toggleDarkLight = (theme) => {\n    onChangeTheme(theme);\n    setCurrentTheme(theme);\n  };\n\n  const onCustomThemeClick = (theme) => {\n    if (theme === currentTheme) return;\n    setPalettes(getCustomPalettes());\n    setRootPalettes();\n    setCurrentTheme(theme);\n    onChangeTheme(theme);\n  };\n\n  return (\n    <>\n      <div className={`${classes.root} d-flex`}>\n        {/* light */}\n        <div\n          className={`${classes.item} ${\n            THEME_KEYS.LIGHT === currentTheme ? 'active' : ''\n          }`}\n          onClick={() => toggleDarkLight(THEME_KEYS.LIGHT)}>\n          <LightIcon className=\"icon\" />\n        </div>\n\n        {/* dark */}\n        <div\n          className={`${classes.item} ${\n            THEME_KEYS.DARK === currentTheme ? 'active' : ''\n          }`}\n          onClick={() => toggleDarkLight(THEME_KEYS.DARK)}>\n          <DarkIcon className=\"icon\" />\n        </div>\n\n        {/* custom */}\n        <div\n          className={`${classes.item} ${\n            THEME_KEYS.CUSTOM === currentTheme ? 'active' : ''\n          }`}\n          onClick={() => onCustomThemeClick(THEME_KEYS.CUSTOM)}>\n          <PaletteIcon className=\"icon\" />\n        </div>\n      </div>\n\n      {/* palette custom color */}\n      <Collapse in={currentTheme === THEME_KEYS.CUSTOM}>\n        <PaletteColor palettes={palettes} />\n      </Collapse>\n    </>\n  );\n}\n\nexport default ThemeSetting;\n"]},"metadata":{},"sourceType":"module"}