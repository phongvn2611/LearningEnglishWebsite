{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\components\\\\Navigation\\\\Settings\\\\Voice\\\\Accent.js\",\n    _s = $RefreshSig$();\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { getSpeechSynthesis, updateLSVoice } from 'helper';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setVoiceItem } from 'redux/actions/voiceAction';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AccentSelect() {\n  _s();\n\n  const classes = useStyle();\n  const [voiceList, setVoiceList] = useState([]);\n  const {\n    voiceURI\n  } = useSelector(state => state.voiceReducer);\n  const dispatch = useDispatch(); // get window voice list\n\n  useEffect(() => {\n    getSpeechSynthesis().then(voices => {\n      const enVoices = voices.filter(voice => {\n        var _voice$lang;\n\n        return ((_voice$lang = voice.lang) === null || _voice$lang === void 0 ? void 0 : _voice$lang.indexOf('en')) !== -1;\n      });\n      setVoiceList(enVoices);\n    });\n  }, []);\n\n  const onSelectChange = value => {\n    dispatch(setVoiceItem({\n      key: 'voiceURI',\n      value\n    }));\n    updateLSVoice('voiceURI', value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: voiceList.length > 0 && /*#__PURE__*/_jsxDEV(TextField, {\n      className: `${classes.selectRoot}`,\n      select: true,\n      SelectProps: {\n        className: classes.select,\n        MenuProps: {\n          classes: {\n            paper: classes.menu\n          }\n        }\n      },\n      hiddenLabel: true,\n      inputProps: {\n        placeholder: 'Chọn giọng đọc'\n      },\n      value: voiceURI || voiceList[0].voiceURI,\n      onChange: e => onSelectChange(e.target.value),\n      variant: \"outlined\",\n      children: voiceList.map((voice, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: voice.voiceURI,\n        children: voice.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(AccentSelect, \"QfGrwal4DUNUrD2CmRdnwomZNSA=\", false, function () {\n  return [useStyle, useSelector, useDispatch];\n});\n\n_c = AccentSelect;\nexport default AccentSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccentSelect\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/components/Navigation/Settings/Voice/Accent.js"],"names":["MenuItem","TextField","getSpeechSynthesis","updateLSVoice","React","useEffect","useState","useDispatch","useSelector","setVoiceItem","useStyle","AccentSelect","classes","voiceList","setVoiceList","voiceURI","state","voiceReducer","dispatch","then","voices","enVoices","filter","voice","lang","indexOf","onSelectChange","value","key","length","selectRoot","className","select","MenuProps","paper","menu","placeholder","e","target","map","index","name"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,QAAlD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,QAAP,MAAqB,SAArB;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAMC,OAAO,GAAGF,QAAQ,EAAxB;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAES,IAAAA;AAAF,MAAeP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAAhC;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B,CAJsB,CAMtB;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,kBAAkB,GAAGiB,IAArB,CAA2BC,MAAD,IAAY;AACpC,YAAMC,QAAQ,GAAGD,MAAM,CAACE,MAAP,CACdC,KAAD;AAAA;;AAAA,eAAW,gBAAAA,KAAK,CAACC,IAAN,4DAAYC,OAAZ,CAAoB,IAApB,OAA8B,CAAC,CAA1C;AAAA,OADe,CAAjB;AAGAX,MAAAA,YAAY,CAACO,QAAD,CAAZ;AACD,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMK,cAAc,GAAIC,KAAD,IAAW;AAChCT,IAAAA,QAAQ,CAACT,YAAY,CAAC;AAAEmB,MAAAA,GAAG,EAAE,UAAP;AAAmBD,MAAAA;AAAnB,KAAD,CAAb,CAAR;AACAxB,IAAAA,aAAa,CAAC,UAAD,EAAawB,KAAb,CAAb;AACD,GAHD;;AAKA,sBACE;AAAA,cACGd,SAAS,CAACgB,MAAV,GAAmB,CAAnB,iBACC,QAAC,SAAD;AACE,MAAA,SAAS,EAAG,GAAEjB,OAAO,CAACkB,UAAW,EADnC;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,WAAW,EAAE;AACXC,QAAAA,SAAS,EAAEnB,OAAO,CAACoB,MADR;AAEXC,QAAAA,SAAS,EAAE;AACTrB,UAAAA,OAAO,EAAE;AAAEsB,YAAAA,KAAK,EAAEtB,OAAO,CAACuB;AAAjB;AADA;AAFA,OAHf;AASE,MAAA,WAAW,EAAE,IATf;AAUE,MAAA,UAAU,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAVd;AAWE,MAAA,KAAK,EAAErB,QAAQ,IAAIF,SAAS,CAAC,CAAD,CAAT,CAAaE,QAXlC;AAYE,MAAA,QAAQ,EAAGsB,CAAD,IAAOX,cAAc,CAACW,CAAC,CAACC,MAAF,CAASX,KAAV,CAZjC;AAaE,MAAA,OAAO,EAAC,UAbV;AAAA,gBAcGd,SAAS,CAAC0B,GAAV,CAAc,CAAChB,KAAD,EAAQiB,KAAR,kBACb,QAAC,QAAD;AAAsB,QAAA,KAAK,EAAEjB,KAAK,CAACR,QAAnC;AAAA,kBACGQ,KAAK,CAACkB;AADT,SAAeD,KAAf;AAAA;AAAA;AAAA;AAAA,cADD;AAdH;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AA0BD;;GA/CQ7B,Y;UACSD,Q,EAEKF,W,EACJD,W;;;KAJVI,Y;AAiDT,eAAeA,YAAf","sourcesContent":["import MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { getSpeechSynthesis, updateLSVoice } from 'helper';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setVoiceItem } from 'redux/actions/voiceAction';\nimport useStyle from './style';\n\nfunction AccentSelect() {\n  const classes = useStyle();\n  const [voiceList, setVoiceList] = useState([]);\n  const { voiceURI } = useSelector((state) => state.voiceReducer);\n  const dispatch = useDispatch();\n\n  // get window voice list\n  useEffect(() => {\n    getSpeechSynthesis().then((voices) => {\n      const enVoices = voices.filter(\n        (voice) => voice.lang?.indexOf('en') !== -1,\n      );\n      setVoiceList(enVoices);\n    });\n  }, []);\n\n  const onSelectChange = (value) => {\n    dispatch(setVoiceItem({ key: 'voiceURI', value }));\n    updateLSVoice('voiceURI', value);\n  };\n\n  return (\n    <>\n      {voiceList.length > 0 && (\n        <TextField\n          className={`${classes.selectRoot}`}\n          select\n          SelectProps={{\n            className: classes.select,\n            MenuProps: {\n              classes: { paper: classes.menu },\n            },\n          }}\n          hiddenLabel={true}\n          inputProps={{ placeholder: 'Chọn giọng đọc' }}\n          value={voiceURI || voiceList[0].voiceURI}\n          onChange={(e) => onSelectChange(e.target.value)}\n          variant=\"outlined\">\n          {voiceList.map((voice, index) => (\n            <MenuItem key={index} value={voice.voiceURI}>\n              {voice.name}\n            </MenuItem>\n          ))}\n        </TextField>\n      )}\n    </>\n  );\n}\n\nexport default AccentSelect;\n"]},"metadata":{},"sourceType":"module"}