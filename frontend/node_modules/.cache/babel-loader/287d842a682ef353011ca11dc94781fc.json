{"ast":null,"code":"import axios from \"axios\";\nconst URL = '/api/word';\nconst wordApi = {\n  getWord: (id = '') => {\n    return axios.get(`${URL}/get-word-details`, {\n      params: {\n        id\n      }\n    });\n  },\n  getWordByTopic: topic => {\n    return axios.get(`${URL}/get-word-by-topic/${topic}`);\n  },\n  searchWord: (word = '', isCompact = false) => {\n    return axios.get(`${URL}/search-word`, {\n      params: {\n        word,\n        isCompact\n      }\n    });\n  },\n  getWordTopics: () => {\n    return axios.get(`${URL}/get-word-topics`);\n  },\n  getAllWord: () => {\n    return axios.get(`${URL}/get-all-word`);\n  },\n  postWord: wordData => {\n    return axios.post(`${URL}/post-word`, { ...wordData\n    }, {\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    });\n  },\n  putWord: (id, wordData) => {\n    return axios.put(`${URL}/put-word/${id}`, { ...wordData\n    }, {\n      params: {\n        id\n      },\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    });\n  },\n  deleteWord: (word = '', type = '') => {\n    return axios.delete(`${URL}/delete-word`, {\n      params: {\n        word,\n        type\n      }\n    });\n  },\n  checkWordExist: (word = '', type = '') => {\n    return axios.get(`${URL}/exist-word`, {\n      params: {\n        word,\n        type\n      }\n    });\n  },\n  getWordList: (page = 1, perPage = 8, packInfo, sortType = 'rand') => {\n    return axios.get(`${URL}/get-word-pack`, {\n      params: {\n        page,\n        perPage,\n        packInfo: JSON.stringify(packInfo),\n        sortType\n      }\n    });\n  },\n  getWordTopicGallery: (page = 1, perPage = 8, packInfo) => {\n    return axios.get(`${URL}/get-word-topic-gallery`, {\n      params: {\n        page,\n        perPage,\n        packInfo: JSON.stringify(packInfo)\n      }\n    });\n  },\n  getWordTopic: packInfo => {\n    return axios.get(`${URL}/get-word-topic-slide`, {\n      params: {\n        packInfo: JSON.stringify(packInfo)\n      }\n    });\n  }\n};\nexport default wordApi;","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/apis/wordApi.js"],"names":["axios","URL","wordApi","getWord","id","get","params","getWordByTopic","topic","searchWord","word","isCompact","getWordTopics","getAllWord","postWord","wordData","post","header","putWord","put","deleteWord","type","delete","checkWordExist","getWordList","page","perPage","packInfo","sortType","JSON","stringify","getWordTopicGallery","getWordTopic"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nconst URL = '/api/word';\n\nconst wordApi = {\n  getWord: (id = '') => {\n    return axios.get(`${URL}/get-word-details`, { params: { id } });\n  },\n\n  getWordByTopic: (topic) => {\n    return axios.get(`${URL}/get-word-by-topic/${topic}`);\n  },\n\n  searchWord: (word = '', isCompact = false) => {\n    return axios.get(`${URL}/search-word`, {\n      params: { word, isCompact },\n    });\n  },\n\n  getWordTopics: () => {\n    return axios.get(`${URL}/get-word-topics`);\n  },\n\n  getAllWord: () => {\n    return axios.get(`${URL}/get-all-word`);\n  },\n\n  postWord: (wordData) => {\n    return axios.post(\n      `${URL}/post-word`,\n      { ...wordData },\n      {\n        header: { \"content-type\": \"multipart/form-data\" },\n      }\n    );\n  },\n\n  putWord: (id, wordData) => {\n    return axios.put(\n      `${URL}/put-word/${id}`,\n      { ...wordData },\n      {\n        params: { id },\n        header: { \"content-type\": \"multipart/form-data\" },\n      }\n    );\n  },\n\n  deleteWord: (word='', type='') => {\n    return axios.delete(`${URL}/delete-word`, {params: { word, type}});\n  },\n\n  checkWordExist: ( word='', type='') => {\n    return axios.get(`${URL}/exist-word`, {params: { word, type}});\n  },\n\n  getWordList: (page = 1, perPage = 8, packInfo, sortType = 'rand') => {\n    return axios.get(`${URL}/get-word-pack`, {\n      params: { page, perPage, packInfo: JSON.stringify(packInfo), sortType },\n    });\n  },\n\n  getWordTopicGallery: (page = 1, perPage = 8, packInfo) => {\n    return axios.get(`${URL}/get-word-topic-gallery`, {\n      params: { page, perPage, packInfo: JSON.stringify(packInfo) },\n    });\n  },\n\n  getWordTopic: ( packInfo) => {\n    return axios.get(`${URL}/get-word-topic-slide`, {\n      params: { packInfo: JSON.stringify(packInfo) },\n    });\n  },\n}\n\nexport default wordApi;\n"]},"metadata":{},"sourceType":"module"}