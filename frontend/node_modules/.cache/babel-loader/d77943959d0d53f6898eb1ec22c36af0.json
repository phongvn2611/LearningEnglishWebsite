{"ast":null,"code":"import WORD_CONSTANT from \"../constants/wordConstant\";\nconst initialState = {\n  wordData: null,\n  words: [],\n  topics: [],\n  wordpack: [],\n  message: null,\n  isWordLoading: false\n};\n\nconst wordReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case WORD_CONSTANT.SET_WORD_LOADING:\n      return { ...state,\n        isWordLoading: payload\n      };\n\n    case WORD_CONSTANT.SET_WORD_ERROR:\n      return { ...state,\n        message: payload,\n        isWordLoading: true\n      };\n\n    case WORD_CONSTANT.GET_WORD:\n      return { ...state,\n        wordData: payload\n      };\n\n    case WORD_CONSTANT.CREATE_WORD:\n      return { ...state,\n        wordData: payload,\n        words: [...state.words, payload]\n      };\n\n    case WORD_CONSTANT.EDIT_WORD:\n      const arr = { ...state\n      };\n      const newWords = arr.words.map(word => word._id === payload._id ? payload : word);\n      return { ...state,\n        wordData: payload,\n        words: newWords\n      };\n\n    case WORD_CONSTANT.DELETE_WORD:\n      return { ...state,\n        words: state.words.filter(word => word.word !== payload.word && word.type !== payload.type)\n      };\n\n    case WORD_CONSTANT.GET_ALL_WORD:\n      return { ...state,\n        words: payload\n      };\n\n    case WORD_CONSTANT.GET_WORD_BY_TOPIC:\n      return { ...state,\n        words: payload\n      };\n\n    case WORD_CONSTANT.GET_WORD_TOPICS:\n      return { ...state,\n        topics: payload\n      };\n\n    case WORD_CONSTANT.SEARCH_WORD:\n      return { ...state,\n        words: payload\n      };\n\n    case WORD_CONSTANT.GET_WORDPACK:\n      return { ...state,\n        wordpack: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wordReducer;","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/redux/reducers/wordReducer.js"],"names":["WORD_CONSTANT","initialState","wordData","words","topics","wordpack","message","isWordLoading","wordReducer","state","action","type","payload","SET_WORD_LOADING","SET_WORD_ERROR","GET_WORD","CREATE_WORD","EDIT_WORD","arr","newWords","map","word","_id","DELETE_WORD","filter","GET_ALL_WORD","GET_WORD_BY_TOPIC","GET_WORD_TOPICS","SEARCH_WORD","GET_WORDPACK"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,2BAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,KAAK,EAAC,EAFa;AAGnBC,EAAAA,MAAM,EAAC,EAHY;AAInBC,EAAAA,QAAQ,EAAC,EAJU;AAKnBC,EAAAA,OAAO,EAAE,IALU;AAMnBC,EAAAA,aAAa,EAAE;AANI,CAArB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKX,aAAa,CAACa,gBAAnB;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,aAAa,EAAEK;AAFV,OAAP;;AAIF,SAAKZ,aAAa,CAACc,cAAnB;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,OAAO,EAAEM,OAFJ;AAGLL,QAAAA,aAAa,EAAE;AAHV,OAAP;;AAMF,SAAKP,aAAa,CAACe,QAAnB;AACE,aAAO,EACL,GAAGN,KADE;AAELP,QAAAA,QAAQ,EAAEU;AAFL,OAAP;;AAIA,SAAKZ,aAAa,CAACgB,WAAnB;AACI,aAAO,EACL,GAAGP,KADE;AAELP,QAAAA,QAAQ,EAAEU,OAFL;AAGLT,QAAAA,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAiBS,OAAjB;AAHF,OAAP;;AAKA,SAAKZ,aAAa,CAACiB,SAAnB;AACE,YAAMC,GAAG,GAAG,EAAE,GAAGT;AAAL,OAAZ;AACA,YAAMU,QAAQ,GAAGD,GAAG,CAACf,KAAJ,CAAUiB,GAAV,CAAeC,IAAD,IAC7BA,IAAI,CAACC,GAAL,KAAaV,OAAO,CAACU,GAArB,GAA2BV,OAA3B,GAAqCS,IADtB,CAAjB;AAGA,aAAO,EACL,GAAGZ,KADE;AAELP,QAAAA,QAAQ,EAAEU,OAFL;AAGLT,QAAAA,KAAK,EAAEgB;AAHF,OAAP;;AAKN,SAAKnB,aAAa,CAACuB,WAAnB;AACI,aAAO,EACH,GAAGd,KADA;AAEHN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYqB,MAAZ,CACNH,IAAD,IAAWA,IAAI,CAACA,IAAL,KAAcT,OAAO,CAACS,IAAtB,IAA8BA,IAAI,CAACV,IAAL,KAAYC,OAAO,CAACD,IADtD;AAFJ,OAAP;;AAMJ,SAAKX,aAAa,CAACyB,YAAnB;AACI,aAAO,EACH,GAAGhB,KADA;AAEHN,QAAAA,KAAK,EAAES;AAFJ,OAAP;;AAIJ,SAAKZ,aAAa,CAAC0B,iBAAnB;AACI,aAAO,EACH,GAAGjB,KADA;AAEHN,QAAAA,KAAK,EAAES;AAFJ,OAAP;;AAIJ,SAAKZ,aAAa,CAAC2B,eAAnB;AACI,aAAO,EACH,GAAGlB,KADA;AAEHL,QAAAA,MAAM,EAAEQ;AAFL,OAAP;;AAIJ,SAAKZ,aAAa,CAAC4B,WAAnB;AACI,aAAO,EACH,GAAGnB,KADA;AAEHN,QAAAA,KAAK,EAAES;AAFJ,OAAP;;AAIN,SAAKZ,aAAa,CAAC6B,YAAnB;AACM,aAAO,EACH,GAAGpB,KADA;AAEHJ,QAAAA,QAAQ,EAAEO;AAFP,OAAP;;AAIJ;AACE,aAAOH,KAAP;AAnEN;AAqEC,CAvEH;;AAyEE,eAAeD,WAAf","sourcesContent":["import WORD_CONSTANT from \"../constants/wordConstant\";\n\nconst initialState = {\n  wordData: null,\n  words:[],\n  topics:[],\n  wordpack:[],\n  message: null,\n  isWordLoading: false,\n}\nconst wordReducer = (state = initialState, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case WORD_CONSTANT.SET_WORD_LOADING:\n      return {\n        ...state,\n        isWordLoading: payload,\n      }\n    case WORD_CONSTANT.SET_WORD_ERROR:\n      return {\n        ...state,\n        message: payload,\n        isWordLoading: true,\n      }\n\n    case WORD_CONSTANT.GET_WORD:\n      return {\n        ...state,\n        wordData: payload,\n      }\n      case WORD_CONSTANT.CREATE_WORD:\n          return {\n            ...state,\n            wordData: payload,\n            words: [...state.words, payload],\n          }\n          case WORD_CONSTANT.EDIT_WORD:\n            const arr = { ...state };\n            const newWords = arr.words.map((word) =>\n              word._id === payload._id ? payload : word\n            );\n            return {\n              ...state,\n              wordData: payload,\n              words: newWords,\n            };\n      case WORD_CONSTANT.DELETE_WORD:\n          return {\n              ...state,\n              words: state.words.filter(\n              (word) => (word.word !== payload.word && word.type!==payload.type)\n              ),\n          }\n      case WORD_CONSTANT.GET_ALL_WORD:\n          return {\n              ...state,\n              words: payload,\n          }\n      case WORD_CONSTANT.GET_WORD_BY_TOPIC:\n          return {\n              ...state,\n              words: payload,\n          }\n      case WORD_CONSTANT.GET_WORD_TOPICS:\n          return {\n              ...state,\n              topics: payload,\n          }\n      case WORD_CONSTANT.SEARCH_WORD:\n          return {\n              ...state,\n              words: payload,\n          } \n    case WORD_CONSTANT.GET_WORDPACK:\n          return {\n              ...state,\n              wordpack: payload,\n          }       \n      default:\n        return state\n    }\n  }\n  \n  export default wordReducer\n  "]},"metadata":{},"sourceType":"module"}