{"ast":null,"code":"import MESSAGE_CONSTANT from './../constants/messageConstant';\nlet initialState = {\n  open: false,\n  duration: 2000,\n  message: 'This is a message',\n  variant: 'filled',\n  type: 'success'\n};\n\nconst messageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MESSAGE_CONSTANT.SET_MESSAGE:\n      const res = action.payload;\n      const arr = { ...state\n      };\n\n      if (typeof res === 'string') {\n        return { ...arr,\n          open: true,\n          message: res.message\n        };\n      }\n\n      return { ...arr,\n        open: true,\n        ...res\n      };\n\n    case MESSAGE_CONSTANT.CLOSE_MESSAGE:\n      const data = { ...state\n      };\n      data.open = false;\n      return data;\n\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/redux/reducers/messageReducer.js"],"names":["MESSAGE_CONSTANT","initialState","open","duration","message","variant","type","messageReducer","state","action","SET_MESSAGE","res","payload","arr","CLOSE_MESSAGE","data"],"mappings":"AACA,OAAOA,gBAAP,MAA6B,gCAA7B;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,KADW;AAEjBC,EAAAA,QAAQ,EAAE,IAFO;AAGjBC,EAAAA,OAAO,EAAE,mBAHQ;AAIjBC,EAAAA,OAAO,EAAE,QAJQ;AAKjBC,EAAAA,IAAI,EAAE;AALW,CAAnB;;AAQA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKN,gBAAgB,CAACU,WAAtB;AACE,YAAMC,GAAG,GAAGF,MAAM,CAACG,OAAnB;AACA,YAAMC,GAAG,GAAG,EAAE,GAAGL;AAAL,OAAZ;;AACA,UAAI,OAAOG,GAAP,KAAe,QAAnB,EAA6B;AAC3B,eAAO,EAAE,GAAGE,GAAL;AAAUX,UAAAA,IAAI,EAAE,IAAhB;AAAsBE,UAAAA,OAAO,EAAEO,GAAG,CAACP;AAAnC,SAAP;AACD;;AACD,aAAO,EAAE,GAAGS,GAAL;AAAUX,QAAAA,IAAI,EAAE,IAAhB;AAAsB,WAAGS;AAAzB,OAAP;;AACF,SAAKX,gBAAgB,CAACc,aAAtB;AACE,YAAMC,IAAI,GAAG,EAAE,GAAGP;AAAL,OAAb;AACAO,MAAAA,IAAI,CAACb,IAAL,GAAY,KAAZ;AACA,aAAOa,IAAP;;AACF;AACE,aAAOP,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAeD,cAAf","sourcesContent":["\nimport MESSAGE_CONSTANT from './../constants/messageConstant';\nlet initialState = {\n  open: false,\n  duration: 2000,\n  message: 'This is a message',\n  variant: 'filled',\n  type: 'success'\n}\n\nconst messageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MESSAGE_CONSTANT.SET_MESSAGE:\n      const res = action.payload;\n      const arr = { ...state };\n      if (typeof res === 'string') {\n        return { ...arr, open: true, message: res.message };\n      }\n      return { ...arr, open: true, ...res };\n    case MESSAGE_CONSTANT.CLOSE_MESSAGE:\n      const data = { ...state };\n      data.open = false;\n      return data;\n    default:\n      return state;\n  }\n}\n\nexport default messageReducer;\n"]},"metadata":{},"sourceType":"module"}