{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\pages\\\\CreateQuestion.js\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport PropTypes from \"prop-types\";\nimport React, { useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport useTitle from \"hooks/useTitle\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport questionApi from \"apis/questionApi\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  content: yup.string().trim().required(\"Input value\"),\n  answer1: yup.string().trim().required(\"Input value\"),\n  answer2: yup.string().trim().required(\"Input value\"),\n  answer3: yup.string().trim().required(\"Input value\")\n});\nconst useStyle = makeStyles(() => ({\n  container: {\n    margin: \"3.2rem 0\"\n  },\n  root: {\n    padding: \"2.8rem 3.6rem\",\n    boxShadow: \"var(--box-shadow)\",\n    borderRadius: \"var(--border-radius)\",\n    backgroundColor: \"var(--bg-color-sec)\"\n  },\n  title: {\n    color: \"var(--title-color)\",\n    textTransform: \"capitalize\",\n    fontSize: \"2.8rem\",\n    marginBottom: \"1.2rem\"\n  },\n  grid: {\n    marginTop: \"2.4rem\",\n    marginBottom: \"2.4rem\"\n  },\n  tooltipIcon: {\n    fontSize: \"1.6rem\",\n    color: \"var(--label-color)\"\n  },\n  btn: {\n    marginLeft: \"1rem\",\n    textTransform: \"none\",\n    minWidth: \"14rem\"\n  },\n  btnReset: {\n    borderColor: \"var(--accent-color) !important\",\n    color: \"var(--accent-color) !important\",\n    \"&:hover, &:active\": {\n      filter: \"brightness(0.85)\"\n    }\n  },\n  sentenceInput: {\n    minHeight: \"8rem\"\n  }\n}));\n\nfunction CreateQuestionPage() {\n  _s();\n\n  var _errors$content, _errors$answer, _errors$answer2, _errors$answer3;\n\n  const classes = useStyle();\n  useTitle(\"Create quiz\");\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [submitting, setSubmitting] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [question, setQuestion] = useState({\n    content: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    check: [false, false, false]\n  });\n  const [indexCheck, setIndexCheck] = useState(-1);\n  const {\n    id,\n    quiz_id\n  } = useParams();\n\n  const handleChangeQuestion = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setQuestion({ ...question,\n      [name]: value\n    });\n  };\n\n  const handleCheck = e => {\n    const isNotCheckAll = arr => arr.every(v => v === false);\n\n    const newArr = { ...question\n    };\n\n    if (isNotCheckAll(question.check)) {\n      newArr.check[indexCheck] = true;\n      setQuestion(newArr);\n    } else {\n      newArr.check = newArr.check.fill(false);\n      newArr.check[indexCheck] = true;\n      setQuestion(newArr);\n    }\n  };\n\n  const handleUncheck = () => {\n    const newArr = { ...question\n    };\n    newArr.check[indexCheck] = false;\n    setQuestion(newArr);\n  };\n\n  const onSubmit = async () => {\n    try {\n      setSubmitting(true);\n\n      const isNotCheckAll = arr => arr.every(v => v === false);\n\n      if (isNotCheckAll(question.check)) {\n        dispatch(setMessage(\"Please check the correct answer\", 'error'));\n        setSubmitting(false);\n      } else {\n        const dataSend = {\n          Content: question.content,\n          Answers: [{\n            content: question.answer1,\n            isCorrect: question.check[0]\n          }, {\n            content: question.answer2,\n            isCorrect: question.check[1]\n          }, {\n            content: question.answer3,\n            isCorrect: question.check[2]\n          }]\n        };\n        const apiRes = await questionApi.postQuestion(quiz_id, dataSend);\n\n        if (apiRes) {\n          dispatch(setMessage('Create question successfully', 'success'));\n          setSubmitting(false);\n          history.replace(`/admin/quiz/details/${id}`);\n        }\n      }\n    } catch (error) {\n      dispatch(setMessage(error.response.data.message, 'error'));\n      setSubmitting(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ani-fade\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: classes.title,\n            children: \"Th\\xEAm c\\xE2u h\\u1ECFi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dyno-break\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.grid,\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n                  className: \"w-100\",\n                  label: \"C\\xE2u h\\u1ECFi\",\n                  error: Boolean(errors.content),\n                  inputProps: {\n                    name: \"content\",\n                    ...register(\"content\")\n                  },\n                  onChange: handleChangeQuestion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), errors.Content && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-error\",\n                  children: (_errors$content = errors.content) === null || _errors$content === void 0 ? void 0 : _errors$content.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n                  className: \"w-100\",\n                  label: \"\\u0110\\xE1p \\xE1n th\\u1EE9 nh\\u1EA5t\",\n                  onChange: handleChangeQuestion,\n                  error: Boolean(errors.answer1),\n                  inputProps: {\n                    name: \"answer1\",\n                    ...register(\"answer1\")\n                  },\n                  endAdornment: question.check[0] === false ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n                    className: \"dyno-setting-icon\",\n                    onMouseOver: () => setIndexCheck(0),\n                    onClick: handleCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                    className: \"dyno-setting-icon\",\n                    onMouseOver: () => setIndexCheck(0),\n                    onClick: handleUncheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this), errors.answer1 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-error\",\n                  children: (_errors$answer = errors.answer1) === null || _errors$answer === void 0 ? void 0 : _errors$answer.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n                  className: \"w-100\",\n                  label: \"\\u0110\\xE1p \\xE1n th\\u1EE9 hai\",\n                  onChange: handleChangeQuestion,\n                  error: Boolean(errors.answer2),\n                  inputProps: {\n                    name: \"answer2\",\n                    ...register(\"answer2\")\n                  },\n                  endAdornment: question.check[1] === false ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n                    className: \"dyno-setting-icon\",\n                    onMouseOver: () => setIndexCheck(1),\n                    onClick: handleCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                    className: \"dyno-setting-icon\",\n                    onMouseOver: () => setIndexCheck(1),\n                    onClick: handleUncheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), errors.answer2 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-error\",\n                  children: (_errors$answer2 = errors.answer2) === null || _errors$answer2 === void 0 ? void 0 : _errors$answer2.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n                  className: \"w-100\",\n                  label: \"\\u0110\\xE1p \\xE1n th\\u1EE9 ba\",\n                  onChange: handleChangeQuestion,\n                  error: Boolean(errors.answer3),\n                  inputProps: {\n                    name: \"answer3\",\n                    ...register(\"answer3\")\n                  },\n                  endAdornment: question.check[2] === false ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n                    className: \"dyno-setting-icon\",\n                    onMouseOver: () => setIndexCheck(2),\n                    onClick: handleCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                    className: \"dyno-setting-icon\",\n                    onMouseOver: () => setIndexCheck(2),\n                    onClick: handleUncheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this), errors.answer3 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-error\",\n                  children: (_errors$answer3 = errors.answer3) === null || _errors$answer3 === void 0 ? void 0 : _errors$answer3.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dyno-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-end jus-content-end pt-5 w-100\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: `${classes.btn} ${classes.btnReset}`,\n                color: \"secondary\",\n                endIcon: /*#__PURE__*/_jsxDEV(ResetIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 28\n                }, this),\n                variant: \"outlined\",\n                disabled: submitting,\n                onClick: () => history.push(\"/admin/quiz\"),\n                children: \"Quay l\\u1EA1i\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: `${classes.btn} _btn _btn-primary`,\n                disabled: submitting,\n                endIcon: submitting ? /*#__PURE__*/_jsxDEV(LoopIcon, {\n                  className: \"ani-spin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this),\n                variant: \"contained\",\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateQuestionPage, \"aHdkCeBvX0ds8sWaE3ki6xjMufU=\", false, function () {\n  return [useStyle, useTitle, useForm, useDispatch, useHistory, useParams];\n});\n\n_c = CreateQuestionPage;\nexport default CreateQuestionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateQuestionPage\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/pages/CreateQuestion.js"],"names":["yupResolver","Button","Grid","LoopIcon","ResetIcon","SaveIcon","InputCustom","PropTypes","React","useRef","useState","useForm","yup","useHistory","useDispatch","setMessage","CheckIcon","AddIcon","useTitle","CheckCircleIcon","makeStyles","questionApi","useParams","schema","object","shape","content","string","trim","required","answer1","answer2","answer3","useStyle","container","margin","root","padding","boxShadow","borderRadius","backgroundColor","title","color","textTransform","fontSize","marginBottom","grid","marginTop","tooltipIcon","btn","marginLeft","minWidth","btnReset","borderColor","filter","sentenceInput","minHeight","CreateQuestionPage","classes","register","handleSubmit","formState","errors","resolver","submitting","setSubmitting","dispatch","history","question","setQuestion","check","indexCheck","setIndexCheck","id","quiz_id","handleChangeQuestion","e","name","value","target","handleCheck","isNotCheckAll","arr","every","v","newArr","fill","handleUncheck","onSubmit","dataSend","Content","Answers","isCorrect","apiRes","postQuestion","replace","error","response","data","message","Boolean","push"],"mappings":"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","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport InputCustom from \"components/UI/InputCustom\";\nimport PropTypes from \"prop-types\";\nimport React, { useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"redux/actions/messageAction\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport useTitle from \"hooks/useTitle\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport questionApi from \"apis/questionApi\";\nimport { useParams } from \"react-router\";\n\nconst schema = yup.object().shape({\n  content: yup.string().trim().required(\"Input value\"),\n  answer1: yup.string().trim().required(\"Input value\"),\n  answer2: yup.string().trim().required(\"Input value\"),\n  answer3: yup.string().trim().required(\"Input value\"),\n});\n\nconst useStyle = makeStyles(() => ({\n  container: {\n    margin: \"3.2rem 0\",\n  },\n  root: {\n    padding: \"2.8rem 3.6rem\",\n    boxShadow: \"var(--box-shadow)\",\n    borderRadius: \"var(--border-radius)\",\n    backgroundColor: \"var(--bg-color-sec)\",\n  },\n\n  title: {\n    color: \"var(--title-color)\",\n    textTransform: \"capitalize\",\n    fontSize: \"2.8rem\",\n    marginBottom: \"1.2rem\",\n  },\n\n  grid: {\n    marginTop: \"2.4rem\",\n    marginBottom: \"2.4rem\",\n  },\n\n  tooltipIcon: {\n    fontSize: \"1.6rem\",\n    color: \"var(--label-color)\",\n  },\n\n  btn: {\n    marginLeft: \"1rem\",\n    textTransform: \"none\",\n    minWidth: \"14rem\",\n  },\n\n  btnReset: {\n    borderColor: \"var(--accent-color) !important\",\n    color: \"var(--accent-color) !important\",\n\n    \"&:hover, &:active\": {\n      filter: \"brightness(0.85)\",\n    },\n  },\n\n  sentenceInput: {\n    minHeight: \"8rem\",\n  },\n}));\n\nfunction CreateQuestionPage() {\n  const classes = useStyle();\n\n  useTitle(\"Create quiz\");\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const [submitting, setSubmitting] = useState(false);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [question, setQuestion] = useState({\n    content: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    check: [false, false, false],\n  });\n\n  const [indexCheck, setIndexCheck] = useState(-1);\n  const { id, quiz_id } = useParams();\n\n  const handleChangeQuestion = (e) => {\n    const { name, value } = e.target;\n    setQuestion({ ...question, [name]: value });\n  };\n\n  const handleCheck = (e) => {\n    const isNotCheckAll = (arr) => arr.every((v) => v === false);\n    const newArr = { ...question };\n    if (isNotCheckAll(question.check)) {\n      newArr.check[indexCheck] = true;\n      setQuestion(newArr);\n    } else {\n      newArr.check = newArr.check.fill(false);\n      newArr.check[indexCheck] = true;\n      setQuestion(newArr);\n    }\n  };\n  const handleUncheck = () => {\n    const newArr = { ...question };\n    newArr.check[indexCheck] = false;\n    setQuestion(newArr);\n  };\n  const onSubmit = async () => {\n    try {\n      setSubmitting(true);\n      const isNotCheckAll = (arr) => arr.every((v) => v === false);\n      if (isNotCheckAll(question.check)) {\n        dispatch(setMessage(\"Please check the correct answer\", 'error'));\n        setSubmitting(false);\n      }\n      else {\n        const dataSend = {\n          Content: question.content,\n          Answers: [\n            {\n              content: question.answer1,\n              isCorrect: question.check[0],\n            },\n            {\n              content: question.answer2,\n              isCorrect: question.check[1],\n            },\n            {\n              content: question.answer3,\n              isCorrect: question.check[2],\n            },\n          ],\n        };\n        const apiRes = await questionApi.postQuestion(quiz_id, dataSend);\n        if (apiRes) {\n          dispatch(setMessage('Create question successfully', 'success'));\n          setSubmitting(false);\n          history.replace(`/admin/quiz/details/${id}`);\n        }\n      }\n    } catch (error) {\n      dispatch(setMessage(error.response.data.message, 'error'));\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className={classes.container}>\n        <div className=\"ani-fade\">\n          <div>\n            <h1 className={classes.title}>Thêm câu hỏi</h1>\n            <div className=\"dyno-break\"></div>\n\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n              <Grid className={classes.grid} container spacing={3}>\n                <Grid item xs={12}>\n                  <InputCustom\n                    className=\"w-100\"\n                    label=\"Câu hỏi\"\n                    error={Boolean(errors.content)}\n                    inputProps={{\n                      name: \"content\",\n                      ...register(\"content\"),\n                    }}\n                    onChange={handleChangeQuestion}\n                  />\n                  {errors.Content && (\n                    <p className=\"text-error\">{errors.content?.message}</p>\n                  )}\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <InputCustom\n                    className=\"w-100\"\n                    label=\"Đáp án thứ nhất\"\n                    onChange={handleChangeQuestion}\n                    error={Boolean(errors.answer1)}\n                    inputProps={{\n                      name: \"answer1\",\n                      ...register(\"answer1\"),\n                    }}\n                    endAdornment={\n                      question.check[0] === false ? (\n                        <CheckIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(0)}\n                          onClick={handleCheck}\n                        />\n                      ) : (\n                        <CheckCircleIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(0)}\n                          onClick={handleUncheck}\n                        />\n                      )\n                    }\n                  />\n\n                  {errors.answer1 && (\n                    <p className=\"text-error\">{errors.answer1?.message}</p>\n                  )}\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <InputCustom\n                    className=\"w-100\"\n                    label=\"Đáp án thứ hai\"\n                    onChange={handleChangeQuestion}\n                    error={Boolean(errors.answer2)}\n                    inputProps={{\n                      name: \"answer2\",\n                      ...register(\"answer2\"),\n                    }}\n                    endAdornment={\n                      question.check[1] === false ? (\n                        <CheckIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(1)}\n                          onClick={handleCheck}\n                        />\n                      ) : (\n                        <CheckCircleIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(1)}\n                          onClick={handleUncheck}\n                        />\n                      )\n                    }\n                  />\n                  {errors.answer2 && (\n                    <p className=\"text-error\">{errors.answer2?.message}</p>\n                  )}\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <InputCustom\n                    className=\"w-100\"\n                    label=\"Đáp án thứ ba\"\n                    onChange={handleChangeQuestion}\n                    error={Boolean(errors.answer3)}\n                    inputProps={{\n                      name: \"answer3\",\n                      ...register(\"answer3\"),\n                    }}\n                    endAdornment={\n                      question.check[2] === false ? (\n                        <CheckIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(2)}\n                          onClick={handleCheck}\n                        />\n                      ) : (\n                        <CheckCircleIcon\n                          className=\"dyno-setting-icon\"\n                          onMouseOver={() => setIndexCheck(2)}\n                          onClick={handleUncheck}\n                        />\n                      )\n                    }\n                  />\n                  {errors.answer3 && (\n                    <p className=\"text-error\">{errors.answer3?.message}</p>\n                  )}\n                </Grid>\n              </Grid>\n              <div className=\"dyno-break\"></div>\n              {/* button group */}\n              <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\n                <Button\n                  className={`${classes.btn} ${classes.btnReset}`}\n                  color=\"secondary\"\n                  endIcon={<ResetIcon />}\n                  variant=\"outlined\"\n                  disabled={submitting}\n                  onClick={() => history.push(\"/admin/quiz\")}\n                >\n                  Quay lại\n                </Button>\n                <Button\n                  type=\"submit\"\n                  className={`${classes.btn} _btn _btn-primary`}\n                  disabled={submitting}\n                  endIcon={\n                    submitting ? (\n                      <LoopIcon className=\"ani-spin\" />\n                    ) : (\n                      <SaveIcon />\n                    )\n                  }\n                  variant=\"contained\"\n                >\n                  Create\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateQuestionPage;\n"]},"metadata":{},"sourceType":"module"}