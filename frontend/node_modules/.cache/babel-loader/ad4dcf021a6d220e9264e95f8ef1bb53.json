{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\pages\\\\Listening.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport useTitle from \"../hooks/useTitle\";\nimport { VideoCard } from \"material-ui-player\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getListening } from \"../redux/actions/listeningAction\";\nimport { useParams } from 'react-router-dom';\nimport incorrectIcon from 'assets/icons/checkAnswer/incorrect.gif';\nimport correctIcon from 'assets/icons/checkAnswer/correct.gif';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(theme => ({\n  tabcontents: {\n    border: \"1px solid #B7B7B7\",\n    padding: \"10px\",\n    backgroundColor: \"#FFF\",\n    borderRadius: \"0 10px 10px 10px\"\n  }\n}));\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nexport default function ListeningPage() {\n  _s();\n\n  useTitle(\"Listening\");\n  const classes = useStyle();\n  const [value, setValue] = useState(1);\n  const [checkAnswer, setCheckAnswer] = useState(false);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const listenId = useParams().id;\n  const {\n    listen,\n    questions\n  } = useSelector(state => state.listeningReducer);\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(getListening(listenId), [dispatch]));\n  const [answers, setAnswers] = useState([]);\n\n  const getScript = sct => {\n    let Script = [];\n\n    if (sct) {\n      Script = sct.split(\"\\n\");\n    }\n\n    return Script;\n  };\n\n  const [isCorrect, setisCorrect] = useState([]);\n\n  const handleClickShowAnswer = () => {\n    setShowAnswer(true);\n  };\n\n  const handleClickReset = () => {\n    if (window.confirm('Do you want reload page again?')) {\n      window.location.reload();\n    }\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleCheck = (index, i) => {\n    if (answers[index]) {\n      if (answers[index].includes(i)) {\n        for (var j = 0; j < answers[index].length; j++) {\n          if (answers[index][j] == i) {\n            answers[index].splice(j, 1);\n          }\n        }\n      } else {\n        answers[index].push(i);\n      }\n    } else {\n      let ar = [];\n      answers[index] = ar;\n      answers[index].push(i);\n    }\n  };\n\n  const handleClickCheckAnswer = () => {\n    if (answers.length > 0) {\n      for (var i = 0; i < answers.length; i++) {\n        if (answers[i]) {\n          if (answers[i].length > 0) {\n            if (answers[i].length > 1) {\n              isCorrect[i] = false;\n            } else {\n              if (questions[i].Answers[answers[i][0]].isCorrect == true) {\n                isCorrect[i] = true;\n              }\n\n              if (questions[i].Answers[answers[i][0]].isCorrect == false) {\n                isCorrect[i] = false;\n              }\n            }\n          } else {\n            if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n              window.close();\n            }\n          }\n        } else {\n          if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n            window.close();\n          }\n        }\n      }\n    } else {\n      if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n        window.close();\n      }\n    }\n\n    setCheckAnswer(true);\n    setShowAnswer(true);\n  };\n\n  console.log(localStorage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: listen.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: listen.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: listen.Video,\n          width: \"500\",\n          height: \"300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            borderBottom: 1,\n            borderColor: \"divider\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            value: value,\n            onChange: handleChange,\n            \"aria-label\": \"basic tabs example\",\n            indicatorColor: \"primary\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Script\",\n              ...a11yProps(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Quiz\",\n              ...a11yProps(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tabcontents,\n          children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n            value: value,\n            index: 0,\n            children: getScript(listen.Script).length != 0 && getScript(listen.Script).map(item => /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              align: \"justify\",\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: value,\n            index: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Answer the following questions about the interview.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 13\n            }, this), questions && questions.map((question, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [index + 1, \") \", question.Content, checkAnswer && isCorrect[index] == true && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: correctIcon,\n                    alt: \"Correct!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 17\n                }, this), checkAnswer && isCorrect[index] == false && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: incorrectIcon,\n                    alt: \"Correct!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: question.Answers.map((item, i) => showAnswer && item.isCorrect == true ? /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    id: `${item}-${i}`,\n                    onClick: () => handleCheck(index, i)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 30\n                  }, this),\n                  label: /*#__PURE__*/_jsxDEV(Typography, {\n                    style: {\n                      color: '#008000'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: item.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 69\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 28\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    id: `${item}-${i}`,\n                    onClick: () => handleCheck(index, i)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 30\n                  }, this),\n                  label: item.content\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => handleClickCheckAnswer(),\n              children: \"Check Answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => handleClickReset(),\n              children: \"Reset Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => handleClickShowAnswer(),\n              children: \"Show Answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ListeningPage, \"jNnBWdOq+A3V+tmQ4d6c6U8s0kU=\", false, function () {\n  return [useTitle, useStyle, useParams, useSelector, useDispatch];\n});\n\n_c2 = ListeningPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ListeningPage\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/pages/Listening.js"],"names":["React","useState","useEffect","PropTypes","Tabs","Tab","Typography","Box","useTitle","VideoCard","FormGroup","FormControlLabel","Checkbox","Container","Button","useDispatch","useSelector","getListening","useParams","incorrectIcon","correctIcon","makeStyles","useStyle","theme","tabcontents","border","padding","backgroundColor","borderRadius","TabPanel","props","children","value","index","other","p","propTypes","node","number","isRequired","a11yProps","id","ListeningPage","classes","setValue","checkAnswer","setCheckAnswer","showAnswer","setShowAnswer","listenId","listen","questions","state","listeningReducer","dispatch","answers","setAnswers","getScript","sct","Script","split","isCorrect","setisCorrect","handleClickShowAnswer","handleClickReset","window","confirm","location","reload","handleChange","event","newValue","handleCheck","i","includes","j","length","splice","push","ar","handleClickCheckAnswer","Answers","close","console","log","localStorage","Name","Description","Video","width","borderBottom","borderColor","map","item","question","Content","color","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport useTitle from \"../hooks/useTitle\";\nimport { VideoCard } from \"material-ui-player\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {getListening}  from \"../redux/actions/listeningAction\";\nimport { useParams } from 'react-router-dom';\nimport incorrectIcon from 'assets/icons/checkAnswer/incorrect.gif';\nimport correctIcon from 'assets/icons/checkAnswer/correct.gif'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles((theme) => ({\n  tabcontents: {\n    border: \"1px solid #B7B7B7\",\n    padding: \"10px\",\n    backgroundColor: \"#FFF\",\n    borderRadius: \"0 10px 10px 10px\",\n}\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function ListeningPage() {\n  useTitle(\"Listening\");\n  const classes = useStyle();\n  const [value, setValue] = useState(1);\n  const [checkAnswer, setCheckAnswer] = useState(false);\n  const [showAnswer, setShowAnswer] = useState(false);\n  \n\n  const listenId = useParams().id;\n  const {listen, questions} = useSelector((state) => state.listeningReducer);\n \n  const dispatch = useDispatch();\n  useEffect(() =>\n  dispatch(getListening(listenId),[dispatch]))\n\n  const [answers, setAnswers] = useState([]);\n\n  const getScript = (sct) =>{\n    let Script =[];\n    if(sct){\n    Script = sct.split(\"\\n\");\n    } \n    return Script;\n  };\n  const [isCorrect, setisCorrect] = useState([]);\n  const handleClickShowAnswer = () =>{\n     setShowAnswer(true)\n  };\n\n  const handleClickReset = () =>{\n    if (window.confirm('Do you want reload page again?')) {\n      window.location.reload();\n    }\n };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleCheck = (index, i) => {\n    if(answers[index]){\n      if(answers[index].includes(i)){\n        for (var j = 0; j < answers[index].length; j++) {\n          if (answers[index][j] == i) {\n             answers[index].splice(j, 1);\n          }\n        }\n      }\n      else{\n        answers[index].push(i)\n      }\n    }\n    else{\n      let ar=[];\n      answers[index]=ar;\n      answers[index].push(i);\n    }\n  };\n  \n  const handleClickCheckAnswer = ()=>{\n  if(answers.length>0){\n      for(var i=0;i<answers.length;i++){\n        if(answers[i])\n        {\n          if(answers[i].length>0){\n            if(answers[i].length>1) {isCorrect[i]=false;}\n            else{\n              if(questions[i].Answers[answers[i][0]].isCorrect==true) {isCorrect[i]=true;}\n              if(questions[i].Answers[answers[i][0]].isCorrect==false) {isCorrect[i]=false;}\n            }\n          }\n          else{\n            if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n              window.close();\n            }\n          }\n        }\n        else{\n          if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n            window.close();\n          }\n        }\n      }\n    }\n    else{\n        if (window.confirm('Chọn đáp án cho tất cả câu hỏi.')) {\n          window.close();\n        }\n    }\n    setCheckAnswer(true);\n    setShowAnswer(true)\n  }\n\n  console.log(localStorage\n    );\n  return (\n    <>\n      <Container>\n        <Typography variant=\"h6\" align=\"center\">\n      {listen.Name}\n        </Typography>\n\n        <Typography>\n        {listen.Description}\n        </Typography>\n\n        <p align=\"center\"><iframe src={listen.Video} width=\"500\" height=\"300\" ></iframe></p>\n\n        <Box sx={{ width: \"100%\" }}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }} >\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"basic tabs example\"\n              indicatorColor=\"primary\"\n            >\n              <Tab label=\"Script\" {...a11yProps(0)} />\n              <Tab label=\"Quiz\" {...a11yProps(1)} />\n            </Tabs>\n          </Box>\n          <div className={classes.tabcontents}>\n          <TabPanel value={value} index={0}>\n          {getScript(listen.Script).length!=0 && (getScript(listen.Script).map((item) =>\n            <Typography variant=\"body2\" align=\"justify\">\n             {item}\n            </Typography>\n         ))}\n          </TabPanel>\n\n          <TabPanel value={value} index={1}>\n            <Typography variant=\"h6\">\n              Answer the following questions about the interview.\n            </Typography>\n\n\n            {questions && (\n            questions.map((question, index) => \n            <><Typography variant=\"body2\">\n               {index+1}) {question.Content}\n                { checkAnswer && isCorrect[index]==true && (\n                <span>\n                <img src={correctIcon} alt=\"Correct!\"/>\n                </span>\n                )} \n                 { checkAnswer && isCorrect[index]==false &&(\n                <span>\n                <img src={incorrectIcon} alt=\"Correct!\"/>\n                </span>\n                )} \n              </Typography>\n              <FormGroup>\n                  {question.Answers.map((item, i) => \n                  (showAnswer && item.isCorrect==true ?(\n                  <FormControlLabel\n                    key={i}\n                    control={<Checkbox color=\"primary\" id={`${item}-${i}`} onClick={()=>handleCheck(index,i)}/>}\n                    label={<Typography style={{ color: '#008000' }}><strong>{item.content}</strong></Typography>}\n                  >\n                  </FormControlLabel>\n                  ):(\n                    <FormControlLabel\n                    key={i}\n                    control={<Checkbox color=\"primary\" id={`${item}-${i}`} onClick={()=>handleCheck(index,i)}/>}\n                    label={item.content}\n                  >\n                  </FormControlLabel>\n                  )\n                  ))} \n                </FormGroup></>                        \n            )\n            )}\n           \n\n            <Button color='primary' onClick={()=> handleClickCheckAnswer()}>Check Answers</Button>\n            <Button color='primary' onClick={()=> handleClickReset()}>Reset Quiz</Button>\n            <Button color='primary' onClick={()=> handleClickShowAnswer()}>Show Answers</Button>\n          </TabPanel>\n          </div>\n        </Box>\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}