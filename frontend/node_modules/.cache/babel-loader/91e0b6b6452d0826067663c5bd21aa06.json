{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\components\\\\UI\\\\RichTextEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  buttons: ['source', '|', 'bold', 'strikethrough', 'underline', 'italic', '|', 'ul', 'ol', '|', 'outdent', 'indent', '|', 'font', 'fontsize', 'brush', 'paragraph', '|', 'image', 'video', 'table', 'link', '|', 'align', 'undo', 'redo', '|', 'hr', 'eraser', 'copyformat', '|', 'symbol', 'fullsize', 'print', 'about']\n};\n\nconst RichTextEditor = ({\n  initialValue,\n  getValue\n}) => {\n  _s();\n\n  const editor = useRef(null);\n  return /*#__PURE__*/_jsxDEV(JoditEditor, {\n    ref: editor,\n    value: initialValue,\n    config: config,\n    tabIndex: 1 //   onBlur={(newContent) => getValue(newContent)}\n    ,\n    onChange: newContent => getValue(newContent)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RichTextEditor, \"WbIXHOMGZsKhEgHeGrw0ax78v7Y=\");\n\n_c = RichTextEditor;\nexport default RichTextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"RichTextEditor\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/components/UI/RichTextEditor.js"],"names":["React","useRef","JoditEditor","config","buttons","RichTextEditor","initialValue","getValue","editor","newContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AACA,MAAMC,MAAM,GAAI;AACdC,EAAAA,OAAO,EAAE,CACP,QADO,EACG,GADH,EAEP,MAFO,EAGP,eAHO,EAIP,WAJO,EAKP,QALO,EAKG,GALH,EAMP,IANO,EAOP,IAPO,EAOD,GAPC,EAQP,SARO,EAQI,QARJ,EAQe,GARf,EASP,MATO,EAUP,UAVO,EAWP,OAXO,EAYP,WAZO,EAYM,GAZN,EAaP,OAbO,EAcP,OAdO,EAeP,OAfO,EAgBP,MAhBO,EAgBC,GAhBD,EAiBP,OAjBO,EAiBE,MAjBF,EAiBU,MAjBV,EAiBkB,GAjBlB,EAkBP,IAlBO,EAmBP,QAnBO,EAoBP,YApBO,EAoBO,GApBP,EAqBP,QArBO,EAsBP,UAtBO,EAuBP,OAvBO,EAwBP,OAxBO;AADK,CAAhB;;AA4BA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA+B;AAAA;;AACpD,QAAMC,MAAM,GAAGP,MAAM,CAAC,IAAD,CAArB;AAEA,sBACE,QAAC,WAAD;AACE,IAAA,GAAG,EAAEO,MADP;AAEE,IAAA,KAAK,EAAEF,YAFT;AAGE,IAAA,MAAM,EAAEH,MAHV;AAIE,IAAA,QAAQ,EAAE,CAJZ,CAKE;AALF;AAME,IAAA,QAAQ,EAAGM,UAAD,IAAgBF,QAAQ,CAACE,UAAD;AANpC;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAbD;;GAAMJ,c;;KAAAA,c;AAeN,eAAeA,cAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport JoditEditor from \"jodit-react\";\nconst config =  {\n  buttons: [\n    'source', '|',\n    'bold',\n    'strikethrough',\n    'underline',\n    'italic', '|',\n    'ul',\n    'ol', '|',\n    'outdent', 'indent',  '|',\n    'font',\n    'fontsize',\n    'brush',\n    'paragraph', '|',\n    'image',\n    'video',\n    'table',\n    'link', '|',\n    'align', 'undo', 'redo', '|',\n    'hr',\n    'eraser',\n    'copyformat', '|',\n    'symbol',\n    'fullsize',\n    'print',\n    'about'\n],\n};\nconst RichTextEditor = ({ initialValue, getValue}) => {\n  const editor = useRef(null);\n\n  return (\n    <JoditEditor\n      ref={editor}\n      value={initialValue}\n      config={config}\n      tabIndex={1}\n      //   onBlur={(newContent) => getValue(newContent)}\n      onChange={(newContent) => getValue(newContent)}\n    />\n  );\n};\n\nexport default RichTextEditor;\n"]},"metadata":{},"sourceType":"module"}