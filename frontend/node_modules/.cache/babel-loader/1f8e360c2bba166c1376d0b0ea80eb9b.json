{"ast":null,"code":"var _jsxFileName = \"E:\\\\TLCN\\\\LearningEnglishWebsite\\\\frontend\\\\src\\\\pages\\\\GrammarByLevel.js\",\n    _s = $RefreshSig$();\n\nimport useTitle from 'hooks/useTitle';\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport React, { useState, useEffect } from 'react';\nimport grammarApi from '../apis/grammarApi';\nimport { useHistory, useParams } from 'react-router';\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from 'constants/index';\nimport { makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(() => ({\n  mobilelist: {\n    height: \"115px\"\n  },\n  floatleft: {\n    float: \"left\",\n    margin: \"0 10px 10px 0px\",\n    padding: \"2px\"\n  },\n  title: {\n    display: 'inline-block',\n    fontSize: '2.0rem',\n    fontWeight: 400,\n    color: 'blue',\n    margin: '0.8rem 0rem 0rem 0'\n  },\n  tldetail: {\n    fontSize: '1.5rem',\n    fontWeight: 400,\n    color: 'black'\n  },\n  textlimit: {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    width: \"500px\"\n  }\n}));\n\nfunction GrammarByLevelPage() {\n  _s();\n\n  useTitle('Grammar');\n  const [list, setList] = useState([]);\n  const classes = useStyle();\n  const history = useHistory();\n  const level = useParams().level;\n  useEffect(() => {\n    (async function () {\n      try {\n        const apiRes = await grammarApi.getGrammarByLevel(level);\n\n        if (apiRes.status === 200) {\n          console.log(apiRes.data);\n          setList(apiRes.data.grammars);\n        }\n      } catch (error) {}\n    })();\n\n    return () => {};\n  }, []);\n\n  const getImage = image => {\n    const imgSrc = cloudinaryImgOptimize(image ? image : DEFAULTS.IMAGE_SRC, 200, 200, true, true);\n    return imgSrc;\n  };\n\n  const viewDetail = id => {\n    history.push(`/grammar/details/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      children: [\"Level \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), list && list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mobilelist,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.floatleft,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              height: \"80px\",\n              width: \"80px\",\n              src: getImage(item.Image),\n              onClick: () => viewDetail(item._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: classes.title,\n          href: `/grammar/details/${item._id}`,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", item.Title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 78\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.textlimit,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.tldetail,\n            children: item.Content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GrammarByLevelPage, \"H333elAFALJwB7h3PgRMirIsP14=\", false, function () {\n  return [useTitle, useStyle, useHistory, useParams];\n});\n\n_c = GrammarByLevelPage;\nexport default GrammarByLevelPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GrammarByLevelPage\");","map":{"version":3,"sources":["E:/TLCN/LearningEnglishWebsite/frontend/src/pages/GrammarByLevel.js"],"names":["useTitle","Typography","Accordion","AccordionSummary","React","useState","useEffect","grammarApi","useHistory","useParams","cloudinaryImgOptimize","DEFAULTS","makeStyles","useStyle","mobilelist","height","floatleft","float","margin","padding","title","display","fontSize","fontWeight","color","tldetail","textlimit","overflow","textOverflow","whiteSpace","width","GrammarByLevelPage","list","setList","classes","history","level","apiRes","getGrammarByLevel","status","console","log","data","grammars","error","getImage","image","imgSrc","IMAGE_SRC","viewDetail","id","push","map","item","Image","_id","Title","Content"],"mappings":"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","sourcesContent":["import useTitle from 'hooks/useTitle';\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport React, { useState, useEffect } from 'react';\nimport grammarApi from '../apis/grammarApi';\nimport { useHistory, useParams } from 'react-router';\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from 'constants/index';\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyle = makeStyles(() => ({\n  mobilelist : {\n    height: \"115px\",\n \n},\nfloatleft: {\n  float: \"left\",\n  margin: \"0 10px 10px 0px\",\n  padding: \"2px\",\n},\ntitle: {\n  display: 'inline-block',\n  fontSize: '2.0rem',\n  fontWeight: 400,\n  color: 'blue',\n  margin: '0.8rem 0rem 0rem 0',\n},\ntldetail: {\n  fontSize: '1.5rem',\n  fontWeight:400,\n  color: 'black', \n},\ntextlimit: {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  width: \"500px\",\n}\n\n}));\n\nfunction GrammarByLevelPage() {\n  useTitle('Grammar');\n  const [list, setList] = useState([]);\n  const classes= useStyle();\n  const history = useHistory();\n\n  const  level = useParams().level;\n  \n   useEffect(() => {\n   (async function () {\n     try {\n       const apiRes = await grammarApi.getGrammarByLevel(level);\n       if (apiRes.status === 200) {\n           console.log(apiRes.data)\n         setList(apiRes.data.grammars);\n       }\n     } catch (error) {}\n   })();\n \n   return () => {};\n }, []);\n\n const getImage = (image) =>{\n    const imgSrc = cloudinaryImgOptimize( image ? image : DEFAULTS.IMAGE_SRC,\n         200,\n         200,\n         true,\n         true\n     );\n     return imgSrc;\n}\n\nconst viewDetail=(id)=>{\n    history.push(`/grammar/details/${id}`)\n}\n\n  return (\n    <div className=\"container\">\n\n        <Typography variant=\"h6\" align=\"center\">\n               Level {level}\n        </Typography>\n                \n      {list &&(\n      list.map((item) => \n   \n      <div className={classes.mobilelist} >\n      <div>\n        <div className={classes.floatleft}>\n          <a>\n            <img height=\"80px\" width=\"80px\" src={getImage(item.Image)} onClick={()=>viewDetail(item._id)}/>\n          </a>\n          </div>\n          <a className={classes.title} href={`/grammar/details/${item._id}`}><strong> {item.Title}</strong></a>\n          <br></br>\n          \n          <div className={classes.textlimit}>\n          <span className={classes.tldetail}>{item.Content}</span>\n          </div>\n      \n      </div>\n\n    </div>\n   \n     \n      ))}\n\n     \n    </div>\n  );\n}\n\nexport default GrammarByLevelPage;\n"]},"metadata":{},"sourceType":"module"}