{"version":3,"sources":["apis/grammarApi.js","redux/actions/grammarAction.js","pages/GrammarDetail.js"],"names":["URL","grammarApi","getGrammar","id","axios","get","getGrammarById","getGrammarByLevel","level","token","headers","Authorization","getGrammarLevels","getAllGrammar","postGrammar","formData","post","header","putGrammar","put","params","deleteGrammar","patch","searchGrammar","title","dispatch","a","response","status","type","GRAMMAR_CONSTANT","GET_GRAMMAR","payload","data","SET_GRAMMAR_ERROR","message","DELETE_GRAMMAR","useStyle","makeStyles","borderTopic","borderStyle","borderColor","borderWidth","backgroundColor","width","height","grammarbox","padding","border","marginBottom","picture","marginLeft","TabPanel","props","children","value","index","other","role","hidden","sx","p","a11yProps","GrammarDetailPage","useTitle","classes","useState","setValue","grammarId","useParams","grammar","useSelector","state","grammarReducer","history","useHistory","useDispatch","useEffect","getText","text","Text","split","imgSrc","cloudinaryImgOptimize","Image","DEFAULTS","IMAGE_SRC","variant","align","Title","Content","Video","src","className","alt","Audio","controls","borderBottom","onChange","_event","newValue","indicatorColor","label","dangerouslySetInnerHTML","__html","Script","Items","map","item","Point","Examples","it","color","onClick","push"],"mappings":"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","file":"static/js/38.ac1ed63c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst URL = `/api/grammar`;\r\n\r\nconst grammarApi = {\r\n  getGrammar: (id) => {\r\n    return axios.get(`${URL}/get-grammar/${id}`)\r\n  },\r\n\r\n  getGrammarById: (id) => {\r\n    return axios.get(`${URL}/get-grammar-by-id/${id}`)\r\n  },\r\n\r\n  getGrammarByLevel: (level, token) => {\r\n    return axios.get(`${URL}/get-grammar-by-level/${level}`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  getGrammarLevels: (token) => {\r\n    return axios.get(`${URL}/get-grammar-levels`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  getAllGrammar: (token) => {\r\n    return axios.get(`${URL}/get-all-grammar`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  postGrammar: (formData) => {\r\n    return axios.post(`${URL}/post-grammar`, {...formData},\r\n    {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    })\r\n  },\r\n\r\n  putGrammar: (id, formData) => {\r\n    return axios.put(`${URL}/put-grammar/${id}`, { ...formData},\r\n    {\r\n      params: { id },\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n\r\n  deleteGrammar: (id) => {\r\n    return axios.patch(`${URL}/delete-grammar/${id}`)\r\n  },\r\n\r\n  searchGrammar: (title) => {\r\n    return axios.get(`${URL}/search-grammar`, {params: {title}})\r\n  },\r\n}\r\n\r\nexport default grammarApi;\r\n","import GRAMMAR_CONSTANT from \"../constants/grammarConstant\";\r\nimport grammarApi from \"./../../apis/grammarApi\";\r\n\r\n\r\nexport const getGrammar = (id) => {\r\n    return async (dispatch) => {\r\n        try { \r\n          const response = await grammarApi.getGrammar(id);\r\n          if(response.status===200){\r\n            dispatch({\r\n              type: GRAMMAR_CONSTANT.GET_GRAMMAR,\r\n              payload: response.data,\r\n            })\r\n          }\r\n          else\r\n          {\r\n            dispatch({\r\n              type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n              payload: response.data.message,\r\n            })\r\n          }\r\n        } catch (error) {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: error.response.message,\r\n          })\r\n        }\r\n      }\r\n};\r\n\r\nexport const getAllGrammar = () => {\r\n  return async (dispatch, getState) => {\r\n      try { \r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_LOADING,\r\n          payload:true,\r\n        });\r\n\r\n        const {\r\n          authReducer: { user },\r\n        } = getState();\r\n\r\n        const response = await grammarApi.getAllGrammar(user.access_token);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.GET_ALL_GRAMMAR,\r\n            payload: response.data.grammars,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const getGrammarByLevel = (level) => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.getGrammarByLevel(level);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.GET_GRAMMAR_BY_LEVEL,\r\n            payload: response.data.grammars,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const getGrammarLevels = () => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.getGrammarLevels();\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.GET_GRAMMAR_LEVELS,\r\n            payload: response.data.levels,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const postGrammar = (formData) => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.postGrammar(formData);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.CREATE_GRAMMAR,\r\n            payload: response.data.grammar,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const putGrammar = (id, formData) => {\r\n  return async (dispatch)=>{\r\n    try{\r\n        const response = await grammarApi.putGrammar(id, formData);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.EDIT_GRAMMAR,\r\n            payload: response.data.grammar,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const deleteGrammar = (id) => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.deleteGrammar(id);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.DELETE_GRAMMAR,\r\n            payload: id,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport useTitle from \"../hooks/useTitle\";\r\nimport { VideoCard } from \"material-ui-player\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {getGrammar}  from \"../redux/actions/grammarAction\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { cloudinaryImgOptimize } from \"helper\";\r\nimport { DEFAULTS } from '../constants/index';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  borderTopic: {\r\n      borderStyle: \"solid\",\r\n      borderColor: \"initial\",\r\n      borderWidth: \"1px\",\r\n      backgroundColor: \"#ccff66\",\r\n      width: \"700px\",\r\n      height: \"auto\",\r\n    },\r\n    grammarbox: {\r\n      backgroundColor: \"#99ffff\",\r\n\r\n      padding: \"10px 10px\",\r\n      border: \"1px solid #666\",\r\n      marginBottom: \"10px\",\t\r\n    },\r\n    picture: {\r\n      width: '50rem',\r\n      height: '30rem',\r\n      marginLeft: '15rem',\r\n    },\r\n \r\n}));\r\n\r\n\r\nfunction TabPanel(props) {\r\nconst { children, value, index, ...other } = props;\r\n\r\n\r\nreturn (\r\n  <div\r\n    role=\"tabpanel\"\r\n    hidden={value !== index}\r\n    id={`simple-tabpanel-${index}`}\r\n    aria-labelledby={`simple-tab-${index}`}\r\n    {...other}\r\n  >\r\n    {value === index && (\r\n      <Box sx={{ p: 3 }}>\r\n        <Typography>{children}</Typography>\r\n      </Box>\r\n    )}\r\n  </div>\r\n);\r\n}\r\n\r\nTabPanel.propTypes = {\r\nchildren: PropTypes.node,\r\nindex: PropTypes.number.isRequired,\r\nvalue: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\nreturn {\r\n  id: `simple-tab-${index}`,\r\n  \"aria-controls\": `simple-tabpanel-${index}`,\r\n};\r\n}\r\n\r\nexport default function GrammarDetailPage() {\r\n  useTitle(\"Grammar Details\");\r\n  const classes= useStyle();\r\n  const [value, setValue] = useState(0);\r\n  const grammarId = useParams().id;\r\n  const {grammar} = useSelector((state) => state.grammarReducer);\r\n \r\n  const history = useHistory();\r\n\r\n  function handleClickEdit() {\r\n    history.push(`/admin/grammar/edit/${grammarId}`);\r\n  }\r\n\r\n  function handleClickGoBack() {\r\n    history.push(\"/admin/grammar\");\r\n  }\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => \r\n  dispatch(getGrammar(grammarId)), [dispatch])\r\n\r\n  const getText = (text) =>{\r\n    let Text =[];\r\n    if(text){\r\n    Text = text.split(\"\\n\");\r\n    } \r\n    return Text;\r\n  };\r\n\r\n  let imgSrc = null;\r\n    if(grammar)\r\n    {\r\n        imgSrc = cloudinaryImgOptimize( grammar.Image ? grammar.Image : DEFAULTS.IMAGE_SRC,\r\n            200,\r\n            200,\r\n            true,\r\n            true\r\n        );\r\n    }\r\n\r\n  const handleChange = (_event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n \r\n  return (\r\n    <>\r\n      <Container>\r\n        <><Typography variant=\"h6\" align=\"center\">\r\n            {grammar.Title}\r\n        </Typography>\r\n        <Typography>\r\n            {grammar.Content}\r\n        </Typography></>\r\n\r\n        {grammar.Video ?  (\r\n              <p align=\"center\"><iframe src= {grammar.Video} width=\"500\" height=\"300\"></iframe></p>             \r\n            ):(              \r\n                <img className={classes.picture} src={imgSrc} alt=\"photo\" align=\"center\" />\r\n        )}\r\n        \r\n        {grammar.Audio && (\r\n        <audio controls>\r\n        <source src={grammar.Audio} type=\"audio/mpeg\"/>\r\n        Your browser does not support the audio element.\r\n        </audio>\r\n        )}\r\n\r\n        <Box sx={{ width: \"100%\" }}>\r\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              aria-label=\"basic tabs example\"\r\n              indicatorColor=\"primary\"\r\n            >\r\n              <Tab label=\"Script\" {...a11yProps(0)} />\r\n              <Tab label=\"Grammar\" {...a11yProps(1)} />\r\n             \r\n            </Tabs>\r\n          </Box>\r\n          <TabPanel value={value} index={0}>\r\n          <td dangerouslySetInnerHTML={{__html: grammar.Script}} />\r\n          </TabPanel>\r\n\r\n          <TabPanel value={value} index={1}>\r\n          {grammar.Items && (\r\n              grammar.Items.map((item, index) =>\r\n            <>\r\n            <Typography className={classes.grammarbox}>\r\n              <p><strong>Point {index+1} :  </strong>{item.Point}</p>\r\n            </Typography>\r\n           \r\n            <div>\r\n                {getText(item.Examples).map((it) => \r\n                <Typography variant=\"body2\" align=\"justify\">\r\n                {it}\r\n                </Typography>\r\n                )}\r\n            </div></>\r\n         ))}\r\n          </TabPanel>\r\n    <Button color='primary' onClick={() => handleClickGoBack()}>GO BACK</Button>\r\n    <Button color='primary'onClick={() => handleClickEdit()}>Edit</Button>\r\n           \r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}