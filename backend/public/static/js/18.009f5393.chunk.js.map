{"version":3,"sources":["apis/grammarApi.js","apis/listeningApi.js","redux/actions/grammarAction.js","redux/actions/listeningAction.js","../node_modules/@material-ui/icons/ArrowDownward.js","../node_modules/@material-ui/icons/ArrowUpward.js","../node_modules/@material-ui/icons/FilterList.js","apis/quizApi.js","components/UI/ListeningDetailModal/style.js","components/UI/ListeningDetailModal/index.js","components/UI/SortType/style.js","components/UI/SortType/index.js","components/QuizAdmin/style.js","components/QuizAdmin/ListeningItem/style.js","components/QuizAdmin/ListeningItem/index.js","components/QuizAdmin/GrammarItem/style.js","components/QuizAdmin/GrammarItem/index.js","components/UI/QuizType/style.js","components/UI/QuizType/index.js","components/QuizAdmin/WordPackSetting.js","components/QuizAdmin/WordSkeleton.js","components/QuizAdmin/index.js","components/QuizAdmin/data.js","pages/QuizAdmin.js"],"names":["URL","grammarApi","getGrammar","id","axios","get","getGrammarById","getGrammarByLevel","level","token","headers","Authorization","getGrammarLevels","getAllGrammar","postGrammar","formData","post","header","putGrammar","put","params","deleteGrammar","patch","searchGrammar","title","listeningApi","getListening","getListenByTopic","topic","type","getListenById","getListenTopics","getAllListen","searchListen","name","postListen","putListen","deleteListen","dispatch","a","response","status","GRAMMAR_CONSTANT","GET_GRAMMAR","payload","data","SET_GRAMMAR_ERROR","message","DELETE_GRAMMAR","LISTEN_CONSTANT","GET_LISTENING","SET_LISTEN_ERROR","DELETE_LISTEN","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","quizApi","getQuiz","getQuizByListen","getAllQuiz","postQuizByListen","deleteQuizByListen","delete","deleteQuiz","getAllListenAndGrammar","makeStyles","theme","root","backgroundColor","paper","maxWidth","width","padding","breakpoints","up","color","textTransform","fontSize","wordSpacing","fontWeight","content","display","gridTemplateColumns","gap","lineHeight","letterSpacing","closeIcon","transition","transform","label","textDecoration","picture","height","word","mean","phonetic","topics","margin","WordDetailModal","props","_id","Image","Name","Topic","CreateDate","open","onClose","loading","classes","useStyle","Popover","anchorReference","className","wordTitle","onClick","Skeleton","style","variant","animation","src","cloudinaryImgOptimize","alt","Boolean","defaultProps","Description","menu","menuItem","SortTypeModal","classNameIcon","onSelect","useState","anchorEl","setAnchorEl","handleClose","v","event","currentTarget","Menu","keepMounted","MenuItem","dictionaryRoot","borderBottom","cursor","ListeningItem","imgSrc","DEFAULTS","IMAGE_SRC","history","useHistory","modal","setModal","useDispatch","push","onShowDetail","GrammarItem","Title","Level","Content","dialogMUIRoot","formId","addAllOption","optionList","ListeningTopic","onChoose","onCancel","okBtnText","cancelBtnText","okBtnProps","cancelBtnProps","Dialog","dialogPaper","fullWidth","disableBackdropClick","DialogTitle","DialogContent","dividers","breakLine","onSubmit","e","preventDefault","target","Grid","container","spacing","item","xs","md","SelectCustom","index","options","QUIZ_TYPE","inputProps","DialogActions","Button","autoFocus","disableFocusRipple","component","form","ListeningTopicSetting","openWordPack","setOpenWordPack","QuizType","WordSkeleton","Array","fill","map","_","QuizAdmin","listen","grammar","onLoadData","more","isFirstLoad","onSettingWordPack","onSearchWord","useTitle","WordPackSetting","contentWrap","listWrap","list","skeleton","length","listItem","InfiniteScroll","onTouchAnchor","threshold","onSortTypeChange","QuizAdminData","page","setPage","sortType","packInfo","setPackInfo","setLoading","setListen","setGrammar","setMore","setIsFirstLoad","totalPage","useRef","preSearchList","useEffect","isSub","apiRes","console","log","listens","grammars","current","info","isEqual","equalArray","ListeningDetailModal","QuizAdminPage"],"mappings":"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","file":"static/js/18.009f5393.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst URL = `/api/grammar`;\r\n\r\nconst grammarApi = {\r\n  getGrammar: (id) => {\r\n    return axios.get(`${URL}/get-grammar/${id}`)\r\n  },\r\n\r\n  getGrammarById: (id) => {\r\n    return axios.get(`${URL}/get-grammar-by-id/${id}`)\r\n  },\r\n\r\n  getGrammarByLevel: (level, token) => {\r\n    return axios.get(`${URL}/get-grammar-by-level/${level}`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  getGrammarLevels: (token) => {\r\n    return axios.get(`${URL}/get-grammar-levels`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  getAllGrammar: (token) => {\r\n    return axios.get(`${URL}/get-all-grammar`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  postGrammar: (formData) => {\r\n    return axios.post(`${URL}/post-grammar`, {...formData},\r\n    {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    })\r\n  },\r\n\r\n  putGrammar: (id, formData) => {\r\n    return axios.put(`${URL}/put-grammar/${id}`, { ...formData},\r\n    {\r\n      params: { id },\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n\r\n  deleteGrammar: (id) => {\r\n    return axios.patch(`${URL}/delete-grammar/${id}`)\r\n  },\r\n\r\n  searchGrammar: (title) => {\r\n    return axios.get(`${URL}/search-grammar`, {params: {title}})\r\n  },\r\n}\r\n\r\nexport default grammarApi;\r\n","import axios from \"axios\";\r\nconst URL = `/api/listening`;\r\n\r\nconst listeningApi = {\r\n  getListening: (id) => {\r\n    return axios.get(`${URL}/get-listening/${id}`);\r\n  },\r\n\r\n  getListenByTopic: (topic, type) => {\r\n    return axios.get(`${URL}/get-listen-by-topic`, {params: {topic, type}})\r\n  },\r\n\r\n  getListenById: (id) => {\r\n    return axios.get(`${URL}/get-listen-by-id/${id}`)\r\n  },\r\n\r\n  getListenTopics: (topic, type) => {\r\n    return axios.get(`${URL}/get-listen-topics`,{params: { topic, type}})\r\n  },\r\n\r\n  getAllListen: (type) => {\r\n    return axios.get(`${URL}/get-all-listen`, {params: {type}})\r\n  },\r\n\r\n  searchListen: (name) => {\r\n    return axios.get(`${URL}/search-listen`, {params: {name}})\r\n  },\r\n\r\n  postListen: (formData) => {\r\n    return axios.post(`${URL}/post-listen`, {...formData},\r\n    {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    })\r\n  },\r\n\r\n  putListen: (id, formData) => {\r\n    return axios.put(`${URL}/put-listen/${id}`, { ...formData},\r\n    {\r\n      params: { id },\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n\r\n  deleteListen: (id) => {\r\n    return axios.patch(`${URL}/delete-listen/${id}`)\r\n  },\r\n}\r\n\r\nexport default listeningApi;\r\n","import GRAMMAR_CONSTANT from \"../constants/grammarConstant\";\r\nimport grammarApi from \"./../../apis/grammarApi\";\r\n\r\n\r\nexport const getGrammar = (id) => {\r\n    return async (dispatch) => {\r\n        try { \r\n          const response = await grammarApi.getGrammar(id);\r\n          if(response.status===200){\r\n            dispatch({\r\n              type: GRAMMAR_CONSTANT.GET_GRAMMAR,\r\n              payload: response.data,\r\n            })\r\n          }\r\n          else\r\n          {\r\n            dispatch({\r\n              type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n              payload: response.data.message,\r\n            })\r\n          }\r\n        } catch (error) {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: error.response.message,\r\n          })\r\n        }\r\n      }\r\n};\r\n\r\nexport const getAllGrammar = () => {\r\n  return async (dispatch, getState) => {\r\n      try { \r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_LOADING,\r\n          payload:true,\r\n        });\r\n\r\n        const {\r\n          authReducer: { user },\r\n        } = getState();\r\n\r\n        const response = await grammarApi.getAllGrammar(user.access_token);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.GET_ALL_GRAMMAR,\r\n            payload: response.data.grammars,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const getGrammarByLevel = (level) => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.getGrammarByLevel(level);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.GET_GRAMMAR_BY_LEVEL,\r\n            payload: response.data.grammars,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const getGrammarLevels = () => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.getGrammarLevels();\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.GET_GRAMMAR_LEVELS,\r\n            payload: response.data.levels,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const postGrammar = (formData) => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.postGrammar(formData);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.CREATE_GRAMMAR,\r\n            payload: response.data.grammar,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const putGrammar = (id, formData) => {\r\n  return async (dispatch)=>{\r\n    try{\r\n        const response = await grammarApi.putGrammar(id, formData);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.EDIT_GRAMMAR,\r\n            payload: response.data.grammar,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const deleteGrammar = (id) => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.deleteGrammar(id);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.DELETE_GRAMMAR,\r\n            payload: id,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n","import LISTEN_CONSTANT from \"../constants/listeningConstant\";\r\nimport listeningApi from \"./../../apis/listeningApi\";\r\nimport authReducer from \"../reducers/authReducer\";\r\n\r\n\r\nexport const getListening = (id) => {\r\n    return async (dispatch) => {\r\n        try {           \r\n          const response = await listeningApi.getListening(id);\r\n            if(response.status===200){\r\n              dispatch({\r\n                  type: LISTEN_CONSTANT.GET_LISTENING,\r\n                  payload: response.data,\r\n                })\r\n            }\r\n           else\r\n            {\r\n              dispatch({\r\n                type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n                payload: response.data.message,\r\n              })\r\n            }\r\n            \r\n        } catch (error) {\r\n          dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: error.message,\r\n         })\r\n          \r\n        }\r\n      }\r\n};\r\n\r\nexport const getListenByTopic = (topic) => {\r\n  return async (dispatch, getState) => {\r\n      try { \r\n        const {\r\n          authReducer: { user },\r\n        } = getState();\r\n\r\n        const response = await listeningApi.getListenByTopic(topic, user.access_token);\r\n        if(response.status===200){\r\n          dispatch({\r\n              type: LISTEN_CONSTANT.GET_LISTEN_BY_TOPIC,\r\n              payload: response.data.topics,\r\n            })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const getAllListen = () => {\r\n  return async (dispatch, getState) => {\r\n      try { \r\n        dispatch({\r\n          type: LISTEN_CONSTANT.SET_LISTEN_LOADING,\r\n          payload:true,\r\n        });\r\n\r\n        const {\r\n          authReducer: { user },\r\n        } = getState();\r\n\r\n        const response = await listeningApi.getAllListen(user.access_token);\r\n        if(response.status===200){\r\n          dispatch({\r\n              type: LISTEN_CONSTANT.GET_ALL_LISTEN,\r\n              payload: response.data.listens,\r\n            })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const getListenById = (id) => {\r\n  return async (dispatch, getState) => {\r\n      try { \r\n        const {\r\n          authReducer: { user },\r\n        } = getState();\r\n\r\n        const response = await listeningApi.getListenById(id, user.access_token);\r\n        if(response.status===200){\r\n          dispatch({\r\n              type: LISTEN_CONSTANT.GET_LISTEN_BY_ID,\r\n              payload: response.data.listen,\r\n            })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const getListenTopics = () => {\r\n  return async (dispatch, getState) => {\r\n      try { \r\n\r\n        const {\r\n          authReducer: { user },\r\n        } = getState();\r\n\r\n        const response = await listeningApi.getListenTopics(user.access_token);\r\n        if(response.status===200){\r\n          dispatch({\r\n              type: LISTEN_CONSTANT.GET_LISTEN_TOPICS,\r\n              payload: response.data.topics,\r\n            })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const postListen = (formData) => {\r\n  return async (dispatch, getState) => {\r\n      try { \r\n        const {\r\n          authReducer: { user },\r\n        } = getState();\r\n\r\n        const response = await listeningApi.postListen(formData , user.access_token);\r\n        if(response.status===200){\r\n          dispatch({\r\n              type: LISTEN_CONSTANT.CREATE_LISTEN,\r\n              payload: response.data.listen,\r\n            })\r\n           // toast.success(\"Add successfully\")\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const putListen = (id, formData) => {\r\n  return async (dispatch, getState) => {\r\n      try { \r\n        const {\r\n          authReducer: { user },\r\n        } = getState();\r\n\r\n        const response = await listeningApi.putListen(id, formData , user.access_token);\r\n        if(response.status===200){\r\n          dispatch({\r\n              type: LISTEN_CONSTANT.EDIT_LISTEN,\r\n              payload: response.data.listen,\r\n            })\r\n          //  toast.success(\"Edit successfully\")\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const deleteListen = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await listeningApi.deleteListen(id);\r\n      if (response.status===200) {\r\n        dispatch({\r\n          type: LISTEN_CONSTANT.DELETE_LISTEN,\r\n          payload: id,\r\n        })\r\n      }\r\n      else{\r\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n          payload: response.data.message,\r\n      })\r\n      }\r\n    } catch (error) {\r\n        dispatch({ type: LISTEN_CONSTANT.SET_LISTEN_ERROR,\r\n            payload: error.response.message,\r\n        })\r\n    }\r\n  }\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\n\nexports.default = _default;","import axios from \"axios\";\r\nconst URL = `/api/quiz`;\r\n\r\nconst quizApi = {\r\n  getQuiz: (id, token) => {\r\n    return axios.get(`${URL}/get-quiz-by-id/${id}`, {\r\n      headers: { Authorization: token },\r\n    });\r\n  },\r\n\r\n  getQuizByListen: (id) => {\r\n    return axios.get(`${URL}/get-quiz-by-listen/${id}`);\r\n  },\r\n  getAllQuiz: (token) => {\r\n    return axios.get(`${URL}/get-all-quiz`, {\r\n      headers: { Authorization: token },\r\n    });\r\n  },\r\n\r\n  postQuizByListen: (id) => {\r\n    return axios.post(`${URL}/post-quiz-by-listen/${id}`);\r\n  },\r\n\r\n  deleteQuizByListen: (id, token) => {\r\n    return axios.delete(`${URL}/delete-quiz-by-listen/${id}`, {\r\n      headers: { Authorization: token },\r\n    });\r\n  },\r\n\r\n  deleteQuiz: (id, token) => {\r\n    return axios.delete(`${URL}/delete-quiz-by-id/${id}`, {\r\n      headers: { Authorization: token },\r\n    });\r\n  },\r\n\r\n  getAllListenAndGrammar: () => {\r\n    return axios.get(`${URL}/get-all-listen-grammar`);\r\n  },\r\n};\r\n\r\nexport default quizApi;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n  },\r\n\r\n  paper: {\r\n    maxWidth: 350,\r\n    width: '100%',\r\n    backgroundColor: 'var(--bg-color-sec)',\r\n    padding: '2.4rem 3.2rem',\r\n\r\n    [theme.breakpoints.up('sm')]: {\r\n      maxWidth: 480,\r\n    },\r\n\r\n    [theme.breakpoints.up('md')]: {\r\n      maxWidth: 678,\r\n    },\r\n\r\n    maxHeight: '85vh',\r\n  },\r\n\r\n  title: {\r\n    color: 'var(--title-color)',\r\n    textTransform: 'capitalize',\r\n    fontSize: '2.2rem',\r\n    wordSpacing: 1.5,\r\n    fontWeight: 500,\r\n  },\r\n\r\n  content: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr',\r\n    gap: '0.8rem',\r\n\r\n    '& *': {\r\n      fontSize: '1.6rem',\r\n      lineHeight: 1.5,\r\n      letterSpacing: '0.5px',\r\n      color: 'var(--text-color)',\r\n    },\r\n  },\r\n\r\n  closeIcon: {\r\n    fontSize: '3.2rem',\r\n    color: 'var(--title-color)',\r\n    transition: 'all 0.5s',\r\n\r\n    '&:hover, &:active': {\r\n      transform: 'rotate(360deg)',\r\n    },\r\n  },\r\n\r\n  label: {\r\n    color: 'var(--label-color)',\r\n    textDecoration: 'underline',\r\n    fontSize: '1.7rem',\r\n  },\r\n\r\n  picture: {\r\n    width: '5.6rem',\r\n    height: '5.6rem',\r\n  },\r\n\r\n  word: {\r\n    fontSize: '2rem',\r\n    color: 'var(--secondary-color)',\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  type: {\r\n    fontWeight: 500,\r\n  },\r\n\r\n  mean: {\r\n    color: 'var(--text-color)',\r\n  },\r\n\r\n  phonetic: {\r\n    fontSize: '1.7rem',\r\n    color: 'var(--phonetic-color)',\r\n  },\r\n\r\n  topics: {\r\n    margin: '0 -0.4rem',\r\n\r\n    '& > *': {\r\n      margin: '0.4rem',\r\n    },\r\n  },\r\n}));\r\n","import Popover from '@material-ui/core/Popover';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { WORD_SPECIALTY } from 'constants/index';\r\nimport { TOPICS } from 'constants/topics';\r\nimport { cloudinaryImgOptimize } from 'helper';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Tag from '../Tag';\r\nimport useStyle from './style';\r\n\r\nfunction sliceTopics(topics) {\r\n  let res = [];\r\n  topics.forEach((topic) => {\r\n    res.push(TOPICS.find((i) => i.key === topic));\r\n  });\r\n  return res;\r\n}\r\n\r\nfunction WordDetailModal(props) {\r\n  const {\r\n    _id,\r\n    Image,\r\n    Name,\r\n    Topic,\r\n    CreateDate,\r\n    open,\r\n    onClose,\r\n    loading,\r\n  } = props;\r\n\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <Popover\r\n      classes={{\r\n        root: `${classes.root} flex-center`,\r\n        paper: `${classes.paper} container`,\r\n      }}\r\n      open={open}\r\n      onClose={onClose}\r\n      anchorReference={'none'}>\r\n      <div className=\"flex-center-between\">\r\n        <h2 className={classes.title}>\r\n          Chi tiết từ <span className={classes.wordTitle}>{`\"${Name}\"`}</span>\r\n        </h2>\r\n        <CloseIcon\r\n          className={`${classes.closeIcon} cur-pointer`}\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"english-break\"></div>\r\n\r\n      {loading ? (\r\n        <Skeleton\r\n          style={{ width: '100%', height: '35vh' }}\r\n          variant=\"rect\"\r\n          animation=\"wave\"\r\n        />\r\n      ) : (\r\n        <div className={classes.content}>\r\n          <div className=\"flex-center--ver my-4\">\r\n            {Image && Image !== '' && (\r\n              <img\r\n                src={cloudinaryImgOptimize(Image, 56, 56, true)}\r\n                alt=\"Photo\"\r\n                className={`${classes.picture} mr-8`}\r\n              />\r\n            )}\r\n            <div>\r\n              <p className={classes.word}>\r\n                {Name}&nbsp;\r\n               \r\n                <span className={classes.mean}>Create Date :{` - ${CreateDate}`}</span>\r\n              </p>\r\n              {Boolean(Topic) && (\r\n                <p className={`${classes.phonetic} mt-4`}>{Topic}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* {level !== '0' && (\r\n            <p className={classes.level}>\r\n              <b className={classes.label}>Cấp độ:</b>&nbsp;&nbsp;\r\n              {level}\r\n            </p>\r\n          )} */}\r\n         \r\n        </div>\r\n      )}\r\n    </Popover>\r\n  );\r\n}\r\n\r\nWordDetailModal.propTypes = {\r\n  loading: PropTypes.bool,\r\n  Description: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  Topic: PropTypes.string,\r\n  Image: PropTypes.string,\r\n  Name: PropTypes.string,\r\n  _id: PropTypes.string,\r\n};\r\n\r\nWordDetailModal.defaultProps = {\r\n  loading: true,\r\n  Description: '',\r\n  onClose: function () {},\r\n  open: false,\r\n  Topic: '',\r\n  Image: '',\r\n  Name: '',\r\n  _id: '',\r\n};\r\n\r\nexport default WordDetailModal;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  menu: {\r\n    backgroundColor: 'var(--bg-color-accent)',\r\n  },\r\n\r\n  menuItem: {\r\n    color: 'var(--text-color)',\r\n    fontSize: '1.6rem',\r\n  },\r\n}));\r\n","import Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ArrowDownIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpIcon from '@material-ui/icons/ArrowUpward';\r\nimport FilterIcon from '@material-ui/icons/FilterList';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport useStyle from './style';\r\n\r\nfunction SortTypeModal({ classNameIcon, onSelect }) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const classes = useStyle();\r\n\r\n  const handleOpenModal = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (v) => {\r\n    setAnchorEl(null);\r\n    if (typeof v === 'string') {\r\n      onSelect(v);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FilterIcon className={classNameIcon} onClick={handleOpenModal} />\r\n      <Menu\r\n        classes={{ paper: classes.menu }}\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}>\r\n        <MenuItem\r\n          className={classes.menuItem}\r\n          onClick={() => handleClose('Newest')}>\r\n          Newest&nbsp;\r\n          <ArrowDownIcon />\r\n        </MenuItem>\r\n        <MenuItem\r\n          className={classes.menuItem}\r\n          onClick={() => handleClose('Oldest')}>\r\n          Oldest&nbsp;\r\n          <ArrowUpIcon />\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nSortTypeModal.propTypes = {\r\n  classNameIcon: PropTypes.string,\r\n  onSelect: PropTypes.func,\r\n};\r\n\r\nSortTypeModal.defaultProps = {\r\n  classNameIcon: '',\r\n  onSelect: () => {},\r\n};\r\n\r\nexport default SortTypeModal;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { dictionaryRoot } from 'components/UI/style';\r\n\r\nexport default makeStyles((theme) => ({\r\n  ...dictionaryRoot(theme),\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  root: {\r\n    padding: '1.2rem 0',\r\n    borderBottom: 'solid 1px var(--border-color)',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.35s',\r\n\r\n    '&:hover, &:active': {\r\n      borderBottom: 'solid 1px var(--accent-color)',\r\n    },\r\n  },\r\n\r\n  picture: {\r\n    width: '5rem',\r\n    height: '5rem',\r\n  },\r\n\r\n  word: {\r\n    fontSize: '1.8rem',\r\n    fontWeight: 500,\r\n    color: 'var(--primary-color)',\r\n  },\r\n\r\n  type: {\r\n    color: 'var(--label-color)',\r\n  },\r\n\r\n  phonetic: {\r\n    fontSize: '1.5rem',\r\n    margin: '0.8rem 0',\r\n  },\r\n\r\n  mean: {\r\n    fontSize: '1.6rem',\r\n    color: 'var(--text-color)',\r\n    maxWidth: '80%',\r\n    lineHeight: 1.5,\r\n  },\r\n}));\r\n","\r\nimport { cloudinaryImgOptimize } from \"helper\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport useStyle from \"./style\";\r\nimport WordDetailModal from \"components/UI/WordDetailModal\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMessage } from \"redux/actions/messageAction\";\r\nimport { DEFAULTS } from '../../../constants/index';\r\nimport { deleteListen } from \"redux/actions/listeningAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ListeningItem({ _id, Name, Image, Topic, CreateDate }) {\r\n  const classes = useStyle();\r\n  const imgSrc = cloudinaryImgOptimize(\r\n    Image ? Image : DEFAULTS.IMAGE_SRC,\r\n    50,\r\n    50,\r\n    true,\r\n    true\r\n  );\r\n\r\n  const history = useHistory();\r\n  function handleClick(id) {\r\n    history.push(`/admin/quiz/details/${id}`);\r\n  }\r\n  const [modal, setModal] = useState({ loading: false, open: false });\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Bạn chắc chắn muốn xóa bài viết này?')) {\r\n       dispatch(deleteListen(id));\r\n       dispatch(setMessage(\"Delete successfully\", \"success\"));\r\n     window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`${classes.root} flex-center-between`}>\r\n        <div \r\n          className=\"w-100 flex-center--ver\"\r\n          onClick={() => handleClick(_id)}\r\n        >\r\n          <img className={classes.picture} src={imgSrc} alt=\"\" />\r\n          <div className=\"ml-8 flex-grow-1\">\r\n            <h3 className={classes.word}>\r\n              {Name}\r\n              \r\n            </h3>\r\n          \r\n              <p className={`${classes.phonetic} phonetic`}> Topic: {Topic} </p>\r\n           \r\n            <p className={classes.mean}>Create Date: {CreateDate}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-center--ver\">\r\n      </div>\r\n      </div>\r\n      {modal.open && (\r\n        <WordDetailModal\r\n          {...modal}\r\n          onClose={() => setModal({ open: false, loading: false })}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nListeningItem.propTypes = {\r\n  CreateDate: PropTypes.string,\r\n  onShowDetail: PropTypes.func,\r\n  Topic: PropTypes.string,\r\n  Image: PropTypes.string,\r\n  Name: PropTypes.string,\r\n  _id: PropTypes.string,\r\n};\r\n\r\nListeningItem.defaultProps = {\r\n  onShowDetail: function () {},\r\n};\r\n\r\nexport default ListeningItem;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  root: {\r\n    padding: '1.2rem 0',\r\n    borderBottom: 'solid 1px var(--border-color)',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.35s',\r\n\r\n    '&:hover, &:active': {\r\n      borderBottom: 'solid 1px var(--accent-color)',\r\n    },\r\n  },\r\n\r\n  picture: {\r\n    width: '5rem',\r\n    height: '5rem',\r\n  },\r\n\r\n  word: {\r\n    fontSize: '1.8rem',\r\n    fontWeight: 500,\r\n    color: 'var(--primary-color)',\r\n  },\r\n\r\n  type: {\r\n    color: 'var(--label-color)',\r\n  },\r\n\r\n  phonetic: {\r\n    fontSize: '1.5rem',\r\n    margin: '0.8rem 0',\r\n  },\r\n\r\n  mean: {\r\n    fontSize: '1.6rem',\r\n    color: 'var(--text-color)',\r\n    maxWidth: '80%',\r\n    lineHeight: 1.5,\r\n  },\r\n}));\r\n","\r\nimport { cloudinaryImgOptimize } from \"helper\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport useStyle from \"./style\";\r\nimport WordDetailModal from \"components/UI/WordDetailModal\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMessage } from \"redux/actions/messageAction\";\r\nimport { DEFAULTS } from '../../../constants/index';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { deleteGrammar } from \"redux/actions/grammarAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction GrammarItem({ _id, Title, Image, Level, Content }) {\r\n  const classes = useStyle();\r\n  const imgSrc = cloudinaryImgOptimize(\r\n    Image ? Image : DEFAULTS.IMAGE_SRC,\r\n    50,\r\n    50,\r\n    true,\r\n    true\r\n  );\r\n\r\n  const history = useHistory();\r\n  function handleClick(id) {\r\n    history.push(`/admin/quiz/details/${id}`);\r\n  }\r\n \r\n  const [modal, setModal] = useState({ loading: false, open: false });\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={`${classes.root} flex-center-between`}>\r\n        <div \r\n          className=\"w-100 flex-center--ver\"\r\n          onClick={() => handleClick(_id)}\r\n        >\r\n          <img className={classes.picture} src={imgSrc} alt=\"photo\" />\r\n          <div className=\"ml-8 flex-grow-1\">\r\n            <h3 className={classes.word}>\r\n              {Title}\r\n              \r\n            </h3>\r\n          \r\n              <p className={`${classes.phonetic} phonetic`}> Level: {Level} </p>\r\n           \r\n            <p className={classes.mean}>{Content}</p>\r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n      {modal.open && (\r\n        <WordDetailModal\r\n          {...modal}\r\n          onClose={() => setModal({ open: false, loading: false })}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nGrammarItem.propTypes = {\r\n  CreateDate: PropTypes.string,\r\n  onShowDetail: PropTypes.func,\r\n  Topic: PropTypes.string,\r\n  Image: PropTypes.string,\r\n  Name: PropTypes.string,\r\n  _id: PropTypes.string,\r\n};\r\n\r\nGrammarItem.defaultProps = {\r\n  onShowDetail: function () {},\r\n};\r\n\r\nexport default GrammarItem;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { dialogMUIRoot } from '../style';\r\n\r\nexport default makeStyles((theme) => ({\r\n  ...dialogMUIRoot(theme),\r\n}));\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SelectCustom from 'components/UI/SelectCustom';\r\n// import { WORD_TYPES, WORD_SPECIALTY, WORD_LEVELS } from 'constants';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useRef } from 'react';\r\nimport TopicSelect from '../../UI/TopicSelect';\r\nimport useStyle from './style';\r\nimport { QUIZ_TYPE} from '../../../constants/index'\r\n\r\nconst formId = 'listenTopicPackForm';\r\n\r\nfunction addAllOption(optionList = []) {\r\n  return [{ value: 'All', label: 'All' }, ...optionList];\r\n}\r\n\r\nfunction ListeningTopic(props) {\r\n  const {\r\n    onChoose,\r\n    onCancel,\r\n    open,\r\n   // topicMultiples,\r\n    title,\r\n    okBtnText,\r\n    cancelBtnText,\r\n    okBtnProps,\r\n    cancelBtnProps,\r\n  } = props;\r\n\r\n  const classes = useStyle();\r\n  //const topics = useRef([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { target } = e;\r\n    const type = target.type?.value || '-1'\r\n\r\n    //console.log(topic);\r\n    onChoose({\r\n     type\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      classes={{ paper: classes.dialogPaper }}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      disableBackdropClick\r\n      open={open}>\r\n      <DialogTitle classes={{ root: classes.title }}>{title}</DialogTitle>\r\n\r\n      <DialogContent dividers classes={{ dividers: classes.breakLine }}>\r\n        <form id={formId} onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <SelectCustom\r\n                label=\"Type\"\r\n                className=\"w-100\"\r\n                index={0}\r\n                options={addAllOption( QUIZ_TYPE)}\r\n                inputProps={{ name: 'type' }}\r\n              />\r\n            </Grid>\r\n           \r\n          \r\n          </Grid>\r\n        </form>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button\r\n          onClick={onCancel}\r\n          className=\"_btn _btn-stand\"\r\n          variant=\"outlined\"\r\n          {...cancelBtnProps}>\r\n          {cancelBtnText}\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          disableFocusRipple\r\n          component=\"button\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          className=\"_btn _btn-primary\"\r\n          variant=\"contained\"\r\n          {...okBtnProps}>\r\n          {okBtnText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nListeningTopic.propTypes = {\r\n  cancelBtnProps: PropTypes.object,\r\n  cancelBtnText: PropTypes.string,\r\n  okBtnProps: PropTypes.object,\r\n  okBtnText: PropTypes.string,\r\n  onCancel: PropTypes.func,\r\n  onChoose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  title: PropTypes.string,\r\n // topicMultiples: PropTypes.bool,\r\n};\r\n\r\nListeningTopic.defaultProps = {\r\n  onChoose: function () {},\r\n  open: true,\r\n // topicMultiples: true,\r\n  title: 'Type',\r\n  okBtnText: 'Ok',\r\n  cancelBtnText: 'Đóng',\r\n  okBtnProps: {},\r\n  cancelBtnProps: {},\r\n};\r\n\r\nexport default ListeningTopic;\r\n","import SettingsIcon from '@material-ui/icons/Settings';\r\nimport QuizType from '../UI/QuizType';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\n\r\nfunction ListeningTopicSetting({ classNameIcon, onChoose }) {\r\n  const [openWordPack, setOpenWordPack] = useState(false);\r\n\r\n  const onSelect = (v) => {\r\n    onChoose(v);\r\n    setOpenWordPack(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SettingsIcon\r\n        className={classNameIcon}\r\n        onClick={() => setOpenWordPack(true)}\r\n      />\r\n\r\n      {/* setting modal */}\r\n      {openWordPack && (\r\n        <QuizType\r\n          open={openWordPack}\r\n          onCancel={() => setOpenWordPack(false)}\r\n          onChoose={onSelect}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nListeningTopicSetting.propTypes = {\r\n  classNameIcon: PropTypes.string,\r\n  onChoose: PropTypes.func,\r\n};\r\n\r\nListeningTopicSetting.defaultProps = {\r\n  onChoose: () => {},\r\n};\r\n\r\nexport default ListeningTopicSetting;\r\n","import PropTypes from 'prop-types';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport React from 'react';\r\n\r\nfunction WordSkeleton({ className }) {\r\n  return (\r\n    <div className={className}>\r\n      {new Array(10).fill(0).map((_, index) => (\r\n        <Skeleton key={index} animation=\"wave\" variant=\"rect\" />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nWordSkeleton.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default WordSkeleton;\r\n","import LoopIcon from '@material-ui/icons/Loop';\r\nimport AutoSearchInput from 'components/UI/AutoSearchInput';\r\nimport InfiniteScroll from 'components/UI/InfiniteScroll';\r\nimport SortTypeModal from 'components/UI/SortType';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState, useEffect } from 'react';\r\nimport useStyle from './style';\r\nimport ListenItem from './ListeningItem/index';\r\nimport GrammarItem from './GrammarItem/index';\r\nimport WordPackSetting from './WordPackSetting';\r\nimport WordSkeleton from './WordSkeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { ROUTES } from 'constants/index';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useTitle from 'hooks/useTitle'\r\n\r\nfunction QuizAdmin({\r\n  listen,\r\n  grammar,\r\n  loading,\r\n  onLoadData,\r\n  more,\r\n  isFirstLoad,\r\n  onSettingWordPack,\r\n  // onSortTypeChange,\r\n  onSearchWord,\r\n}) {\r\n  useTitle('Quiz Admin')\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  \r\n  return (\r\n    <div className={`${classes.root} english-container`}>\r\n      {/* title - menu */}\r\n      <div className=\"flex-center-between\">\r\n        <h1 className=\"english-title\">Quản lý quiz</h1>\r\n        <div>\r\n          \r\n          <WordPackSetting\r\n              onChoose={onSettingWordPack}\r\n              classNameIcon=\"english-setting-icon\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"english-break\"></div>\r\n\r\n      {/* list content */}\r\n      <div className={classes.contentWrap}>\r\n        {/* <AutoSearchInput disabled={loading} onSearch={onSearchWord} /> */}\r\n\r\n        <div className={`${classes.listWrap} w-100`}>\r\n          <ul id=\"dictionaryId\" className={`${classes.list} flex-col w-100`}>\r\n            <>\r\n              {isFirstLoad ? (\r\n                <WordSkeleton className={classes.skeleton} />\r\n              ) : (\r\n                <>\r\n                  {listen && grammar ? (\r\n                    <>\r\n                      {/* render list */}\r\n                      {listen.length >0 && listen.map((item, index) => (\r\n                        <li className={classes.listItem} key={index}>\r\n                          <ListenItem {...item} />\r\n                        </li>\r\n                      ))}\r\n\r\n                      {grammar.length >0 && grammar.map((item, index) => (\r\n                        <li className={classes.listItem} key={index}>\r\n                          <GrammarItem {...item} />\r\n                        </li>\r\n                      ))}\r\n\r\n                      {/* infinite scrolling */}\r\n                      {!loading && more && (\r\n                        <InfiniteScroll\r\n                          onTouchAnchor={onLoadData}\r\n                          threshold={1}>\r\n                          <div className=\"w-100 t-center\">\r\n                            <LoopIcon className=\"ani-spin\" />\r\n                          </div>\r\n                        </InfiniteScroll>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    // empty list\r\n                    <h3 className=\"notfound-title h-100 flex-center t-center\">\r\n                      No result.\r\n                    </h3>\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuizAdmin.propTypes = {\r\n  isFirstLoad: PropTypes.bool,\r\n  listen: PropTypes.array,\r\n  grammar: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n  more: PropTypes.bool,\r\n  onLoadData: PropTypes.func,\r\n  onSearchWord: PropTypes.func,\r\n  onSettingWordPack: PropTypes.func,\r\n  onSortTypeChange: PropTypes.func,\r\n};\r\n\r\nQuizAdmin.defaultProps = {\r\n  listen: [],\r\n  grammar: [],\r\n  loading: false,\r\n  more: true,\r\n  isFirstLoad: true,\r\n  onLoadData: function () {},\r\n  onSearchWord: function () {},\r\n  onSettingWordPack: function () {},\r\n  onSortTypeChange: function () {},\r\n};\r\n\r\nexport default QuizAdmin;\r\n","import listeningApi from \"apis/listeningApi\";\r\nimport grammarApi from \"apis/grammarApi\";\r\nimport ListeningDetailModal from \"components/UI/ListeningDetailModal\";\r\nimport { equalArray } from \"helper\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport ListeningAdmin from \"./index\";\r\nimport quizApi from \"apis/quizApi\";\r\n\r\nfunction QuizAdminData() {\r\n  const [page, setPage] = useState(1);\r\n  const [sortType, setSortType] = useState(\"Newest\");\r\n  const [packInfo, setPackInfo] = useState(() => ({\r\n   type: \"All\",\r\n  }));\r\n  const [loading, setLoading] = useState(true);\r\n  const [listen, setListen] = useState([]);\r\n  const [grammar, setGrammar] = useState([]);\r\n  const [more, setMore] = useState(true); // toggle infinite scrolling\r\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\r\n  const totalPage = useRef(0);\r\n  const preSearchList = useRef([]);\r\n\r\n  const nextPage = () => {\r\n    if (page < totalPage.current) {\r\n      setPage(page + 1);\r\n    } else {\r\n      setMore(false);\r\n    }\r\n  };\r\n\r\n  const settingWordPack = (info) => {\r\n    // check old pack vs new pack\r\n    let isEqual = true;\r\n    if (packInfo !== 'type' && packInfo.type !== info.type) {\r\n      isEqual = false;\r\n    }\r\n    if (isEqual) isEqual = equalArray(packInfo.type, info.type);\r\n\r\n    totalPage.current = 0;\r\n    preSearchList.current = [];\r\n    setMore(true);\r\n    setListen([]);\r\n    setGrammar([]);\r\n    setPackInfo(info);\r\n    setPage(1);\r\n  };\r\n\r\n\r\n  const onSearchWord = async (name) => {\r\n    // try {\r\n    //   if (name === \"\") {\r\n    //     setList(preSearchList.current);\r\n    //     setMore(true);\r\n    //     return;\r\n    //   }\r\n    //   const apiRes = await listeningApi.searchListen(name);\r\n    //   if (apiRes.status === 200) {\r\n    //     // const { packList = [] } = apiRes.data.listens;\r\n    //     setList(apiRes.data.listens);\r\n    //     setMore(false);\r\n    //   }\r\n    // } catch (error) {}\r\n  };\r\n\r\n  // get word pack\r\n  useEffect(() => {\r\n    let isSub = true;\r\n    (async function () {\r\n      try {\r\n        setLoading(true);\r\n        let apiRes = null;\r\n        if (packInfo.type === \"All\") {\r\n          apiRes = await quizApi.getAllListenAndGrammar();\r\n        } \r\n        else {\r\n          console.log(packInfo)\r\n          if(packInfo.type === \"Listen\"){\r\n            apiRes = await listeningApi.getAllListen(\"Newest\")\r\n          }\r\n          else{\r\n            apiRes = await grammarApi.getAllGrammar();\r\n          }\r\n        }\r\n       // const apiRes = await quizApi.getAllListenAndGrammar();\r\n        if (apiRes.status ===200 && isSub) {\r\n          // const { packList = [] } = apiRes.data.listens;\r\n          // const newList = apiRes.data.listens;\r\n          // preSearchList.current = newList;\r\n          if(apiRes.data.listens){\r\n            setListen(apiRes.data.listens);\r\n          }\r\n          if(apiRes.data.grammars){\r\n            setGrammar(apiRes.data.grammars);\r\n          }\r\n        }\r\n      } catch (error) {\r\n      } finally {\r\n        if (isSub) {\r\n          setLoading(false);\r\n          isFirstLoad && setIsFirstLoad(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => (isSub = false);\r\n  }, [page, packInfo, sortType]);\r\n\r\n  return (\r\n    <>\r\n      <ListeningAdmin\r\n        listen={listen}\r\n        grammar={grammar}\r\n        loading={loading}\r\n        onLoadData={nextPage}\r\n        more={more}\r\n        isFirstLoad={isFirstLoad}\r\n        onSettingWordPack={settingWordPack}\r\n        // onSortTypeChange={onSortTypeChange}\r\n        onSearchWord={onSearchWord}\r\n      />\r\n      <ListeningDetailModal />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuizAdminData;\r\n","import React from 'react'\r\nimport { dictionaryRoot } from '../components/UI/style'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport useTitle from './../hooks/useTitle';\r\nimport QuizAdminData from 'components/QuizAdmin/data';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  ...dictionaryRoot(theme)\r\n}))\r\n\r\nexport default function QuizAdminPage() {\r\n  useTitle('Listening Admin')\r\n  const classes = useStyle();\r\n  return (\r\n    <div className=\"container\">\r\n      <QuizAdminData />\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"sourceRoot":""}