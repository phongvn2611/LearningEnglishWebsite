{"version":3,"sources":["pages/ForgotPassword.js"],"names":["schema","yup","shape","email","required","ForgotPasswordPage","useTitle","useCloseNavigation","useState","loading","setLoading","dispatch","useDispatch","classes","useHistory","makeStyles","formStyle","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","user","setUser","handleForgotPassword","e","a","userApi","forgotPassword","res","setMessage","data","message","response","className","root","onSubmit","autoComplete","labelIcon","src","alt","title","label","size","placeholder","onChange","target","name","value","error","Boolean","inputProps","autoFocus","type","variant","color","disabled","endIcon","to","ROUTES","LOGIN"],"mappings":"gVAsBMA,EAASC,MAAaC,MAAM,CAChCC,MAAOF,MAAaG,SAAS,8BAAoBD,MAAM,qCAoG1CE,UAjGf,WAA+B,IAAD,EAC5BC,YAAS,mBACTC,cAEA,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cAEXC,GADUC,cACAC,IAAWC,IAAXD,IAChB,EAIIE,YAAQ,CACVC,SAAUC,YAAYnB,KAJtBoB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAIf,EAAwBd,mBAAS,CAC/BL,MAAO,KADT,mBAAOqB,EAAP,KAAaC,EAAb,KASMC,EAAoB,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEAEzBlB,GAAW,GAFc,SAGPmB,IAAQC,eAAeN,EAAKrB,OAHrB,OAGnB4B,EAHmB,OAIzBpB,EAASqB,YAAWD,EAAIE,KAAKC,QAAS,YACtCxB,GAAW,GALc,gDAOzBC,EAASqB,YAAU,UAAC,KAAMG,gBAAP,iBAAC,EAAgBF,YAAjB,aAAC,EAAsBC,QAAS,UACnDxB,GAAW,GARc,yDAAH,sDAY1B,OACE,qBAAK0B,UAAU,0BAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBACEA,UAAS,UAAKvB,EAAQwB,KAAb,aACTC,SAAUjB,EAAaK,GACvBa,aAAa,MAHf,UAKE,sBAAKH,UAAU,WAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBACEA,UAAWvB,EAAQ2B,UACnBC,IAAI,sGACJC,IAAI,WAGR,oBAAIN,UAAS,UAAKvB,EAAQ8B,MAAb,aAAb,2CAGF,sBAAKP,UAAU,WAAf,UACE,cAAC,IAAD,CACEQ,MAAM,QACNC,KAAK,QACLC,YAAY,kBACZC,SAzCS,SAACpB,GACpB,MAAwBA,EAAEqB,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdzB,EAAQ,2BAAKD,GAAN,kBAAayB,EAAOC,MAwCjBC,MAAOC,QAAQ9B,EAAOnB,OACtBkD,WAAU,aACRJ,KAAM,QACNK,WAAW,GACRlC,EAAS,YAGfE,EAAOnB,OACN,mBAAGiC,UAAU,aAAb,mBAA2Bd,EAAOnB,aAAlC,aAA2B,EAAc+B,aAI7C,cAAC,IAAD,CACEE,UAAU,oBACVmB,KAAK,SACLC,QAAQ,YACRC,MAAM,UACNC,SAAUjD,EACVkD,QAASlD,GAAW,cAAC,IAAD,CAAU2B,UAAU,aACxCS,KAAK,QAPP,+BAaF,sBAAKT,UAAU,cAAf,oCAEE,cAAC,IAAD,CAAMwB,GAAIC,IAAOC,MAAO1B,UAAU,eAAlC","file":"static/js/48.15c57970.chunk.js","sourcesContent":["import \"./style/login-signup.scss\";\r\nimport { ROUTES } from \"../constants\";\r\nimport useTitle from \"./../hooks/useTitle\";\r\nimport useCloseNavigation from \"./../hooks/useCloseNavigation\";\r\nimport React, { useState } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport InputCustom from \"../components/UI/InputCustom\";\r\nimport { formStyle } from \"../components/UI/style\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport userApi from \"../apis/userApi\";\r\nimport { UX } from \"../constants\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\nimport { setMessage } from \"./../redux/actions/messageAction\";\r\n\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string().required(\"Email đang trống\").email(\"Email không hợp lệ\"),\r\n});\r\n\r\nfunction ForgotPasswordPage() {\r\n  useTitle(\"Forgot password\");\r\n  useCloseNavigation();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = makeStyles(formStyle)();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleForgotPassword = async (e) => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await userApi.forgotPassword(user.email);\r\n      dispatch(setMessage(res.data.message, \"success\"));\r\n      setLoading(false);\r\n    } catch (error) {\r\n      dispatch(setMessage(error.response?.data?.message, \"error\"));\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pos-rel w-100vw h-100vh\">\r\n      <div className=\"transform-center\">\r\n        <form\r\n          className={`${classes.root} flex-col`}\r\n          onSubmit={handleSubmit(handleForgotPassword)}\r\n          autoComplete=\"off\"\r\n        >\r\n          <div className=\"flex-col\">\r\n            <div className=\"t-center mt-5\">\r\n              <img\r\n                className={classes.labelIcon}\r\n                src=\"https://res.cloudinary.com/phongvn2611/image/upload/v1637079637/english/avatar/logo-tiny_seqkri.png\"\r\n                alt=\"logo\"\r\n              />\r\n            </div>\r\n            <h1 className={`${classes.title} t-center`}>Quên mật khẩu</h1>\r\n          </div>\r\n\r\n          <div className=\"flex-col\">\r\n            <InputCustom\r\n              label=\"Email\"\r\n              size=\"small\"\r\n              placeholder=\"Nhập email\"\r\n              onChange={handleChange}\r\n              error={Boolean(errors.email)}\r\n              inputProps={{\r\n                name: \"email\",\r\n                autoFocus: true,\r\n                ...register(\"email\"),\r\n              }}\r\n            />\r\n            {errors.email && (\r\n              <p className=\"text-error\">{errors.email?.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          <Button\r\n            className=\"_btn _btn-primary\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={loading}\r\n            endIcon={loading && <LoopIcon className=\"ani-spin\" />}\r\n            size=\"large\"\r\n          >\r\n            Gửi email\r\n          </Button>\r\n        </form>\r\n\r\n        <div className=\"has-account\">\r\n          Quay lại trang&nbsp;\r\n          <Link to={ROUTES.LOGIN} className=\"account-link\">\r\n            Đăng nhập\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordPage;\r\n"],"sourceRoot":""}