{"version":3,"sources":["apis/testApi.js","apis/submitTestApi.js","components/Test/Pagination.js","apis/fileTestApi.js","components/Test/Part1.js","components/Test/Part2.js","components/Test/Part3.js","components/Test/Part4.js","components/Test/Part5.js","components/Test/Part6.js","components/Test/Part7.js","components/Test/Part.js","components/Test/Timer.js","pages/StartTest.js"],"names":["URL","testApi","getAllTest","axios","get","getTestById","id","submitTestApi","postSubmit","submit","post","putAnswerSubmit","body","put","putSubmit","part","answer","Part","AnswerTests","getSubmitById","getSubmitByTest","checkSubmitExisted","deleteSubmit","delete","useStyles","makeStyles","button","padding","fontWeight","backgroundColor","color","boxShadow","Pagination","type","pages","setCurrentPage","submitId","submitAnswers1","submitAnswers2","submitAnswers3","submitAnswers4","submitAnswers5","submitAnswers6","submitAnswers7","classes","useState","selected","setSelected","useEffect","updateAnswerSubmitPrev","value","a","updateAnswerSubmitNext","console","log","className","Button","disabled","onClick","prev","fileTestApi","getAllQuestionsOfPart","testId","params","getAllQuestionsOfFile","file","Part1","setSubmitAnswers1","currentPage","partQuestions","setPartQuestions","submitList","setSubmitList","res","data","AnswerTests1","Typography","variant","Audio","controls","src","Image","alt","width","height","Questions","map","question","index","Sentence","FormControl","RadioGroup","defaultValue","name","Answers","FormControlLabel","control","Radio","newList","some","item","QuestionTestId","filter","push","addAnswers","checked","answerId","_id","label","Part2","setSubmitAnswers2","AnswerTests2","Part3","setSubmitAnswers3","AnswerTests3","Content","Part4","setSubmitAnswers4","AnswerTests4","Part5","setSubmitAnswers5","AnswerTests5","Part6","setSubmitAnswers6","AnswerTests6","Part7","setSubmitAnswers7","AnswerTests7","Image2","Image3","Container","renderPart","React","memo","Timer","onSubmitTest","initTime","convertTime","hours","minutes","seconds","time","setTime","items","JSON","parse","localStorage","getItem","myInterval","setInterval","updatedTime","clearInterval","setItem","stringify","root","minHeight","position","container","display","flexDirection","alignItems","top","left","transform","title","marginBottom","timeTotal","timeDetail","margin","justifyContent","StartTestPage","state","setState","test","setTest","history","useHistory","useParams","setSubmitId","submitItem","setSubmitItem","createSubmit","resCheck","resSubmit","IsFinish","clear","onPlayAgain","window","location","reload","useTitle","Name","Duration","Grid","lg","md","xs","Score","ListenScore","ListenSentences","ReadScore","ReadSentences","replace","ROUTES","TEST"],"mappings":"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","file":"static/js/49.4c952d0d.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst URL = `/api/test`;\r\n\r\nconst testApi = {\r\n  getAllTest: () => {\r\n    return axios.get(`${URL}/get-all-test`)\r\n  },\r\n  getTestById: (id) => {\r\n    return axios.get(`${URL}/get-test-by-id/${id}`)\r\n  }\r\n}\r\nexport default testApi;\r\n","import axios from \"axios\";\r\nconst URL = `/api/submitTest`;\r\n\r\nconst submitTestApi = {\r\n  postSubmit: (id, submit) => {\r\n    return axios.post(`${URL}/post-submitTest/${id}`, { submit });\r\n  },\r\n\r\n  putAnswerSubmit: (id, body) => {\r\n    return axios.put(`${URL}/put-answer-submitTest/${id}`, { ...body });\r\n  },\r\n\r\n  putSubmit: (id, part, answer) => {\r\n    return axios.put(`${URL}/put-submitTest/${id}`, {\r\n      Part: part,\r\n      AnswerTests: answer,\r\n    });\r\n  },\r\n\r\n  getSubmitById: (id) => {\r\n    return axios.get(`${URL}/get-submitTest-by-id/${id}`);\r\n  },\r\n\r\n  getSubmitByTest: (id) => {\r\n    return axios.get(`${URL}/get-submitTest-by-test/${id}`);\r\n  },\r\n\r\n  checkSubmitExisted: (id) => {\r\n    return axios.get(`${URL}/check-submitTest/${id}`);\r\n  },\r\n\r\n  deleteSubmit: (id) => {\r\n    return axios.delete(`${URL}/delete-submitTest/${id}`);\r\n  },\r\n};\r\nexport default submitTestApi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport submitTestApi from \"apis/submitTestApi\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  button: {\r\n    padding: \"10px 25px\",\r\n    fontWeight: \"600\",\r\n    backgroundColor: \"#68c2e8\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#56bde8\",\r\n      boxShadow: \"0 0 10px 5px rgba(0, 0, 0, 0.25)\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Pagination({\r\n  type = \"question\",\r\n  pages,\r\n  setCurrentPage,\r\n  submitId,\r\n  submitAnswers1,\r\n  submitAnswers2,\r\n  submitAnswers3,\r\n  submitAnswers4,\r\n  submitAnswers5,\r\n  submitAnswers6,\r\n  submitAnswers7\r\n}) {\r\n\r\n  const classes = useStyles();\r\n  const [selected, setSelected] = useState(1);\r\n \r\n\r\n  useEffect(() => {\r\n    setCurrentPage(selected);\r\n  }, [selected]);\r\n\r\n  const updateAnswerSubmitPrev = async (value) =>{  \r\n    if(selected === 1){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers1});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n    if(selected === 2){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers2});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n    if(selected === 3 ){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers3});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n   \r\n    if(selected === 4 ){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers4});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n   \r\n    if(selected === 5){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers5});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n    if(selected === 6){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers6});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n   \r\n    if(selected === 7 ){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers7});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n  \r\n   setSelected(value);\r\n  };\r\n\r\n  const updateAnswerSubmitNext = async (value) =>{\r\n\r\n    if(selected === 1){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers1});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n    if(selected === 2){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers2});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n    if(selected === 3){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers3});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n    if(selected === 4){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers4});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n    if(selected === 5){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers5});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n    if(selected === 6){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers6});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n  \r\n    if(selected === 7 ){ \r\n      await submitTestApi.putAnswerSubmit(submitId, {Part : selected, AnswerTests: submitAnswers7});   \r\n      setSelected(value);\r\n      return;\r\n    }\r\n \r\n    setSelected(value);\r\n\r\n  };\r\n\r\n  console.log(selected)\r\n  return (\r\n    <div>\r\n      {pages > 1 && (\r\n        <div\r\n          className={`d-flex jus-content-${\r\n            type === \"part\" ? \"between\" : \"around\"\r\n          } align-items-center my-5`}\r\n        >\r\n          <Button\r\n            className={classes.button}\r\n            disabled={selected === 1 ? true : false}\r\n            onClick={() => updateAnswerSubmitPrev((prev) => (prev <= 1 ? prev : prev - 1))}\r\n          >\r\n            {type === \"part\" ? \"Prev Part\" : \"Prev\"}\r\n          </Button>\r\n          <Button\r\n            className={classes.button}\r\n            disabled={selected === pages ? true : false}\r\n            onClick={() =>\r\n              updateAnswerSubmitNext((prev) => (prev >= pages ? prev : prev + 1))\r\n            }\r\n          >\r\n            {type === \"part\" ? \"Next Part\" : \"Next\"}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport axios from 'axios';\r\nconst URL = `/api/fileTest`;\r\n\r\nconst fileTestApi = {\r\n  getAllQuestionsOfPart: (testId = '', part = 0) => {\r\n    return axios.get(`${URL}/get-questions-of-part`, { params: { testId, part }})\r\n  },\r\n\r\n  getAllQuestionsOfFile: (testId = '', part = 0, file = 0) => {\r\n    return axios.get(`${URL}/get-questions-of-file`, { params: { testId, part, file }})\r\n  }\r\n}\r\nexport default fileTestApi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"./Pagination\";\r\nimport fileTestApi from \"apis/fileTestApi\";\r\nimport submitTestApi from \"apis/submitTestApi\";\r\n\r\nexport default function Part1({ part, testId, submitId, setSubmitAnswers1 }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [partQuestions, setPartQuestions] = useState([]);\r\n  const [submitList, setSubmitList] = useState([]);\r\n\r\n  const addAnswers = (answer) => {\r\n    let checkExisted = submitList.some(\r\n      (item) => answer.QuestionTestId === item.QuestionTestId\r\n    );\r\n\r\n    let newList = [];\r\n    if (checkExisted === true) {\r\n      newList = submitList.filter(\r\n        (item) => item.QuestionTestId !== answer.QuestionTestId\r\n      );\r\n    } else {\r\n      newList = submitList;\r\n    }\r\n\r\n    newList.push(answer);\r\n    setSubmitList(newList);\r\n    setSubmitAnswers1(newList);\r\n  };\r\n\r\n  const IsCheckedAnswer = (answerId) => {\r\n    let checkedAnswer = submitList.some((item) => answerId === item._id);\r\n    return checkedAnswer;\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await fileTestApi.getAllQuestionsOfFile(\r\n        testId,\r\n        part,\r\n        currentPage\r\n      );\r\n      setPartQuestions(res.data);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part]);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await submitTestApi.getSubmitById(submitId);\r\n      setSubmitList(res.data.AnswerTests1);\r\n      setSubmitAnswers1(res.data.AnswerTests1);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part]);\r\n\r\n  console.log(submitList);\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Part 1</Typography>\r\n      {partQuestions.Audio && (\r\n        <div>\r\n          <audio controls>\r\n            <source src={partQuestions.Audio} type=\"audio/mpeg\" />\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n        </div>\r\n      )}\r\n\r\n      {partQuestions?.Image && (\r\n        <div>\r\n          <img src={partQuestions.Image} alt=\"\" width=\"500\" height=\"300\" />\r\n        </div>\r\n      )}\r\n\r\n      {partQuestions.Questions &&\r\n        partQuestions.Questions.map((question, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <Typography>{question.Sentence}.</Typography>\r\n              <div>\r\n                <img src={question.Image} alt=\"\" width=\"500\" height=\"300\" />\r\n              </div>\r\n              <div>\r\n                <FormControl>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    defaultValue=\"female\"\r\n                    name=\"radio-buttons-group\"\r\n                  >\r\n                    {question.Answers &&\r\n                      question.Answers.map((answer, index) => {\r\n                        return (\r\n                          <FormControlLabel\r\n                            key={index}\r\n                            value={answer.Sentence}\r\n                            control={\r\n                              <Radio\r\n                                onClick={() => addAnswers(answer)}\r\n                                checked={IsCheckedAnswer(answer._id)}\r\n                              />\r\n                            }\r\n                            label={`(${answer.Sentence})`}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      <Pagination pages={1} setCurrentPage={setCurrentPage}></Pagination>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"./Pagination\";\r\nimport fileTestApi from \"apis/fileTestApi\";\r\nimport submitTestApi from \"apis/submitTestApi\";\r\n\r\nexport default function Part2({ part, testId, submitId, setSubmitAnswers2}) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [partQuestions, setPartQuestions] = useState([]);\r\n  const [submitList, setSubmitList] = useState([]);\r\n\r\n  const addAnswers = (answer) =>{\r\n    let checkExisted = submitList.some(item =>\r\n      answer.QuestionTestId === item.QuestionTestId\r\n    );\r\n\r\n    let newList = [];\r\n    if(checkExisted === true){\r\n      newList = submitList.filter(item => item.QuestionTestId !== answer.QuestionTestId);     \r\n    }\r\n    else{\r\n      newList = submitList;      \r\n    }\r\n    \r\n    newList.push(answer);\r\n    setSubmitList(newList);\r\n    setSubmitAnswers2(newList);    \r\n}\r\n\r\nconst IsCheckedAnswer = (answerId) =>{\r\n  let checkedAnswer = submitList.some(item =>\r\n    answerId === item._id\r\n  );\r\n  return checkedAnswer;    \r\n}\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await fileTestApi.getAllQuestionsOfFile(testId, part, currentPage);\r\n      setPartQuestions(res.data);\r\n      \r\n    })();\r\n    return () => {};\r\n  }, [testId, part]);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await submitTestApi.getSubmitById(submitId);\r\n      setSubmitList(res.data.AnswerTests2);\r\n      setSubmitAnswers2(res.data.AnswerTests2);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Part 2</Typography>\r\n      {partQuestions.Audio && (\r\n        <div>\r\n          <audio controls>\r\n            <source src={partQuestions.Audio} type=\"audio/mpeg\" />\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n        </div>\r\n      )}\r\n      {partQuestions.Questions &&\r\n        partQuestions.Questions.map((question, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <Typography>{question.Sentence}.</Typography>\r\n              <div>\r\n                <FormControl>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    defaultValue=\"female\"\r\n                    name=\"radio-buttons-group\"\r\n                  >\r\n                    {question.Answers &&\r\n                      question.Answers.map((answer, index) => {\r\n                        return (\r\n                          <FormControlLabel\r\n                            key={index}\r\n                            value={answer.Sentence}\r\n                            control={<Radio \r\n                              checked = {IsCheckedAnswer(answer._id)}\r\n                              onClick={()=>addAnswers(answer)}\r\n                             \r\n                              />}\r\n                            label={`(${answer.Sentence})`}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      <Pagination pages={1} setCurrentPage={setCurrentPage} ></Pagination>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"./Pagination\";\r\nimport fileTestApi from \"apis/fileTestApi\";\r\nimport submitTestApi from \"apis/submitTestApi\";\r\n\r\nexport default function Part3({ part, testId, submitId, setSubmitAnswers3 }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [partQuestions, setPartQuestions] = useState([]);\r\n  const [submitList, setSubmitList] = useState([]);\r\n\r\n  const addAnswers = (answer) => {\r\n    let checkExisted = submitList.some(\r\n      (item) => answer.QuestionTestId === item.QuestionTestId\r\n    );\r\n\r\n    let newList = [];\r\n    if (checkExisted === true) {\r\n      newList = submitList.filter(\r\n        (item) => item.QuestionTestId !== answer.QuestionTestId\r\n      );\r\n    } else {\r\n      newList = submitList;\r\n    }\r\n\r\n    newList.push(answer);\r\n    setSubmitList(newList);\r\n    setSubmitAnswers3(newList);\r\n  };\r\n\r\n  const IsCheckedAnswer = (answerId) => {\r\n    let checkedAnswer = submitList.some((item) => answerId === item._id);\r\n    return checkedAnswer;\r\n  };\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await fileTestApi.getAllQuestionsOfFile(\r\n        testId,\r\n        part,\r\n        currentPage\r\n      );\r\n      // const indexOfLast = currentPage;\r\n      // const indexOfFirst = indexOfLast - 1;\r\n      setPartQuestions(res.data);\r\n\r\n      console.log(res.data);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part, currentPage]);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await submitTestApi.getSubmitById(submitId);\r\n      setSubmitList(res.data.AnswerTests3);\r\n      setSubmitAnswers3(res.data.AnswerTests3);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part]);\r\n\r\n  console.log(submitList);\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Part 3</Typography>\r\n      {partQuestions?.Audio && (\r\n        <div>\r\n          <audio controls>\r\n            <source src={partQuestions?.Audio} type=\"audio/mpeg\" />\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n        </div>\r\n      )}\r\n\r\n      {partQuestions?.Image && (\r\n        <div>\r\n          <img src={partQuestions.Image} alt=\"\" width=\"500\" height=\"300\" />\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <FormControl>\r\n          {partQuestions?.Questions &&\r\n            partQuestions?.Questions.map((question, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <Typography>\r\n                    {question.Sentence}. {question.Content}\r\n                  </Typography>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    defaultValue=\"female\"\r\n                    name=\"radio-buttons-group\"\r\n                  >\r\n                    {question.Answers &&\r\n                      question.Answers.map((answer, index) => {\r\n                        return (\r\n                          <FormControlLabel\r\n                            key={index}\r\n                            value={answer.Sentence}\r\n                            control={\r\n                              <Radio\r\n                                onClick={() => addAnswers(answer)}\r\n                                checked={IsCheckedAnswer(answer._id)}\r\n                              />\r\n                            }\r\n                            label={`(${answer.Sentence}) ${answer.Content}`}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </RadioGroup>\r\n                </div>\r\n              );\r\n            })}\r\n        </FormControl>\r\n      </div>\r\n      <Pagination\r\n        pages={13}\r\n        setCurrentPage={setCurrentPage}\r\n        submitAnswers3={submitList}\r\n        submitId={submitId}\r\n      ></Pagination>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"./Pagination\";\r\nimport fileTestApi from \"apis/fileTestApi\";\r\nimport submitTestApi from \"apis/submitTestApi\";\r\n\r\nexport default function Part4({ part, testId, submitId, setSubmitAnswers4}) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [partQuestions, setPartQuestions] = useState([]);\r\n  const [submitList, setSubmitList] = useState([]);\r\n \r\n  const addAnswers = (answer) =>{\r\n    let checkExisted = submitList.some(item =>\r\n      answer.QuestionTestId === item.QuestionTestId\r\n    );\r\n\r\n    let newList = [];\r\n    if(checkExisted === true){\r\n      newList = submitList.filter(item => item.QuestionTestId !== answer.QuestionTestId);     \r\n    }\r\n    else{\r\n      newList = submitList;      \r\n    }\r\n    \r\n    newList.push(answer);\r\n    setSubmitList(newList);\r\n    setSubmitAnswers4(newList);    \r\n}\r\n\r\nconst IsCheckedAnswer = (answerId) =>{\r\n  let checkedAnswer = submitList.some(item =>\r\n    answerId === item._id\r\n  );\r\n  return checkedAnswer;    \r\n}\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await fileTestApi.getAllQuestionsOfFile(testId, part, currentPage);\r\n      // const indexOfLast = currentPage;\r\n      // const indexOfFirst = indexOfLast - 1;\r\n      setPartQuestions(res.data);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part, currentPage]);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await submitTestApi.getSubmitById(submitId);\r\n      setSubmitList(res.data.AnswerTests4);\r\n      setSubmitAnswers4(res.data.AnswerTests4);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Part 4</Typography>\r\n      {partQuestions?.Audio && (\r\n        <div>\r\n          <audio controls>\r\n            <source src={partQuestions?.Audio} type=\"audio/mpeg\" />\r\n            Your browser does not support the audio element.\r\n          </audio>          \r\n        </div>\r\n      )}\r\n\r\n    {partQuestions?.Image && (\r\n            <div>\r\n              <img src={partQuestions.Image} alt=\"\" width=\"500\" height=\"300\" />         \r\n            </div>\r\n      )}\r\n\r\n      <div>\r\n        <FormControl>\r\n          {partQuestions?.Questions &&\r\n            partQuestions?.Questions.map((question, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <Typography>{question.Sentence}. {question.Content}</Typography>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    defaultValue=\"female\"\r\n                    name=\"radio-buttons-group\"\r\n                  >\r\n                    {question.Answers &&\r\n                      question.Answers.map((answer, index) => {\r\n                        return (\r\n                          <FormControlLabel\r\n                            key={index}\r\n                            value={answer.Sentence}\r\n                            control={<Radio\r\n                              onClick={()=>addAnswers(answer)}\r\n                              checked = {IsCheckedAnswer(answer._id)}\r\n                               />}\r\n                            label={`(${answer.Sentence}) ${answer.Content}`}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </RadioGroup>\r\n                </div>\r\n              );\r\n            })}\r\n        </FormControl>\r\n      </div>\r\n      <Pagination \r\n        pages={10} \r\n        setCurrentPage={setCurrentPage}\r\n        submitAnswers4={submitList}\r\n        submitId={submitId}>\r\n      </Pagination>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"./Pagination\";\r\nimport fileTestApi from \"apis/fileTestApi\";\r\nimport submitTestApi from \"apis/submitTestApi\";\r\n\r\nexport default function Part5({ part, testId, submitId, setSubmitAnswers5 }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [partQuestions, setPartQuestions] = useState([]);\r\n  const [submitList, setSubmitList] = useState([]);\r\n\r\n  const addAnswers = (answer) =>{\r\n    let checkExisted = submitList.some(item =>\r\n      answer.QuestionTestId === item.QuestionTestId\r\n    );\r\n\r\n    let newList = [];\r\n    if(checkExisted === true){\r\n      newList = submitList.filter(item => item.QuestionTestId !== answer.QuestionTestId);     \r\n    }\r\n    else{\r\n      newList = submitList;      \r\n    }\r\n    \r\n    newList.push(answer);\r\n    setSubmitList(newList);\r\n    setSubmitAnswers5(newList);    \r\n}\r\n\r\nconst IsCheckedAnswer = (answerId) =>{\r\n  let checkedAnswer = submitList.some(item =>\r\n    answerId === item._id\r\n  );\r\n  return checkedAnswer;    \r\n}\r\nuseEffect(() => {\r\n  (async function () {\r\n    const res = await fileTestApi.getAllQuestionsOfFile(testId, part, currentPage);\r\n    // const indexOfLast = currentPage;\r\n    // const indexOfFirst = indexOfLast - 1;\r\n    setPartQuestions(res.data);\r\n  })();\r\n  return () => {};\r\n}, [testId, part, currentPage]);\r\n\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await submitTestApi.getSubmitById(submitId);\r\n      setSubmitList(res.data.AnswerTests5);\r\n      setSubmitAnswers5(res.data.AnswerTests5);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Part 5</Typography>\r\n      <Typography>{}</Typography>\r\n      <div>\r\n        <FormControl>\r\n          {partQuestions?.Questions &&\r\n            partQuestions?.Questions.map((question, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <Typography>{question.Sentence}. {question.Content}</Typography>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    defaultValue=\"female\"\r\n                    name=\"radio-buttons-group\"\r\n                  >\r\n                    {question.Answers &&\r\n                      question.Answers.map((answer, index) => {\r\n                        return (\r\n                          <FormControlLabel\r\n                            key={index}\r\n                            value={answer.Sentence}\r\n                            control={<Radio\r\n                              onClick={()=>addAnswers(answer)}\r\n                              checked = {IsCheckedAnswer(answer._id)}\r\n                               />}\r\n                            label={`(${answer.Sentence}) ${answer.Content}`}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </RadioGroup>\r\n                </div>\r\n              );\r\n            })}\r\n        </FormControl>\r\n      </div>\r\n      <Pagination \r\n        pages={30} \r\n        setCurrentPage={setCurrentPage}\r\n        submitAnswers5={submitList}\r\n        submitId={submitId}>\r\n      </Pagination>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"./Pagination\";\r\nimport fileTestApi from \"apis/fileTestApi\";\r\nimport submitTestApi from \"apis/submitTestApi\";\r\n\r\nexport default function Part6({ part, testId, submitId, setSubmitAnswers6 }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [partQuestions, setPartQuestions] = useState([]);\r\n  const [submitList, setSubmitList] = useState([]);\r\n\r\n  const addAnswers = (answer) => {\r\n    let checkExisted = submitList.some(\r\n      (item) => answer.QuestionTestId === item.QuestionTestId\r\n    );\r\n\r\n    let newList = [];\r\n    if (checkExisted === true) {\r\n      newList = submitList.filter(\r\n        (item) => item.QuestionTestId !== answer.QuestionTestId\r\n      );\r\n    } else {\r\n      newList = submitList;\r\n    }\r\n\r\n    newList.push(answer);\r\n    setSubmitList(newList);\r\n    setSubmitAnswers6(newList);\r\n  };\r\n\r\n  const IsCheckedAnswer = (answerId) => {\r\n    let checkedAnswer = submitList.some((item) => answerId === item._id);\r\n    return checkedAnswer;\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await fileTestApi.getAllQuestionsOfFile(\r\n        testId,\r\n        part,\r\n        currentPage\r\n      );\r\n      // const indexOfLast = currentPage;\r\n      // const indexOfFirst = indexOfLast - 1;\r\n      setPartQuestions(res.data);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part, currentPage]);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await submitTestApi.getSubmitById(submitId);\r\n      setSubmitList(res.data.AnswerTests6);\r\n      setSubmitAnswers6(res.data.AnswerTests6);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part]);\r\n\r\n  console.log(currentPage);\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Part 6</Typography>\r\n      <div>\r\n        <img\r\n          src={partQuestions?.Image}\r\n          alt=\"Girl in a jacket\"\r\n          width=\"500\"\r\n          height=\"300\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <FormControl>\r\n          {partQuestions?.Questions &&\r\n            partQuestions?.Questions.map((question, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <Typography>\r\n                    {question.Sentence}. {question.Content}{\" \"}\r\n                  </Typography>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    defaultValue=\"female\"\r\n                    name=\"radio-buttons-group\"\r\n                  >\r\n                    {question.Answers &&\r\n                      question.Answers.map((answer, index) => {\r\n                        return (\r\n                          <FormControlLabel\r\n                            key={index}\r\n                            value={answer.Sentence}\r\n                            control={\r\n                              <Radio\r\n                                onClick={() => addAnswers(answer)}\r\n                                checked={IsCheckedAnswer(answer._id)}\r\n                              />\r\n                            }\r\n                            label={`(${answer.Sentence}) ${answer.Content}`}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </RadioGroup>\r\n                </div>\r\n              );\r\n            })}\r\n        </FormControl>\r\n      </div>\r\n      <Pagination\r\n        pages={4}\r\n        setCurrentPage={setCurrentPage}\r\n        submitAnswers6={submitList}\r\n        submitId={submitId}\r\n      ></Pagination>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"./Pagination\";\r\nimport submitTestApi from \"apis/submitTestApi\";\r\nimport fileTestApi from \"apis/fileTestApi\";\r\n\r\nexport default function Part7({ part, testId, submitId, setSubmitAnswers7 }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [partQuestions, setPartQuestions] = useState([]);\r\n  const [submitList, setSubmitList] = useState([]);\r\n\r\n  const addAnswers = (answer) => {\r\n    let checkExisted = submitList.some(\r\n      (item) => answer.QuestionTestId === item.QuestionTestId\r\n    );\r\n\r\n    let newList = [];\r\n    if (checkExisted === true) {\r\n      newList = submitList.filter(\r\n        (item) => item.QuestionTestId !== answer.QuestionTestId\r\n      );\r\n    } else {\r\n      newList = submitList;\r\n    }\r\n\r\n    newList.push(answer);\r\n    setSubmitList(newList);\r\n    setSubmitAnswers7(newList);\r\n  };\r\n\r\n  const IsCheckedAnswer = (answerId) => {\r\n    let checkedAnswer = submitList.some((item) => answerId === item._id);\r\n    return checkedAnswer;\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await fileTestApi.getAllQuestionsOfFile(\r\n        testId,\r\n        part,\r\n        currentPage\r\n      );\r\n      // const indexOfLast = currentPage;\r\n      // const indexOfFirst = indexOfLast - 1;\r\n      setPartQuestions(res.data);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part, currentPage]);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await submitTestApi.getSubmitById(submitId);\r\n      setSubmitList(res.data.AnswerTests7);\r\n      setSubmitAnswers7(res.data.AnswerTests7);\r\n    })();\r\n    return () => {};\r\n  }, [testId, part]);\r\n  console.log(currentPage);\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Part 7</Typography>\r\n      <div>\r\n        {partQuestions?.Image && (\r\n          <img src={partQuestions.Image} alt=\"\" width=\"500\" height=\"300\" />\r\n        )}\r\n        {partQuestions?.Image2 && (\r\n          <img src={partQuestions.Image2} alt=\"\" width=\"500\" height=\"300\" />\r\n        )}\r\n        {partQuestions?.Image3 && (\r\n          <img src={partQuestions.Image3} alt=\"\" width=\"500\" height=\"300\" />\r\n        )}\r\n      </div>\r\n      <div>\r\n        <FormControl>\r\n          {partQuestions?.Questions &&\r\n            partQuestions?.Questions.map((question, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <Typography>\r\n                    {question.Sentence}. {question.Content}\r\n                  </Typography>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    defaultValue=\"female\"\r\n                    name=\"radio-buttons-group\"\r\n                  >\r\n                    {question.Answers &&\r\n                      question.Answers.map((answer, index) => {\r\n                        return (\r\n                          <FormControlLabel\r\n                            key={index}\r\n                            value={answer.Sentence}\r\n                            control={\r\n                              <Radio\r\n                                onClick={() => addAnswers(answer)}\r\n                                checked={IsCheckedAnswer(answer._id)}\r\n                              />\r\n                            }\r\n                            label={`(${answer.Sentence}) ${answer.Content}`}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </RadioGroup>\r\n                </div>\r\n              );\r\n            })}\r\n        </FormControl>\r\n      </div>\r\n      <Pagination\r\n        pages={15}\r\n        setCurrentPage={setCurrentPage}\r\n        submitAnswers7={submitList}\r\n        submitId={submitId}\r\n      ></Pagination>\r\n    </div>\r\n  );\r\n}\r\n","import { Container } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Part1 from \"./Part1\";\r\nimport Part2 from \"./Part2\";\r\nimport Part3 from \"./Part3\";\r\nimport Part4 from \"./Part4\";\r\nimport Part5 from \"./Part5\";\r\nimport Part6 from \"./Part6\";\r\nimport Part7 from \"./Part7\";\r\n\r\nfunction Part({\r\n  part,\r\n  testId,\r\n  submitId,\r\n  setSubmitAnswers1,\r\n  setSubmitAnswers2,\r\n  setSubmitAnswers3,\r\n  setSubmitAnswers4,\r\n  setSubmitAnswers5,\r\n  setSubmitAnswers6,\r\n  setSubmitAnswers7,\r\n}) {\r\n  const renderPart = (part) => {\r\n    if (part === 1)\r\n      return (\r\n        <Part1\r\n          part={part}\r\n          testId={testId}\r\n          submitId={submitId}\r\n          setSubmitAnswers1={setSubmitAnswers1}\r\n        />\r\n      );\r\n    else if (part === 2)\r\n      return (\r\n        <Part2\r\n          part={part}\r\n          testId={testId}\r\n          submitId={submitId}\r\n          setSubmitAnswers2={setSubmitAnswers2}\r\n        />\r\n      );\r\n    else if (part === 3)\r\n      return (\r\n        <Part3\r\n          part={part}\r\n          testId={testId}\r\n          submitId={submitId}\r\n          setSubmitAnswers3={setSubmitAnswers3}\r\n        />\r\n      );\r\n    else if (part === 4)\r\n      return (\r\n        <Part4\r\n          part={part}\r\n          testId={testId}\r\n          submitId={submitId}\r\n          setSubmitAnswers4={setSubmitAnswers4}\r\n        />\r\n      );\r\n    else if (part === 5)\r\n      return (\r\n        <Part5\r\n          part={part}\r\n          testId={testId}\r\n          submitId={submitId}\r\n          setSubmitAnswers5={setSubmitAnswers5}\r\n        />\r\n      );\r\n    else if (part === 6)\r\n      return (\r\n        <Part6\r\n          part={part}\r\n          testId={testId}\r\n          submitId={submitId}\r\n          setSubmitAnswers6={setSubmitAnswers6}\r\n        />\r\n      );\r\n    else\r\n      return (\r\n        <Part7\r\n          part={part}\r\n          testId={testId}\r\n          submitId={submitId}\r\n          setSubmitAnswers7={setSubmitAnswers7}\r\n        />\r\n      );\r\n  };\r\n  return <Container>{renderPart(part)}</Container>;\r\n}\r\nexport default React.memo(Part);\r\n","import { Fade, Typography } from \"@material-ui/core\";\r\nimport { convertTime } from \"helper\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport submitTestApi from \"apis/submitTestApi\";\r\n\r\nexport default function Timer({ \r\n  value,  \r\n  onSubmitTest\r\n}) {\r\n  let initTime = convertTime(value);\r\n  const [time, setTime] = useState({\r\n    hours: initTime.hours,\r\n    minutes: initTime.minutes,\r\n    seconds: initTime.seconds,\r\n  });\r\n  const [timer, setTimer] = useState(null);\r\n\r\n \r\n  useEffect(() => {\r\n  const items = JSON.parse(localStorage.getItem('time'));\r\n  console.log(items)\r\n  if (items) {\r\n   setTime(items);\r\n  }\r\n}, []);\r\n\r\n\r\n  useEffect(() => {\r\n    let myInterval = setInterval(() => {\r\n      setTime((time) => {\r\n        const updatedTime = { ...time };\r\n        if (time.seconds > 0) {\r\n          updatedTime.seconds--;\r\n        }\r\n        if (time.seconds === 0) {\r\n          if (time.hours === 0 && time.minutes === 0) {\r\n            clearInterval(myInterval);\r\n            onSubmitTest();\r\n          } else if (time.minutes > 0) {\r\n            updatedTime.minutes--;\r\n            updatedTime.seconds = 59;\r\n          } else if (updatedTime.hours > 0) {\r\n            updatedTime.hours--;\r\n            updatedTime.minutes = 59;\r\n            updatedTime.seconds = 59;\r\n          }\r\n        }\r\n        localStorage.setItem('time', JSON.stringify(updatedTime));\r\n        return updatedTime;\r\n      });\r\n    }, 1000);\r\n\r\n    \r\n    return () => {\r\n      if (myInterval) clearInterval(myInterval);\r\n    };\r\n  }, [onSubmitTest]);\r\n\r\n  return (\r\n    <Typography variant=\"h6\">\r\n      {time.hours < 10 && time.hours !== 0\r\n        ? `0${time.hours}:`\r\n        : time.hours >= 10 && `${time.hours}:`}\r\n      {time.minutes < 10 ? `0${time.minutes}` : time.minutes}:\r\n      {time.seconds < 10 ? `0${time.seconds}` : time.seconds}\r\n    </Typography>\r\n  );\r\n}\r\n","import { Button, Container, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { ROUTES } from \"../constants\";\r\nimport Part from \"components/Test/Part\";\r\nimport useTitle from \"hooks/useTitle\";\r\nimport Pagination from \"components/Test/Pagination\";\r\nimport Timer from \"components/Test/Timer\";\r\nimport testApi from \"apis/testApi\";\r\nimport submitTestApi from \"apis/submitTestApi\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport { text } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minHeight: \"80vh\",\r\n    color: \"white\",\r\n    position: \"relative\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  button: {\r\n    padding: \"10px 25px\",\r\n    fontWeight: \"600\",\r\n    backgroundColor: \"#68c2e8\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#56bde8\",\r\n      boxShadow: \"0 0 10px 5px rgba(0, 0, 0, 0.25)\",\r\n    },\r\n  },\r\n  title: {\r\n    marginBottom: \"10px\",\r\n    fontWeight: 600,\r\n    color: \"#68c2e8\",\r\n  },\r\n  timeTotal: {\r\n    marginBottom: \"15px\",\r\n    fontWeight: 500,\r\n  },\r\n  timeDetail: {\r\n    marginBottom: \"20px\",\r\n  },\r\n  control: {\r\n    margin: \"5px 0\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function StartTestPage() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [test, setTest] = useState('');\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const [submitAnswers1, setSubmitAnswers1] = useState([]);\r\n  const [submitAnswers2, setSubmitAnswers2] = useState([]);\r\n  const [submitAnswers3, setSubmitAnswers3] = useState([]);\r\n  const [submitAnswers4, setSubmitAnswers4] = useState([]);\r\n  const [submitAnswers5, setSubmitAnswers5] = useState([]);\r\n  const [submitAnswers6, setSubmitAnswers6] = useState([]);\r\n  const [submitAnswers7, setSubmitAnswers7] = useState([]);\r\n  const [submitId, setSubmitId] = useState('');\r\n  const [submitItem, setSubmitItem] = useState(null);\r\n  //const [isFinish, setIsFinish] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await testApi.getTestById(id);\r\n      setTest(res.data);\r\n    })();\r\n    return () => {};\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('page', JSON.stringify(currentPage));\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n  const items = JSON.parse(localStorage.getItem('page'));\r\n  console.log(items)\r\n  if (items) {\r\n   setCurrentPage(items);\r\n  }\r\n}, []);\r\n\r\nconsole.log(currentPage)\r\n\r\n  const createSubmit = async () =>{   \r\n    const resCheck = await submitTestApi.getSubmitByTest(id);\r\n    \r\n    if(resCheck.data === null){\r\n      const resSubmit = await submitTestApi.postSubmit(id);\r\n      setSubmitId(resSubmit.data._id);\r\n      setState(1);\r\n      return;\r\n    }\r\n    else{     \r\n      setSubmitId(resCheck.data._id);\r\n    }\r\n    if(resCheck.data.IsFinish === true){\r\n      setSubmitItem(resCheck.data);\r\n      localStorage.clear();\r\n      setState(2); \r\n    }\r\n    else{\r\n      setState(1); \r\n    }\r\n  };\r\n\r\n  const onSubmitTest = async () =>{  \r\n    if(currentPage === 1) {\r\n      await submitTestApi.putSubmit(submitId, currentPage, submitAnswers1);\r\n    }\r\n\r\n    if(currentPage === 2) {\r\n      await submitTestApi.putSubmit(submitId, currentPage, submitAnswers2);\r\n    }\r\n\r\n    if(currentPage === 3) {\r\n      await submitTestApi.putSubmit(submitId, currentPage, submitAnswers3);\r\n    }\r\n\r\n    if(currentPage === 4) {\r\n    await submitTestApi.putSubmit(submitId, currentPage, submitAnswers4);      \r\n    }\r\n\r\n    if(currentPage === 5) {\r\n     await submitTestApi.putSubmit(submitId, currentPage, submitAnswers5);\r\n    }\r\n\r\n    if(currentPage === 6) {\r\n      await submitTestApi.putSubmit(submitId, currentPage, submitAnswers6);\r\n    }\r\n\r\n    if(currentPage === 7) {\r\n     await submitTestApi.putSubmit(submitId, currentPage, submitAnswers7);\r\n    }\r\n\r\n    const res = await submitTestApi.getSubmitByTest(id);\r\n    setSubmitItem(res.data);\r\n    localStorage.clear();\r\n    setState(2); \r\n\r\n  };\r\n\r\n  const onPlayAgain = async () =>{  \r\n   await submitTestApi.deleteSubmit(submitId);\r\n   window.location.reload();\r\n  };\r\n\r\n  \r\n  useTitle(\"Test\");\r\n  return (\r\n    <>\r\n      {state === 0 ? (\r\n        <div className={classes.root}>\r\n          <Container className={classes.container}>\r\n            <Typography className={classes.title} variant=\"h2\">\r\n              {test.Name}\r\n            </Typography>\r\n            <Typography className={classes.timeTotal} variant=\"h5\">\r\n              Total time: {test.Duration} minutes\r\n            </Typography>\r\n            <Button onClick={() => createSubmit()} className={classes.button}>\r\n              Start\r\n            </Button>\r\n          </Container>\r\n        </div>\r\n      ) : state === 1 ? (\r\n        <Grid container>\r\n          <Grid item lg={8} md={6} xs={12}>\r\n            <Container>\r\n              <Pagination\r\n                type={\"part\"}\r\n                pages={7}\r\n                setCurrentPage={setCurrentPage}\r\n                submitId={submitId}\r\n                submitAnswers1 ={submitAnswers1}\r\n                submitAnswers2 ={submitAnswers2}\r\n                submitAnswers3 ={submitAnswers3}\r\n                submitAnswers4 ={submitAnswers4}\r\n                submitAnswers5 ={submitAnswers5}\r\n                submitAnswers6 ={submitAnswers6}\r\n                submitAnswers7 ={submitAnswers7}\r\n             \r\n              ></Pagination>\r\n              <Part \r\n              part={currentPage}\r\n              testId={id} \r\n              submitId={submitId}\r\n              setSubmitAnswers1={setSubmitAnswers1} \r\n              setSubmitAnswers2={setSubmitAnswers2}\r\n              setSubmitAnswers3={setSubmitAnswers3}\r\n              setSubmitAnswers4={setSubmitAnswers4}\r\n              setSubmitAnswers5={setSubmitAnswers5}\r\n              setSubmitAnswers6={setSubmitAnswers6}\r\n              setSubmitAnswers7={setSubmitAnswers7}\r\n             \r\n              />\r\n              \r\n              \r\n            </Container>\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xs={12}>\r\n            <div className=\"my-5 d-flex jus-content-around\">\r\n              <Timer \r\n              value={test.Duration * 60} \r\n              onSubmitTest = {onSubmitTest }\r\n          \r\n              \r\n              ></Timer>\r\n              <Button className={classes.button} onClick={() => onSubmitTest()}>\r\n                Submit\r\n              </Button>\r\n            </div>\r\n         \r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <div className={classes.root}>\r\n          <Container className={classes.container}>\r\n            <Typography className={classes.title} variant=\"h4\">\r\n              Congrats\r\n            </Typography>\r\n            <Typography className={classes.timeTotal} variant=\"h5\">\r\n              Total point: {submitItem?.Score} points\r\n            </Typography>\r\n            <Typography className={classes.timeDetail} variant=\"body2\">\r\n              Listening: {submitItem?.ListenScore} points ({submitItem?.ListenSentences} sentences are correct)\r\n            </Typography>\r\n            <Typography className={classes.timeDetail} variant=\"body2\">\r\n              Reading: {submitItem?.ReadScore} points ({submitItem?.ReadSentences} sentences are correct)\r\n            </Typography>\r\n            <Button\r\n              onClick={() =>history.replace(ROUTES.TEST)}\r\n              className={`${classes.button} mb-5`}\r\n            >\r\n              Quay về\r\n            </Button>\r\n            <Button\r\n              onClick={() =>onPlayAgain()}\r\n              className={classes.button}\r\n             \r\n            >\r\n              Chơi lại\r\n            </Button>\r\n          </Container>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}