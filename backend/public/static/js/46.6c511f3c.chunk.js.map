{"version":3,"sources":["apis/grammarApi.js","pages/GrammarByLevel.js"],"names":["URL","grammarApi","getGrammar","id","axios","get","getGrammarById","getGrammarByLevel","level","token","headers","Authorization","getGrammarLevels","getAllGrammar","postGrammar","formData","post","header","putGrammar","put","params","deleteGrammar","patch","searchGrammar","title","useStyle","makeStyles","mobilelist","height","floatleft","float","margin","padding","display","fontSize","fontWeight","color","tldetail","textlimit","overflow","textOverflow","whiteSpace","width","GrammarByLevelPage","useTitle","useState","list","setList","classes","useHistory","useParams","useEffect","a","apiRes","status","console","log","data","grammars","variant","align","className","style","position","left","map","item","to","_id","src","image","Image","cloudinaryImgOptimize","DEFAULTS","IMAGE_SRC","Title","Content"],"mappings":"mIACMA,EAAG,eAEHC,EAAa,CACjBC,WAAY,SAACC,GACX,OAAOC,IAAMC,IAAN,UAAaL,EAAb,wBAAgCG,KAGzCG,eAAgB,SAACH,GACf,OAAOC,IAAMC,IAAN,UAAaL,EAAb,8BAAsCG,KAG/CI,kBAAmB,SAACC,EAAOC,GACzB,OAAOL,IAAMC,IAAN,UAAaL,EAAb,iCAAyCQ,GAAS,CACvDE,QAAS,CAACC,cAAeF,MAI7BG,iBAAkB,SAACH,GACjB,OAAOL,IAAMC,IAAN,UAAaL,EAAb,uBAAuC,CAC5CU,QAAS,CAACC,cAAeF,MAI7BI,cAAe,SAACJ,GACd,OAAOL,IAAMC,IAAN,UAAaL,EAAb,oBAAoC,CACzCU,QAAS,CAACC,cAAeF,MAI7BK,YAAa,SAACC,GACZ,OAAOX,IAAMY,KAAN,UAAchB,EAAd,gCAAsCe,GAC7C,CACEE,OAAQ,CAAE,eAAgB,0BAI9BC,WAAY,SAACf,EAAIY,GACf,OAAOX,IAAMe,IAAN,UAAanB,EAAb,wBAAgCG,GAAhC,eAA2CY,GAClD,CACEK,OAAQ,CAAEjB,MACVc,OAAQ,CAAE,eAAgB,0BAI9BI,cAAe,SAAClB,GACd,OAAOC,IAAMkB,MAAN,UAAetB,EAAf,2BAAqCG,KAG9CoB,cAAe,SAACC,GACd,OAAOpB,IAAMC,IAAN,UAAaL,EAAb,mBAAmC,CAACoB,OAAQ,CAACI,aAIzCvB,O,6JC1CTwB,EAAWC,aAAW,iBAAO,CACjCC,WAAa,CACXC,OAAQ,SAGZC,UAAW,CACTC,MAAO,OACPC,OAAQ,kBACRC,QAAS,OAEXR,MAAO,CACLS,QAAS,eACTC,SAAU,SACVC,WAAY,IACZC,MAAO,OACPL,OAAQ,qBAER,mBAAoB,CAClBK,MAAO,SAIXC,SAAU,CACRH,SAAU,SACVC,WAAW,IACXC,MAAO,SAETE,UAAW,CACPC,SAAU,SACVC,aAAc,WACdC,WAAY,SACdC,MAAO,aAsEMC,UAjEf,WACEC,YAAS,WACT,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAASvB,IAGRjB,GAFSyC,cAEDC,cAAY1C,OA8B3B,OA5BC2C,qBAAU,WAWV,OAVA,sBAAC,4BAAAC,EAAA,+EAEwBnD,IAAWM,kBAAkBC,GAFrD,OAGyB,OADhB6C,EAFT,QAGcC,SACPC,QAAQC,IAAIH,EAAOI,MACrBV,EAAQM,EAAOI,KAAKC,WALzB,sGAAD,GAUO,eACN,IAiBE,qCAAE,eAAC,IAAD,CAAYC,QAAQ,KAAKC,MAAM,SAA/B,mBACKpD,KAET,qBAAKqD,UAAU,YAAYC,MAAO,CAAEC,SAAU,WAAYC,KAAM,SAAhE,SACKlB,GACCA,EAAKmB,KAAI,SAACC,GAAD,OAAU,qBAAKL,UAAWb,EAAQrB,WAAxB,SACjB,gCACA,eAAC,IAAD,CAAMwC,GAAE,2BAAsBD,EAAKE,KAAnC,UACE,qBAAKP,UAAWb,EAAQnB,UAAxB,SACI,qBAAKD,OAAO,OAAOc,MAAM,OAAO2B,KAxB/BC,EAwB6CJ,EAAKK,MAvBlDC,YAAuBF,GAAgBG,IAASC,UAC1D,IACA,KACA,GACA,QAqBS,mBAAGb,UAAWb,EAAQxB,MAAtB,SAA6B,uCAAU0C,EAAKS,WAC5C,0BAEF,qBAAKd,UAAWb,EAAQV,UAAxB,SACE,sBAAMuB,UAAWb,EAAQX,SAAzB,SAAoC6B,EAAKU,iBA9BzC,IAACN,OAeb","file":"static/js/46.6c511f3c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst URL = `/api/grammar`;\r\n\r\nconst grammarApi = {\r\n  getGrammar: (id) => {\r\n    return axios.get(`${URL}/get-grammar/${id}`)\r\n  },\r\n\r\n  getGrammarById: (id) => {\r\n    return axios.get(`${URL}/get-grammar-by-id/${id}`)\r\n  },\r\n\r\n  getGrammarByLevel: (level, token) => {\r\n    return axios.get(`${URL}/get-grammar-by-level/${level}`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  getGrammarLevels: (token) => {\r\n    return axios.get(`${URL}/get-grammar-levels`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  getAllGrammar: (token) => {\r\n    return axios.get(`${URL}/get-all-grammar`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  postGrammar: (formData) => {\r\n    return axios.post(`${URL}/post-grammar`, {...formData},\r\n    {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    })\r\n  },\r\n\r\n  putGrammar: (id, formData) => {\r\n    return axios.put(`${URL}/put-grammar/${id}`, { ...formData},\r\n    {\r\n      params: { id },\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n\r\n  deleteGrammar: (id) => {\r\n    return axios.patch(`${URL}/delete-grammar/${id}`)\r\n  },\r\n\r\n  searchGrammar: (title) => {\r\n    return axios.get(`${URL}/search-grammar`, {params: {title}})\r\n  },\r\n}\r\n\r\nexport default grammarApi;\r\n","import useTitle from 'hooks/useTitle';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport React, { useState, useEffect } from 'react';\r\nimport grammarApi from '../apis/grammarApi';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { cloudinaryImgOptimize } from \"helper\";\r\nimport { DEFAULTS } from 'constants/index';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  mobilelist : {\r\n    height: \"115px\",\r\n \r\n},\r\nfloatleft: {\r\n  float: \"left\",\r\n  margin: \"0 10px 10px 0px\",\r\n  padding: \"2px\",\r\n},\r\ntitle: {\r\n  display: 'inline-block',\r\n  fontSize: '2.0rem',\r\n  fontWeight: 400,\r\n  color: 'blue',\r\n  margin: '0.8rem 0rem 0rem 0',\r\n\r\n  '&:hover, &:focus': {\r\n    color: \"#CCC\",\r\n  },\r\n\r\n},\r\ntldetail: {\r\n  fontSize: '1.5rem',\r\n  fontWeight:400,\r\n  color: 'black', \r\n},\r\ntextlimit: {\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    whiteSpace: \"nowrap\",\r\n  width: \"500px\",\r\n}\r\n\r\n}));\r\n\r\nfunction GrammarByLevelPage() {\r\n  useTitle('Grammar');\r\n  const [list, setList] = useState([]);\r\n  const classes= useStyle();\r\n  const history = useHistory();\r\n\r\n  const  level = useParams().level;\r\n  \r\n   useEffect(() => {\r\n   (async function () {\r\n     try {\r\n       const apiRes = await grammarApi.getGrammarByLevel(level);\r\n       if (apiRes.status === 200) {\r\n           console.log(apiRes.data)\r\n         setList(apiRes.data.grammars);\r\n       }\r\n     } catch (error) {}\r\n   })();\r\n \r\n   return () => {};\r\n }, []);\r\n\r\n const getImage = (image) =>{\r\n    const imgSrc = cloudinaryImgOptimize( image ? image : DEFAULTS.IMAGE_SRC,\r\n         200,\r\n         200,\r\n         true,\r\n         true\r\n     );\r\n     return imgSrc;\r\n}\r\n\r\nconst viewDetail=(id)=>{\r\n    history.push(`/grammar/details/${id}`)\r\n}\r\n\r\n  return (\r\n      <><Typography variant=\"h6\" align=\"center\">\r\n      Level {level}\r\n    </Typography>\r\n    <div className=\"container\" style={{ position: \"relative\", left: \"250px\" }}>\r\n        {list && (\r\n          list.map((item) => <div className={classes.mobilelist}>\r\n            <div>\r\n            <Link to={`/grammar/details/${item._id}`}>\r\n              <div className={classes.floatleft}>               \r\n                  <img height=\"80px\" width=\"80px\" src={getImage(item.Image)}/>               \r\n                </div>\r\n                  <p className={classes.title}><strong> {item.Title}</strong></p>\r\n                  <br></br>\r\n                  </Link>\r\n                <div className={classes.textlimit}>\r\n                  <span className={classes.tldetail}>{item.Content}</span>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n         \r\n          ))}\r\n         </div> </>\r\n  );\r\n        }\r\n\r\nexport default GrammarByLevelPage;\r\n\r\n"],"sourceRoot":""}