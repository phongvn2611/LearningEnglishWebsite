{"version":3,"sources":["assets/audios/correct.mp3","helper/speakerHelper.js","assets/audios/incorrect.mp3","hooks/useSpeaker.js","components/UI/Speaker.js","apis/ipaApi.js","components/IPA/style.js","components/IPA/RelativeIPA.js","redux/actions/ipaAction.js","components/IPA/DetailIPA.js"],"names":["onPlayAudio","audioSrc","Audio","play","onTextToSpeech","text","voice","speed","volume","speech","SpeechSynthesisUtterance","window","speechSynthesis","cancel","lang","rate","speak","playSoundAnswer","word","isCorrect","speakDelay","vol","audio","playbackRate","src","correctAudio","incorrectAudio","setTimeout","globalVoices","useSpeaker","useState","voices","setVoices","useSelector","state","voiceReducer","voiceURI","find","i","useEffect","length","intervalId","setInterval","voiceList","getVoices","filter","indexOf","clearInterval","Speaker","props","className","type","isWrap","handleClick","onClick","children","defaultProps","URL","ipaApi","getIPA","id","axios","get","getIPARelative","phonetic","params","getIPAByType","postIPA","formData","token","post","headers","Authorization","makeStyles","groupCollapse","boxShadow","backgroundColor","borderRadius","border","margin","arrowIcon","color","gcTitle","fontWeight","fontSize","gcDetails","display","relative","gcDesc","marginLeft","flexboxcontainer","flexDirection","flexFlow","example","textDecoration","picture","width","height","mouthShapeImg","root","padding","borderBottom","cursor","transition","mobilelist","floatleft","float","title","tldetail","textlimit","overflow","textOverflow","whiteSpace","IPARelative","classes","useStyle","ipas","ipaReducer","dispatch","useDispatch","key","a","response","status","IPA_CONSTANT","GET_IPA_RELATIVE","payload","data","SET_IPA_ERROR","message","imgList","Image","imgSrc","cloudinaryImgOptimize","DEFAULTS","IMAGE_SRC","Accordion","AccordionSummary","expandIcon","AccordionDetails","map","item","_id","location","href","Title","IPAGroupCollapse","useParams","ipa","GET_IPA","history","useHistory","Container","Typography","variant","align","Video","alt","Grid","container","spacing","xs","lg","Phonetic","Examples","exKey","Word","RelativeIPA","Type","Button","push","phoneticList","isNoVoice"],"mappings":"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","file":"static/js/25.ade873bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/correct.369c0cd9.mp3\";","import correctAudio from 'assets/audios/correct.mp3';\nimport incorrectAudio from 'assets/audios/incorrect.mp3';\n// play an audio\nexport const onPlayAudio = (audioSrc) => {\n  const audio = new Audio(audioSrc);\n  audio.play();\n};\n\n// speak a text\nexport const onTextToSpeech = (text = '', voice, speed = 1, volume = 1) => {\n  let speech = new SpeechSynthesisUtterance();\n  window.speechSynthesis.cancel();\n\n  speech.lang = 'en';\n  speech.text = text;\n  speech.volume = volume;\n  speech.voice = voice;\n  speech.rate = speed;\n\n  window.speechSynthesis.speak(speech);\n};\n\n// play sound effect and read a word\nexport const playSoundAnswer = (\n  word = '',\n  isCorrect = true,\n  voice,\n  volume = 1,\n  speed = 1,\n  speakDelay = 1000,\n) => {\n  const vol = volume >= 0 && volume <= 1 ? volume : 1;\n  const rate = speed >= 0 && speed <= 10 ? speed : 1;\n\n  let audio = new Audio();\n  audio.volume = vol;\n  audio.playbackRate = rate;\n  audio.src = isCorrect ? correctAudio : incorrectAudio;\n  audio.play();\n\n  setTimeout(() => {\n    onTextToSpeech(word, voice, rate, vol);\n  }, speakDelay);\n};\n","export default __webpack_public_path__ + \"static/media/incorrect.fdd769b0.mp3\";","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nlet globalVoices = [];\n\n// get voice in redux\nfunction useSpeaker() {\n  const [voices, setVoices] = useState(globalVoices);\n  const { speed, voiceURI, volume } = useSelector((state) => state.voiceReducer);\n  const voice = voices.find((i) => i.voiceURI === voiceURI);\n\n  useEffect(() => {\n    if (globalVoices.length > 0) return;\n\n    const intervalId = setInterval(() => {\n      const voiceList = window.speechSynthesis.getVoices();\n      if (voiceList.length > 0) {\n        globalVoices = voiceList.filter((i) => i.lang.indexOf('en') !== -1);\n        setVoices(voiceList.filter((i) => i.lang.indexOf('en') !== -1));\n        clearInterval(intervalId);\n      }\n    }, 50);\n\n    return () => {\n      intervalId && clearInterval(intervalId);\n    };\n  }, []);\n\n  return { speed, volume, voice };\n}\n\nexport default useSpeaker;\n","import SpeakerIcon from '@material-ui/icons/Speaker';\nimport { onPlayAudio, onTextToSpeech } from 'helper/speakerHelper';\nimport useSpeaker from 'hooks/useSpeaker';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction Speaker(props) {\n  const { className, type, text, audioSrc, isWrap } = props;\n\n  const { voice, speed, volume } = useSpeaker();\n\n  const handleClick = () => {\n    if (type) {\n      onTextToSpeech(text, voice, speed, volume);\n    } else {\n      onPlayAudio(audioSrc);\n    }\n  };\n\n  return (\n    <>\n      {isWrap ? (\n        <div onClick={handleClick}>{props.children}</div>\n      ) : (\n        <SpeakerIcon\n          className={`dyno-speaker ${className}`}\n          onClick={handleClick}\n        />\n      )}\n    </>\n  );\n}\n\nSpeaker.propTypes = {\n  audioSrc: PropTypes.any,\n  className: PropTypes.string,\n  text: PropTypes.string,\n  type: PropTypes.bool, // type = false: play audio, true: play text\n  isWrap: PropTypes.bool,\n  children: PropTypes.any,\n};\n\nSpeaker.defaultProps = {\n  audioSrc: '',\n  className: '',\n  text: '',\n  type: true,\n  isWrap: false,\n};\n\nexport default Speaker;\n","import axios from \"axios\";\nconst URL = `/api/ipa`;\n\nconst ipaApi = {\n  getIPA: (id) => {\n    return axios.get(`${URL}/get-ipa-by-id/${id}`)\n  },\n\n  getIPARelative: (type, phonetic) => {\n    return axios.get(`${URL}/get-ipa-relative`, { params: { type, phonetic } })\n  },\n\n  getIPAByType: (type) => {\n    return axios.get(`${URL}/get-ipa-by-type/${type}`)\n  },\n\n\n  postIPA: (formData, token) => {\n    return axios.post(`${URL}/post-ipa`, formData, {\n      headers: {Authorization: token}\n    })\n  },\n\n}\n\nexport default ipaApi;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  groupCollapse: {\n    boxShadow: 'var(--box-shadow-2)',\n    backgroundColor: 'var(--bg-color-accent)',\n    borderRadius: 'var(--border-radius)',\n    border: 'none',\n    margin: '2.4rem 0',\n  },\n\n  arrowIcon: {\n    color: 'var(--grey)',\n  },\n\n  gcTitle: {\n    color: 'var(--secondary-color)',\n    fontWeight: 500,\n    fontSize: '2rem',\n  },\n\n  gcDetails: {\n    display: 'flex-center',\n  },\n\n  word: {\n    display: 'inline-block',\n    fontSize: '2.4rem',\n    color: 'var(--accent-color)',\n    margin: '0.8rem 1rem 0.8rem 0',\n  },\n  relative: {\n    display: 'inline-block',\n    fontSize: '2.2rem',\n    fontWeight: 500,\n    color: 'red',\n    margin: '0.8rem 0rem 0rem 0',\n  },\n\n  gcDesc: {\n    fontSize: '1.7rem',\n    color: 'var(--text-color)',\n    marginLeft: '1.2rem0'\n  },\n\n  flexboxcontainer: {\n    flexDirection: \"row\",\n    flexFlow: 'auto',\n  },\n\n  example: {\n    '& b': {\n      fontSize: '1.6rem',\n      textDecoration: 'underline',\n    },\n    color: 'var(--text-color)',\n    fontSize: '1.6rem',\n  },\n  picture: {\n    width: '50rem',\n    height: '30rem',\n    marginLeft: '15rem',\n  },\n\n  mouthShapeImg: {\n    width: '12rem',\n    height: '12rem',\n    marginLeft: '1rem',\n  },\n  root: {\n    padding: '1.2rem 0',\n    borderBottom: 'solid 1px var(--border-color)',\n    cursor: 'pointer',\n    transition: 'all 0.35s',\n\n    '&:hover, &:active': {\n      borderBottom: 'solid 1px var(--accent-color)',\n    },\n  },\n  mobilelist : {\n    height: \"115px\",\n \n  },\nfloatleft: {\n  float: \"left\",\n  margin: \"0 10px 10px 0px\",\n  padding: \"2px\",\n},\ntitle: {\n  display: 'inline-block',\n  fontSize: '2.0rem',\n  fontWeight: 400,\n  color: 'blue',\n  margin: '0.8rem 0rem 0rem 0',\n},\ntldetail: {\n  fontSize: '1.5rem',\n  fontWeight:400,\n  color: 'black', \n},\ntextlimit: {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  width: \"500px\",\n},\n\n}));\n","import Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport React, { useEffect } from \"react\";\nimport useStyle from \"./style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from \"../../constants/index\";\nimport { getIPARelative } from \"../../redux/actions/ipaAction\";\n\nfunction IPARelative(props) {\n  const classes = useStyle();\n  const ipas = useSelector((state) => state.ipaReducer.ipas);\n\n  const { type, phonetic } = props;\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(getIPARelative(type, phonetic)), [dispatch]);\n\n  const handleClick = (id) => {\n    window.location.href = `${id}`;\n  };\n\n  let imgList = [];\n  if (ipas) {\n    for (let i = 0; i < ipas.length; i++) {\n      if (ipas[i].Image) {\n        let imgSrc = cloudinaryImgOptimize(\n          ipas[i].Image ? ipas[i].Image : DEFAULTS.IMAGE_SRC,\n          200,\n          200,\n          true,\n          true\n        );\n        imgList[i] = imgSrc;\n      }\n    }\n  }\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon className={classes.arrowIcon} />}\n      >\n        <b className={classes.relative}>Relative Pronunciation</b>\n      </AccordionSummary>\n\n      <AccordionDetails>\n        <div className=\"container\">\n          {ipas &&\n            ipas.map((item, key) => (\n              <div className={classes.mobilelist}>\n                <div>\n                  <div className={classes.floatleft}>\n                    <a>\n                      <img\n                        height=\"80px\"\n                        width=\"80px\"\n                        src={imgList[key]}\n                        onClick={() => handleClick(item._id)}\n                      />\n                    </a>\n                  </div>\n                  <a\n                    className={classes.title}\n                    href={`/ipa/details/${item._id}`}\n                  >\n                    <u> {item.Title}</u>\n                  </a>\n                  <br></br>\n\n                  <div className={classes.textlimit}>\n                    <span className={classes.tldetail}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default IPARelative;\n","import IPA_CONSTANT from \"../constants/ipaConstant\";\nimport ipaApi from \"./../../apis/ipaApi\";\n\n\nexport const getIPA = (id) => {\n    return async (dispatch) => {\n        try { \n          const response = await ipaApi.getIPA(id);\n          if(response.status===200){\n            dispatch({\n              type: IPA_CONSTANT.GET_IPA,\n              payload: response.data,\n            })\n          }\n          else\n          {\n            dispatch({\n              type: IPA_CONSTANT.SET_IPA_ERROR,\n              payload: response.data.message,\n            })\n          }\n        } catch (error) {\n          dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\n            payload: error.response.message\n          })\n      }\n    }\n};\n\nexport const getIPARelative = (type, key) => {\n  return async (dispatch) => {\n      try { \n        const response = await ipaApi.getIPARelative(type, key);\n        if(response.status===200){\n          dispatch({\n            type: IPA_CONSTANT.GET_IPA_RELATIVE,\n            payload: response.data,\n          })\n        }\n        else\n        {\n          dispatch({\n            type: IPA_CONSTANT.SET_IPA_ERROR,\n            payload: response.data.message,\n          })\n        }\n      } catch (error) {\n        dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\n          payload: error.response.message\n        })\n    }\n  }\n};\n\nexport const getIPAByType = (type) => {\n  return async (dispatch) => {\n      try { \n       \n        const response = await ipaApi.getIPAByType(type);\n        console.log(response.data)\n        if(response.status===200){\n          dispatch({\n            type: IPA_CONSTANT.GET_IPA_BY_TYPE,\n            payload: response.data.ipas,\n          })\n        }\n        else\n        {\n          dispatch({\n            type: IPA_CONSTANT.SET_IPA_ERROR,\n            payload: response.data.message,\n          })\n        }\n      } catch (error) {\n        dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\n          payload: error.response.message\n        })\n    }\n  }\n};\n\nexport const postIPA = (formData) => {\n    return async (dispatch, getState) => {\n        try { \n          const {\n            authReducer: { user },\n          } = getState();\n\n          const response = await ipaApi.postIPA(formData, user.access_token);\n          if(response.status===200){\n            dispatch({\n              type: IPA_CONSTANT.CREATE_IPA,\n              payload: response.data.ipa,\n            })\n          }\n          else\n          {\n            dispatch({\n              type: IPA_CONSTANT.SET_IPA_ERROR,\n              payload: response.data.message,\n            })\n          }\n        } catch (error) {\n          dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\n             payload: error.response.message\n          })\n      }\n    }\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from '../../constants/index';\nimport Container from \"@material-ui/core/Container\";\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Speaker from 'components/UI/Speaker';\nimport PropTypes from 'prop-types';\nimport useStyle from './style';\nimport {getIPA} from '../../redux/actions/ipaAction';\nimport RelativeIPA from './RelativeIPA';\nimport { useHistory } from \"react-router-dom\";\n\nfunction IPAGroupCollapse() {\n    const classes = useStyle();\n  const id = useParams().id;\n  const ipa = useSelector((state) => state.ipaReducer.ipa);\n \n  const dispatch = useDispatch();\n  useEffect(() => \n  dispatch(getIPA(id)), [dispatch])\n\n  const history = useHistory();\n\n  function handleClickGoBack() {\n    history.push(`/ipa`);\n  }\n\n\n  let imgSrc = null;\n    if(ipa)\n    {\n        imgSrc = cloudinaryImgOptimize( ipa.Image ? ipa.Image : DEFAULTS.IMAGE_SRC,\n            200,\n            200,\n            true,\n            true\n        );\n    }\n\n  return (\n      <Container>\n          {ipa && (\n        <><><Typography variant=\"h6\" align=\"center\">\n                 Pronunciation\n              </Typography>\n              <Typography variant=\"h6\">\n                  {ipa.Title}\n              </Typography>\n              </>\n              {ipa.Video? (\n              <p align=\"center\"><iframe src= {ipa.Video} width=\"500\" height=\"300\"></iframe></p>\n            ):(\n                <img className={classes.picture} src={imgSrc} alt=\"photo\" align=\"center\" />\n            )}\n             \n                      <AccordionDetails>\n                          <Grid container spacing={3}>\n                              <Grid\n                                  item\n                                  className=\"flex-center-between\"\n                                  xs={12}\n                                  lg={6}\n                              >\n                                  <div>\n                                      <div className=\"flex-center--ver\">\n                                          <b className={classes.word}> Phonetic: / {ipa.Phonetic} /</b>\n                                          {ipa.Audio && (\n                                              <Speaker type={false} audioSrc={ipa.Audio} />\n                                          )}\n                                      </div>\n\n\n                                      <div className={classes.example}>\n                                          <b>Example:</b>\n                                    {ipa.Examples && (\n                                          ipa.Examples.map((example, exKey) => (\n                                              <div className=\"flex-center--ver my-4\" key={exKey}>\n                                                  <span className=\"mr-4\">\n                                                      {example.Word}\n                                                      <span className=\"phonetic px-3\">\n                                                          {example.Phonetic}\n                                                      </span>\n                                                  </span>\n                                                  <Speaker type={true} text={example.Word} />\n                                              </div>\n                                          ))\n                                          )}\n                                      </div>\n                                  </div>\n\n                              </Grid>\n                          </Grid>\n                      </AccordionDetails>\n\n                <RelativeIPA type={ipa.Type} phonetic={ipa.Phonetic}/>\n\n            <Typography></Typography>\n            <Button color='primary'onClick={() => handleClickGoBack()}> GO BACK</Button>\n</>\n         \n          )}\n      </Container>\n  );\n}\n\nIPAGroupCollapse.propTypes = {\n    phoneticList: PropTypes.array,\n    title: PropTypes.string,\n    isNoVoice: PropTypes.bool,\n};\n  \n  IPAGroupCollapse.defaultProps = {\n    phoneticList: [],\n    title: '',\n    isNoVoice: false,\n};\n\nexport default IPAGroupCollapse;\n"],"sourceRoot":""}