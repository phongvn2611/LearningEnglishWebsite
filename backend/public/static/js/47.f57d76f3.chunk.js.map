{"version":3,"sources":["apis/ipaApi.js","components/IPA/Consonants.js","components/IPA/Diphthongs.js","components/IPA/Vowels.js","pages/IPA.js"],"names":["URL","ipaApi","getIPA","id","axios","get","getIPARelative","type","phonetic","params","getIPAByType","postIPA","formData","token","post","headers","Authorization","useStyle","makeStyles","mobilelist","height","floatleft","float","margin","padding","title","display","fontSize","fontWeight","color","tldetail","textlimit","overflow","textOverflow","whiteSpace","width","Consonants","useState","list","setList","classes","useHistory","useEffect","a","apiRes","status","data","ipas","className","style","position","left","map","item","to","_id","src","image","Image","cloudinaryImgOptimize","DEFAULTS","IMAGE_SRC","Title","Description","theme","dictionaryRoot","IPAPage","useTitle","root","Typography","variant","align","Vowels","Diphthongs"],"mappings":"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","file":"static/js/47.f57d76f3.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst URL = `/api/ipa`;\r\n\r\nconst ipaApi = {\r\n  getIPA: (id) => {\r\n    return axios.get(`${URL}/get-ipa-by-id/${id}`)\r\n  },\r\n\r\n  getIPARelative: (type, phonetic) => {\r\n    return axios.get(`${URL}/get-ipa-relative`, { params: { type, phonetic } })\r\n  },\r\n\r\n  getIPAByType: (type) => {\r\n    return axios.get(`${URL}/get-ipa-by-type/${type}`)\r\n  },\r\n\r\n\r\n  postIPA: (formData, token) => {\r\n    return axios.post(`${URL}/post-ipa`, formData, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n}\r\n\r\nexport default ipaApi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ipaApi from \"apis/ipaApi\";\r\nimport { cloudinaryImgOptimize } from \"helper\";\r\nimport { DEFAULTS } from \"constants/index\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  mobilelist: {\r\n    height: \"115px\",\r\n  },\r\n  floatleft: {\r\n    float: \"left\",\r\n    margin: \"0 10px 10px 0px\",\r\n    padding: \"2px\",\r\n  },\r\n  title: {\r\n    display: \"inline-block\",\r\n    fontSize: \"2.0rem\",\r\n    fontWeight: 400,\r\n    color: \"blue\",\r\n    margin: \"0.8rem 0rem 0rem 0\",\r\n    \"&:hover, &:focus\": {\r\n      color: \"#CCC\",\r\n    },\r\n  },\r\n  tldetail: {\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: 400,\r\n    color: \"black\",\r\n  },\r\n  textlimit: {\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    whiteSpace: \"nowrap\",\r\n    width: \"500px\",\r\n  },\r\n}));\r\n\r\nfunction Consonants() {\r\n  const [list, setList] = useState([]);\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        const apiRes = await ipaApi.getIPAByType(\"Consonants\");\r\n        if (apiRes.status === 200) {\r\n          setList(apiRes.data.ipas);\r\n        }\r\n      } catch (error) {}\r\n    })();\r\n\r\n    return () => {};\r\n  }, []);\r\n\r\n  const getImage = (image) => {\r\n    const imgSrc = cloudinaryImgOptimize(\r\n      image ? image : DEFAULTS.IMAGE_SRC,\r\n      200,\r\n      200,\r\n      true,\r\n      true\r\n    );\r\n    return imgSrc;\r\n  };\r\n\r\n  const viewDetail = (id) => {\r\n    history.push(`/ipa/details/${id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"english-title\">3. Consonants</h2>\r\n      <h3 className=\"english-sub-title\" />\r\n      <div className=\"container\" style={{ position: \"relative\", left: \"50px\" }}>\r\n        {list &&\r\n          list.map((item) => (\r\n            <div className={classes.mobilelist}>\r\n              <div>\r\n                <Link to={`/ipa/details/${item._id}`}>\r\n                  <div className={classes.floatleft}>\r\n                    <img\r\n                      height=\"80px\"\r\n                      width=\"80px\"\r\n                      src={getImage(item.Image)}\r\n                    />\r\n                  </div>\r\n                  <p className={classes.title}>\r\n                    <strong> {item.Title}</strong>\r\n                  </p>\r\n                  <br></br>\r\n                </Link>\r\n                <div className={classes.textlimit}>\r\n                  <span className={classes.tldetail}>{item.Description}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Consonants;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ipaApi from 'apis/ipaApi';\r\nimport { cloudinaryImgOptimize } from \"helper\";\r\nimport { DEFAULTS } from 'constants/index';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  mobilelist : {\r\n    height: \"115px\",\r\n \r\n},\r\nfloatleft: {\r\n  float: \"left\",\r\n  margin: \"0 10px 10px 0px\",\r\n  padding: \"2px\",\r\n},\r\ntitle: {\r\n  display: 'inline-block',\r\n  fontSize: '2.0rem',\r\n  fontWeight: 400,\r\n  color: 'blue',\r\n  margin: '0.8rem 0rem 0rem 0',\r\n  '&:hover, &:focus': {\r\n    color: \"#CCC\",\r\n  },\r\n},\r\ntldetail: {\r\n  fontSize: '1.5rem',\r\n  fontWeight:400,\r\n  color: 'black', \r\n},\r\ntextlimit: {\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    whiteSpace: \"nowrap\",\r\n  width: \"500px\",\r\n}\r\n\r\n}));\r\n\r\nfunction Consonants() {\r\n  const [list, setList] = useState([]);\r\n  const classes= useStyle();\r\n  const history = useHistory();\r\n  \r\n  useEffect(() => {\r\n  (async function () {\r\n    try {\r\n      const apiRes = await ipaApi.getIPAByType(\"Diphthongs\");\r\n      if (apiRes.status === 200) {\r\n        setList(apiRes.data.ipas);\r\n      }\r\n    } catch (error) {}\r\n  })();\r\n\r\n  return () => {};\r\n}, []);\r\n\r\nconst getImage = (image) =>{\r\n  const imgSrc = cloudinaryImgOptimize( image ? image : DEFAULTS.IMAGE_SRC,\r\n       200,\r\n       200,\r\n       true,\r\n       true\r\n   );\r\n   return imgSrc;\r\n  }\r\n\r\n   const viewDetail=(id)=>{\r\n    history.push(`/ipa/details/${id}`)\r\n}\r\n\r\n\r\n  return (\r\n   \r\n      <><h2 className=\"english-title\">2. Diphthongs</h2>\r\n      <h3 className=\"english-sub-title\" />\r\n      <div className=\"container\" style={{ position: \"relative\", left: \"50px\" }}>\r\n      {list && (\r\n        list.map((item) => <div className={classes.mobilelist}>\r\n          <div>\r\n          <Link to={`/ipa/details/${item._id}`}>\r\n            <div className={classes.floatleft}>\r\n                <img height=\"80px\" width=\"80px\" src={getImage(item.Image)}/>\r\n            </div>\r\n            <p className={classes.title}><strong> {item.Title}</strong></p>\r\n            <br></br>\r\n          </Link>\r\n            <div className={classes.textlimit}>\r\n              <span className={classes.tldetail}>{item.Description}</span>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        ))}\r\n    </div></>\r\n      );\r\n      }\r\n\r\n      export default Consonants;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ipaApi from 'apis/ipaApi';\r\nimport { cloudinaryImgOptimize } from \"helper\";\r\nimport { DEFAULTS } from 'constants/index';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  mobilelist : {\r\n    height: \"115px\",\r\n \r\n},\r\nfloatleft: {\r\n  float: \"left\",\r\n  margin: \"0 10px 10px 0px\",\r\n  padding: \"2px\",\r\n},\r\ntitle: {\r\n  display: 'inline-block',\r\n  fontSize: '2.0rem',\r\n  fontWeight: 400,\r\n  color: 'blue',\r\n  margin: '0.8rem 0rem 0rem 0',\r\n  '&:hover, &:focus': {\r\n    color: \"#CCC\",\r\n  },\r\n},\r\ntldetail: {\r\n  fontSize: '1.5rem',\r\n  fontWeight:400,\r\n  color: 'black', \r\n},\r\ntextlimit: {\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    whiteSpace: \"nowrap\",\r\n  width: \"500px\",\r\n}\r\n\r\n}));\r\n\r\nfunction Consonants() {\r\n  const [list, setList] = useState([]);\r\n  const classes= useStyle();\r\n  const history = useHistory();\r\n  \r\n  useEffect(() => {\r\n  (async function () {\r\n    try {\r\n      const apiRes = await ipaApi.getIPAByType(\"Vowels\");\r\n      if (apiRes.status === 200) {\r\n        setList(apiRes.data.ipas);\r\n      }\r\n    } catch (error) {}\r\n  })();\r\n\r\n  return () => {};\r\n}, []);\r\n\r\nconst getImage = (image) =>{\r\n  const imgSrc = cloudinaryImgOptimize( image ? image : DEFAULTS.IMAGE_SRC,\r\n       200,\r\n       200,\r\n       true,\r\n       true\r\n   );\r\n   return imgSrc;\r\n  }\r\n\r\n   const viewDetail=(id)=>{\r\n    history.push(`/ipa/details/${id}`)\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"english-title\">1. Vowels</h2>\r\n      <h3 className=\"english-sub-title\"/>\r\n      <div className=\"container\" style={{position:\"relative\", left: \"50px\"}}>\r\n      {list && (\r\n        list.map((item) => <div className={classes.mobilelist}>\r\n          <div >\r\n          <Link to={`/ipa/details/${item._id}`}>\r\n            <div className={classes.floatleft}>\r\n                <img height=\"80px\" width=\"80px\" src={getImage(item.Image)}/>\r\n            </div>\r\n            <p className={classes.title}><strong> {item.Title}</strong></p>\r\n            <br></br>\r\n          </Link>\r\n            <div className={classes.textlimit}>\r\n              <span className={classes.tldetail}>{item.Description}</span>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        ))}\r\n    </div></>\r\n      );\r\n      }\r\n\r\n      export default Consonants;\r\n","import Consonants from \"components/IPA/Consonants\";\r\nimport Diphthongs from \"components/IPA/Diphthongs\";\r\nimport Vowels from \"components/IPA/Vowels\";\r\nimport useTitle from \"hooks/useTitle\";\r\nimport React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { dictionaryRoot } from \"../components/UI/style\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  ...dictionaryRoot(theme),\r\n}));\r\n\r\nfunction IPAPage() {\r\n  useTitle(\"IPA\");\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={`${classes.root} english-container`}>\r\n      <Typography variant=\"h4\" align=\"center\" style={{ color: \"#CA3600\" }}>\r\n        Pronunciation\r\n      </Typography>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        Introduction to The Sounds of English\r\n      </Typography>\r\n\r\n      <p align=\"center\">\r\n        <iframe\r\n          src=\"https://www.youtube.com/embed/fdRmGvmeY1U?enablejsapi=1\"\r\n          width=\"500\"\r\n          height=\"300\"\r\n        ></iframe>\r\n      </p>\r\n      <Typography align=\"center\">\r\n        This is the introductory video to our The sounds of English series\r\n      </Typography>\r\n\r\n      <Vowels />\r\n      <Diphthongs />\r\n      <Consonants />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IPAPage;\r\n"],"sourceRoot":""}