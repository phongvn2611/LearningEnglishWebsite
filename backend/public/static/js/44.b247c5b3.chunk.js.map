{"version":3,"sources":["pages/Register.js"],"names":["schema","yup","shape","email","trim","required","name","matches","password","min","confirmPassword","oneOf","RegisterPage","useTitle","useCloseNavigation","classes","makeStyles","formStyle","useState","visiblePw","setVisiblePw","visibleConfirmPw","setVisibleConfirmPw","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","dispatch","useDispatch","history","useHistory","loading","setLoading","user","setUser","handleChange","e","target","value","handleRegister","a","userApi","res","setMessage","data","message","replace","response","className","root","onSubmit","autoComplete","labelIcon","src","alt","title","label","size","placeholder","error","Boolean","inputProps","autoFocus","onChange","type","endAdornment","icon","onClick","variant","color","disabled","endIcon","to","ROUTES","LOGIN"],"mappings":"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","file":"static/js/44.b247c5b3.chunk.js","sourcesContent":["import { ROUTES } from \"../constants\";\nimport useCloseNavigation from \"../hooks/useCloseNavigation\";\nimport useTitle from \"../hooks/useTitle\";\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./style/login-signup.scss\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"@material-ui/core/Button\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport InputCustom from \"../components/UI/InputCustom\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { formStyle } from \"../components/UI/style\";\nimport { useDispatch } from \"react-redux\";\nimport userApi from \"./../apis/userApi\";\nimport { setMessage } from \"./../redux/actions/messageAction\";\n\nconst nameRegex = /^[^\\d~`!@#$%^&*\\(\\)\\\\\\|\\.,\\?\\/\\-\\+\\=\\_]+$/gi;\nconst schema = yup.object().shape({\n  email: yup.string().trim().required(\"Nhập email\").email(\"Email không hợp lệ\"),\n  name: yup\n    .string()\n    .trim()\n    .required(\"Nhập họ tên\")\n    .matches(nameRegex, \"Họ tên không chứa số và ký tự đặc biệt\"),\n  password: yup\n    .string()\n    .trim()\n    .required(\"Nhập mật khẩu\")\n    .min(6, `Mật khẩu ít nhất 6 ký tự`),\n  confirmPassword: yup\n    .string()\n    .trim()\n    .required(\"Nhập xác nhận mật khẩu\")\n    .min(6, `Xác nhận mật khẩu ít nhất 6 ký tự`)\n    .oneOf([yup.ref(\"password\")], \"Nhập xác nhận mật khẩu không khớp\"),\n});\n\nfunction RegisterPage() {\n  useTitle(\"Register\");\n  useCloseNavigation();\n\n  const classes = makeStyles(formStyle)();\n\n  const [visiblePw, setVisiblePw] = useState(false);\n  const [visibleConfirmPw, setVisibleConfirmPw] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleRegister = async () => {\n    try {\n      setLoading(true);\n      const res = await userApi.register(user.name, user.email, user.password);\n      if (res) {\n        dispatch(setMessage(res.data.message, \"success\"));\n        history.replace(\"/login\");\n      }\n    } catch (error) {\n      dispatch(setMessage(error.response.data.message, \"error\"));\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"pos-rel w-100vw h-100vh\">\n      <div className=\"transform-center\">\n        <form\n          className={`${classes.root} flex-col`}\n          onSubmit={handleSubmit(handleRegister)}\n          autoComplete=\"off\"\n        >\n          <div className=\"flex-col\">\n            <div className=\"t-center mt-5\">\n              <img\n                className={classes.labelIcon}\n                src=\"https://res.cloudinary.com/phongvn2611/image/upload/v1637079637/english/avatar/logo-tiny_seqkri.png\"\n                alt=\"logo\"\n              />\n            </div>\n            <h1 className={`${classes.title} t-center`}>Đăng ký</h1>\n          </div>\n\n          <div className=\"flex-col\">\n            <InputCustom\n              label=\"Email\"\n              size=\"small\"\n              placeholder=\"Nhập email\"\n              error={Boolean(errors.email)}\n              inputProps={{\n                name: \"email\",\n                autoFocus: true,\n                ...register(\"email\"),\n              }}\n              onChange={handleChange}\n            />\n            {errors.email && (\n              <p className=\"text-error\">{errors.email?.message}</p>\n            )}\n          </div>\n\n          <div className=\"flex-col\">\n            <InputCustom\n              label=\"Họ tên\"\n              size=\"small\"\n              placeholder=\"Nhập họ tên\"\n              error={Boolean(errors.name)}\n              inputProps={{\n                name: \"name\",\n                ...register(\"name\"),\n              }}\n              onChange={handleChange}\n            />\n            {errors.name && (\n              <p className=\"text-error\">{errors.name?.message}</p>\n            )}\n          </div>\n\n          <div className=\"flex-col\">\n            <InputCustom\n              label=\"Mật khẩu\"\n              size=\"small\"\n              placeholder=\"Nhập mật khẩu\"\n              error={Boolean(errors.password)}\n              inputProps={{\n                name: \"password\",\n                type: visiblePw ? \"text\" : \"password\",\n                ...register(\"password\"),\n              }}\n              onChange={handleChange}\n              endAdornment={\n                visiblePw ? (\n                  <VisibilityIcon\n                    className={`${classes.icon} ${classes.visiblePw}`}\n                    onClick={() => setVisiblePw(false)}\n                  />\n                ) : (\n                  <VisibilityOffIcon\n                    className={classes.icon}\n                    onClick={() => setVisiblePw(true)}\n                  />\n                )\n              }\n            />\n            {errors.password && (\n              <p className=\"text-error\">{errors.password?.message}</p>\n            )}\n          </div>\n\n          <div className=\"flex-col\">\n            <InputCustom\n              label=\"Xác nhận mật khẩu\"\n              size=\"small\"\n              placeholder=\"Nhập lại mật khẩu\"\n              error={Boolean(errors.confirmPassword)}\n              inputProps={{\n                name: \"confirmPassword\",\n                type: visibleConfirmPw ? \"text\" : \"password\",\n                ...register(\"confirmPassword\"),\n              }}\n              onChange={handleChange}\n              endAdornment={\n                visibleConfirmPw ? (\n                  <VisibilityIcon\n                    className={`${classes.icon} ${classes.visibleConfirmPw}`}\n                    onClick={() => setVisibleConfirmPw(false)}\n                  />\n                ) : (\n                  <VisibilityOffIcon\n                    className={classes.icon}\n                    onClick={() => setVisibleConfirmPw(true)}\n                  />\n                )\n              }\n            />\n            {errors.confirmPassword && (\n              <p className=\"text-error\">{errors.confirmPassword?.message}</p>\n            )}\n          </div>\n\n          <Button\n            className=\"_btn _btn-primary\"\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            disabled={loading}\n            endIcon={loading && <LoopIcon className=\"ani-spin\" />}\n          >\n            Đăng ký\n          </Button>\n\n          <div className=\"or-option w-100 t-center\">HOẶC</div>\n        </form>\n\n        <div className=\"has-account\">\n          Bạn đã có tài khoản?&nbsp;\n          <Link to={ROUTES.LOGIN} className=\"account-link\">\n            Đăng nhập\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterPage;\n"],"sourceRoot":""}