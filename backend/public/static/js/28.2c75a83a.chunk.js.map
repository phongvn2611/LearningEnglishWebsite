{"version":3,"sources":["assets/audios/correct.mp3","helper/speakerHelper.js","assets/audios/incorrect.mp3","hooks/useSpeaker.js","components/UI/Speaker.js","apis/ipaApi.js","components/IPA/style.js","components/IPA/RelativeIPA.js","redux/actions/ipaAction.js","components/IPA/DetailIPA.js"],"names":["onPlayAudio","audioSrc","Audio","play","onTextToSpeech","text","voice","speed","volume","speech","SpeechSynthesisUtterance","window","speechSynthesis","cancel","lang","rate","speak","playSoundAnswer","word","isCorrect","speakDelay","vol","audio","playbackRate","src","correctAudio","incorrectAudio","setTimeout","globalVoices","useSpeaker","useState","voices","setVoices","useSelector","state","voiceReducer","voiceURI","find","i","useEffect","length","intervalId","setInterval","voiceList","getVoices","filter","indexOf","clearInterval","Speaker","props","className","type","isWrap","handleClick","onClick","children","defaultProps","URL","ipaApi","getIPA","id","axios","get","getIPARelative","phonetic","params","getIPAByType","postIPA","formData","token","post","headers","Authorization","makeStyles","groupCollapse","boxShadow","backgroundColor","borderRadius","border","margin","arrowIcon","color","gcTitle","fontWeight","fontSize","gcDetails","display","relative","gcDesc","marginLeft","flexboxcontainer","flexDirection","flexFlow","example","textDecoration","picture","width","height","mouthShapeImg","root","padding","borderBottom","cursor","transition","mobilelist","floatleft","float","title","tldetail","textlimit","overflow","textOverflow","whiteSpace","IPARelative","classes","useStyle","ipas","ipaReducer","dispatch","useDispatch","key","a","response","status","IPA_CONSTANT","GET_IPA_RELATIVE","payload","data","SET_IPA_ERROR","message","imgList","Image","imgSrc","cloudinaryImgOptimize","DEFAULTS","IMAGE_SRC","Accordion","AccordionSummary","expandIcon","AccordionDetails","map","item","_id","location","href","Title","IPAGroupCollapse","useParams","ipa","GET_IPA","history","useHistory","Container","Typography","variant","align","Video","alt","Description","Grid","container","spacing","xs","lg","Phonetic","Examples","exKey","Word","RelativeIPA","Type","Button","push","phoneticList","isNoVoice"],"mappings":"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","file":"static/js/28.2c75a83a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/correct.369c0cd9.mp3\";","import correctAudio from 'assets/audios/correct.mp3';\r\nimport incorrectAudio from 'assets/audios/incorrect.mp3';\r\n// play an audio\r\nexport const onPlayAudio = (audioSrc) => {\r\n  const audio = new Audio(audioSrc);\r\n  audio.play();\r\n};\r\n\r\n// speak a text\r\nexport const onTextToSpeech = (text = '', voice, speed = 1, volume = 1) => {\r\n  let speech = new SpeechSynthesisUtterance();\r\n  window.speechSynthesis.cancel();\r\n\r\n  speech.lang = 'en';\r\n  speech.text = text;\r\n  speech.volume = volume;\r\n  speech.voice = voice;\r\n  speech.rate = speed;\r\n\r\n  window.speechSynthesis.speak(speech);\r\n};\r\n\r\n// play sound effect and read a word\r\nexport const playSoundAnswer = (\r\n  word = '',\r\n  isCorrect = true,\r\n  voice,\r\n  volume = 1,\r\n  speed = 1,\r\n  speakDelay = 1000,\r\n) => {\r\n  const vol = volume >= 0 && volume <= 1 ? volume : 1;\r\n  const rate = speed >= 0 && speed <= 10 ? speed : 1;\r\n\r\n  let audio = new Audio();\r\n  audio.volume = vol;\r\n  audio.playbackRate = rate;\r\n  audio.src = isCorrect ? correctAudio : incorrectAudio;\r\n  audio.play();\r\n\r\n  setTimeout(() => {\r\n    onTextToSpeech(word, voice, rate, vol);\r\n  }, speakDelay);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/incorrect.fdd769b0.mp3\";","import { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nlet globalVoices = [];\r\n\r\n// get voice in redux\r\nfunction useSpeaker() {\r\n  const [voices, setVoices] = useState(globalVoices);\r\n  const { speed, voiceURI, volume } = useSelector((state) => state.voiceReducer);\r\n  const voice = voices.find((i) => i.voiceURI === voiceURI);\r\n\r\n  useEffect(() => {\r\n    if (globalVoices.length > 0) return;\r\n\r\n    const intervalId = setInterval(() => {\r\n      const voiceList = window.speechSynthesis.getVoices();\r\n      if (voiceList.length > 0) {\r\n        globalVoices = voiceList.filter((i) => i.lang.indexOf('en') !== -1);\r\n        setVoices(voiceList.filter((i) => i.lang.indexOf('en') !== -1));\r\n        clearInterval(intervalId);\r\n      }\r\n    }, 50);\r\n\r\n    return () => {\r\n      intervalId && clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return { speed, volume, voice };\r\n}\r\n\r\nexport default useSpeaker;\r\n","import SpeakerIcon from '@material-ui/icons/Speaker';\r\nimport { onPlayAudio, onTextToSpeech } from 'helper/speakerHelper';\r\nimport useSpeaker from 'hooks/useSpeaker';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction Speaker(props) {\r\n  const { className, type, text, audioSrc, isWrap } = props;\r\n\r\n  const { voice, speed, volume } = useSpeaker();\r\n\r\n  const handleClick = () => {\r\n    if (type) {\r\n      onTextToSpeech(text, voice, speed, volume);\r\n    } else {\r\n      onPlayAudio(audioSrc);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isWrap ? (\r\n        <div onClick={handleClick}>{props.children}</div>\r\n      ) : (\r\n        <SpeakerIcon\r\n          className={`english-speaker ${className}`}\r\n          onClick={handleClick}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nSpeaker.propTypes = {\r\n  audioSrc: PropTypes.any,\r\n  className: PropTypes.string,\r\n  text: PropTypes.string,\r\n  type: PropTypes.bool, // type = false: play audio, true: play text\r\n  isWrap: PropTypes.bool,\r\n  children: PropTypes.any,\r\n};\r\n\r\nSpeaker.defaultProps = {\r\n  audioSrc: '',\r\n  className: '',\r\n  text: '',\r\n  type: true,\r\n  isWrap: false,\r\n};\r\n\r\nexport default Speaker;\r\n","import axios from \"axios\";\r\nconst URL = `/api/ipa`;\r\n\r\nconst ipaApi = {\r\n  getIPA: (id) => {\r\n    return axios.get(`${URL}/get-ipa-by-id/${id}`)\r\n  },\r\n\r\n  getIPARelative: (type, phonetic) => {\r\n    return axios.get(`${URL}/get-ipa-relative`, { params: { type, phonetic } })\r\n  },\r\n\r\n  getIPAByType: (type) => {\r\n    return axios.get(`${URL}/get-ipa-by-type/${type}`)\r\n  },\r\n\r\n\r\n  postIPA: (formData, token) => {\r\n    return axios.post(`${URL}/post-ipa`, formData, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n}\r\n\r\nexport default ipaApi;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  groupCollapse: {\r\n    boxShadow: 'var(--box-shadow-2)',\r\n    backgroundColor: 'var(--bg-color-accent)',\r\n    borderRadius: 'var(--border-radius)',\r\n    border: 'none',\r\n    margin: '2.4rem 0',\r\n  },\r\n\r\n  arrowIcon: {\r\n    color: 'var(--grey)',\r\n  },\r\n\r\n  gcTitle: {\r\n    color: 'var(--secondary-color)',\r\n    fontWeight: 500,\r\n    fontSize: '2rem',\r\n  },\r\n\r\n  gcDetails: {\r\n    display: 'flex-center',\r\n  },\r\n\r\n  word: {\r\n    display: 'inline-block',\r\n    fontSize: '2.4rem',\r\n    color: 'var(--accent-color)',\r\n    margin: '0.8rem 1rem 0.8rem 0',\r\n  },\r\n  relative: {\r\n    display: 'inline-block',\r\n    fontSize: '2.2rem',\r\n    fontWeight: 500,\r\n    color: 'red',\r\n    margin: '0.8rem 0rem 0rem 0',\r\n    \r\n  },\r\n\r\n  gcDesc: {\r\n    fontSize: '1.7rem',\r\n    color: 'var(--text-color)',\r\n    marginLeft: '1.2rem0'\r\n  },\r\n\r\n  flexboxcontainer: {\r\n    flexDirection: \"row\",\r\n    flexFlow: 'auto',\r\n  },\r\n\r\n  example: {\r\n    '& b': {\r\n      fontSize: '1.6rem',\r\n      textDecoration: 'underline',\r\n    },\r\n    color: 'var(--text-color)',\r\n    fontSize: '1.6rem',\r\n  },\r\n  picture: {\r\n    width: '50rem',\r\n    height: '30rem',\r\n    marginLeft: '15rem',\r\n  },\r\n\r\n  mouthShapeImg: {\r\n    width: '12rem',\r\n    height: '12rem',\r\n    marginLeft: '1rem',\r\n  },\r\n  root: {\r\n    padding: '1.2rem 0',\r\n    borderBottom: 'solid 1px var(--border-color)',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.35s',\r\n\r\n    '&:hover, &:active': {\r\n      borderBottom: 'solid 1px var(--accent-color)',\r\n    },\r\n  },\r\n  mobilelist : {\r\n    height: \"115px\",\r\n \r\n  },\r\nfloatleft: {\r\n  float: \"left\",\r\n  margin: \"0 10px 10px 0px\",\r\n  padding: \"2px\",\r\n},\r\ntitle: {\r\n  display: 'inline-block',\r\n  fontSize: '2.0rem',\r\n  fontWeight: 400,\r\n  color: 'blue',\r\n  margin: '0.8rem 0rem 0rem 0',\r\n  '&:hover, &:focus': {\r\n    color: \"red\",\r\n    fontSize:'2.3rem',\r\n  },\r\n},\r\ntldetail: {\r\n  fontSize: '1.5rem',\r\n  fontWeight:400,\r\n  color: 'black', \r\n},\r\ntextlimit: {\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    whiteSpace: \"nowrap\",\r\n  width: \"500px\",\r\n},\r\n\r\n}));\r\n","import Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React, { useEffect } from \"react\";\r\nimport useStyle from \"./style\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { cloudinaryImgOptimize } from \"helper\";\r\nimport { DEFAULTS } from \"../../constants/index\";\r\nimport { getIPARelative } from \"../../redux/actions/ipaAction\";\r\n\r\nfunction IPARelative(props) {\r\n  const classes = useStyle();\r\n  const ipas = useSelector((state) => state.ipaReducer.ipas);\r\n\r\n  const { type, phonetic } = props;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(getIPARelative(type, phonetic)), [dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    window.location.href = `${id}`;\r\n  };\r\n\r\n  let imgList = [];\r\n  if (ipas) {\r\n    for (let i = 0; i < ipas.length; i++) {\r\n      if (ipas[i].Image) {\r\n        let imgSrc = cloudinaryImgOptimize(\r\n          ipas[i].Image ? ipas[i].Image : DEFAULTS.IMAGE_SRC,\r\n          200,\r\n          200,\r\n          true,\r\n          true\r\n        );\r\n        imgList[i] = imgSrc;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon className={classes.arrowIcon} />}\r\n      >\r\n        <b className={classes.relative}>Relative Pronunciation</b>\r\n      </AccordionSummary>\r\n\r\n      <AccordionDetails>\r\n        <div className=\"container\">\r\n          {ipas &&\r\n            ipas.map((item, key) => (\r\n              <div className={classes.mobilelist}>\r\n                <div>\r\n                  <div className={classes.floatleft}>\r\n                    <a>\r\n                      <img\r\n                        height=\"80px\"\r\n                        width=\"80px\"\r\n                        src={imgList[key]}\r\n                        onClick={() => handleClick(item._id)}\r\n                      />\r\n                    </a>\r\n                  </div>\r\n                  <a\r\n                    className={classes.title}\r\n                    href={`/ipa/details/${item._id}`}\r\n                  >\r\n                    <u> {item.Title}</u>\r\n                  </a>\r\n                  <br></br>\r\n\r\n                  <div className={classes.textlimit}>\r\n                    <span className={classes.tldetail}></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default IPARelative;\r\n","import IPA_CONSTANT from \"../constants/ipaConstant\";\r\nimport ipaApi from \"./../../apis/ipaApi\";\r\n\r\n\r\nexport const getIPA = (id) => {\r\n    return async (dispatch) => {\r\n        try { \r\n          const response = await ipaApi.getIPA(id);\r\n          if(response.status===200){\r\n            dispatch({\r\n              type: IPA_CONSTANT.GET_IPA,\r\n              payload: response.data,\r\n            })\r\n          }\r\n          else\r\n          {\r\n            dispatch({\r\n              type: IPA_CONSTANT.SET_IPA_ERROR,\r\n              payload: response.data.message,\r\n            })\r\n          }\r\n        } catch (error) {\r\n          dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\r\n            payload: error.response.message\r\n          })\r\n      }\r\n    }\r\n};\r\n\r\nexport const getIPARelative = (type, key) => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await ipaApi.getIPARelative(type, key);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: IPA_CONSTANT.GET_IPA_RELATIVE,\r\n            payload: response.data,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: IPA_CONSTANT.SET_IPA_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\r\n          payload: error.response.message\r\n        })\r\n    }\r\n  }\r\n};\r\n\r\nexport const getIPAByType = (type) => {\r\n  return async (dispatch) => {\r\n      try { \r\n       \r\n        const response = await ipaApi.getIPAByType(type);\r\n        console.log(response.data)\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: IPA_CONSTANT.GET_IPA_BY_TYPE,\r\n            payload: response.data.ipas,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: IPA_CONSTANT.SET_IPA_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\r\n          payload: error.response.message\r\n        })\r\n    }\r\n  }\r\n};\r\n\r\nexport const postIPA = (formData) => {\r\n    return async (dispatch, getState) => {\r\n        try { \r\n          const {\r\n            authReducer: { user },\r\n          } = getState();\r\n\r\n          const response = await ipaApi.postIPA(formData, user.access_token);\r\n          if(response.status===200){\r\n            dispatch({\r\n              type: IPA_CONSTANT.CREATE_IPA,\r\n              payload: response.data.ipa,\r\n            })\r\n          }\r\n          else\r\n          {\r\n            dispatch({\r\n              type: IPA_CONSTANT.SET_IPA_ERROR,\r\n              payload: response.data.message,\r\n            })\r\n          }\r\n        } catch (error) {\r\n          dispatch({ type: IPA_CONSTANT.SET_IPA_ERROR,\r\n             payload: error.response.message\r\n          })\r\n      }\r\n    }\r\n};\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { cloudinaryImgOptimize } from \"helper\";\r\nimport { DEFAULTS } from \"../../constants/index\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Speaker from \"components/UI/Speaker\";\r\nimport PropTypes from \"prop-types\";\r\nimport useStyle from \"./style\";\r\nimport { getIPA } from \"../../redux/actions/ipaAction\";\r\nimport RelativeIPA from \"./RelativeIPA\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction IPAGroupCollapse() {\r\n  const classes = useStyle();\r\n  const id = useParams().id;\r\n  const ipa = useSelector((state) => state.ipaReducer.ipa);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(getIPA(id)), [dispatch]);\r\n\r\n  const history = useHistory();\r\n\r\n  function handleClickGoBack() {\r\n    history.push(`/ipa`);\r\n  }\r\n\r\n  let imgSrc = null;\r\n  if (ipa) {\r\n    imgSrc = cloudinaryImgOptimize(\r\n      ipa.Image ? ipa.Image : DEFAULTS.IMAGE_SRC,\r\n      200,\r\n      200,\r\n      true,\r\n      true\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {ipa && (\r\n        <>\r\n          <>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Pronunciation\r\n            </Typography>\r\n            <Typography variant=\"h6\">{ipa.Title}</Typography>\r\n          </>\r\n          {ipa.Video ? (\r\n            <p align=\"center\">\r\n              <iframe src={ipa.Video} width=\"500\" height=\"300\"></iframe>\r\n            </p>\r\n          ) : (\r\n            <img\r\n              className={classes.picture}\r\n              src={imgSrc}\r\n              alt=\"\"\r\n              align=\"center\"\r\n            />\r\n          )}\r\n          <Typography>{ipa.Description}</Typography>\r\n\r\n          <AccordionDetails>\r\n            <Grid container spacing={3}>\r\n              <Grid item className=\"flex-center-between\" xs={12} lg={6}>\r\n                <div>\r\n                  <div className=\"flex-center--ver\">\r\n                    <b className={classes.word}>\r\n                      {\" \"}\r\n                      Phonetic: / {ipa.Phonetic} /\r\n                    </b>\r\n                    {ipa.Audio && <Speaker type={false} audioSrc={ipa.Audio} />}\r\n                  </div>\r\n\r\n                  <div className={classes.example}>\r\n                    <b>Example:</b>\r\n                    {ipa.Examples &&\r\n                      ipa.Examples.map((example, exKey) => (\r\n                        <div className=\"flex-center--ver my-4\" key={exKey}>\r\n                          <span className=\"mr-4\">\r\n                            {example.Word}\r\n                            <span className=\"phonetic px-3\">\r\n                              {example.Phonetic}\r\n                            </span>\r\n                          </span>\r\n                          <Speaker type={true} text={example.Word} />\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionDetails>\r\n\r\n          <RelativeIPA type={ipa.Type} phonetic={ipa.Phonetic} />\r\n\r\n          <Typography></Typography>\r\n          <Button color=\"primary\" onClick={() => handleClickGoBack()}>\r\n            {\" \"}\r\n            GO BACK\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nIPAGroupCollapse.propTypes = {\r\n  phoneticList: PropTypes.array,\r\n  title: PropTypes.string,\r\n  isNoVoice: PropTypes.bool,\r\n};\r\n\r\nIPAGroupCollapse.defaultProps = {\r\n  phoneticList: [],\r\n  title: \"\",\r\n  isNoVoice: false,\r\n};\r\n\r\nexport default IPAGroupCollapse;\r\n"],"sourceRoot":""}