{"version":3,"sources":["../node_modules/@material-ui/icons/Add.js","apis/grammarApi.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Edit.js","components/UI/RichTextEditor.js","assets/images/grammarLevels/Level1.jpg","constants/grammarLevels.js","assets/images/grammarLevels/Level2.jpg","assets/images/grammarLevels/Level3.jpg","assets/images/grammarLevels/Level4.jpg","redux/actions/grammarAction.js","components/UI/GrammarDetailModal/style.js","components/UI/GrammarDetailModal/index.js","components/GrammarAdmin/style.js","components/GrammarAdmin/GrammarItem/style.js","components/GrammarAdmin/GrammarItem/index.js","components/UI/GrammarLevel/style.js","components/UI/GrammarLevel/index.js","components/GrammarAdmin/WordPackSetting.js","components/GrammarAdmin/WordSkeleton.js","components/GrammarAdmin/index.js","components/GrammarAdmin/data.js","pages/GrammarAdmin.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","URL","grammarApi","getGrammar","id","axios","get","getGrammarById","getGrammarByLevel","level","token","headers","Authorization","getGrammarLevels","getAllGrammar","postGrammar","formData","post","header","putGrammar","put","params","deleteGrammar","patch","searchGrammar","title","config","buttons","RichTextEditor","initialValue","getValue","editor","useRef","ref","tabIndex","onChange","newContent","GRAMMAR_LEVEL","label","image","dispatch","a","response","status","type","GRAMMAR_CONSTANT","GET_GRAMMAR","payload","data","SET_GRAMMAR_ERROR","message","DELETE_GRAMMAR","makeStyles","theme","root","backgroundColor","paper","maxWidth","width","padding","breakpoints","up","color","textTransform","fontSize","wordSpacing","fontWeight","content","display","gridTemplateColumns","gap","lineHeight","letterSpacing","closeIcon","transition","transform","textDecoration","picture","height","word","mean","phonetic","topics","margin","GrammarDetailModal","props","_id","Image","Title","Level","Content","open","onClose","loading","classes","useStyle","Popover","anchorReference","className","wordTitle","onClick","Skeleton","style","variant","animation","src","cloudinaryImgOptimize","alt","Boolean","defaultProps","dictionaryRoot","borderBottom","cursor","GrammarItem","imgSrc","DEFAULTS","IMAGE_SRC","history","useHistory","useState","modal","setModal","useDispatch","push","window","confirm","setMessage","location","reload","WordDetailModal","onShowDetail","dialogMUIRoot","formId","addAllOption","optionList","GrammarLevel","onChoose","onCancel","okBtnText","cancelBtnText","okBtnProps","cancelBtnProps","Dialog","dialogPaper","fullWidth","disableBackdropClick","DialogTitle","DialogContent","dividers","breakLine","onSubmit","e","preventDefault","target","Grid","container","spacing","item","xs","md","SelectCustom","index","options","inputProps","name","DialogActions","Button","autoFocus","disableFocusRipple","component","form","GrammarLevelSetting","classNameIcon","openWordPack","setOpenWordPack","v","WordSkeleton","Array","fill","map","_","GrammarAdmin","list","onLoadData","more","isFirstLoad","onSettingWordPack","onSearchWord","ROUTES","CREATE_GRAMMAR","WordPackSetting","contentWrap","AutoSearchInput","disabled","onSearch","listWrap","skeleton","length","listItem","InfiniteScroll","onTouchAnchor","threshold","ListeningAdminData","page","setPage","packInfo","setPackInfo","setLoading","setList","setMore","setIsFirstLoad","totalPage","preSearchList","current","apiRes","console","log","useEffect","isSub","newList","grammars","filter","isLocked","info","isEqual","equalArray","GrammarAdminPage","useTitle"],"mappings":"uGAEA,IAAIA,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,wCACD,OAEJN,EAAQE,QAAUE,G,6DClBZG,EAAG,eAEHC,EAAa,CACjBC,WAAY,SAACC,GACX,OAAOC,IAAMC,IAAN,UAAaL,EAAb,wBAAgCG,KAGzCG,eAAgB,SAACH,GACf,OAAOC,IAAMC,IAAN,UAAaL,EAAb,8BAAsCG,KAG/CI,kBAAmB,SAACC,EAAOC,GACzB,OAAOL,IAAMC,IAAN,UAAaL,EAAb,iCAAyCQ,GAAS,CACvDE,QAAS,CAACC,cAAeF,MAI7BG,iBAAkB,SAACH,GACjB,OAAOL,IAAMC,IAAN,UAAaL,EAAb,uBAAuC,CAC5CU,QAAS,CAACC,cAAeF,MAI7BI,cAAe,SAACJ,GACd,OAAOL,IAAMC,IAAN,UAAaL,EAAb,oBAAoC,CACzCU,QAAS,CAACC,cAAeF,MAI7BK,YAAa,SAACC,GACZ,OAAOX,IAAMY,KAAN,UAAchB,EAAd,gCAAsCe,GAC7C,CACEE,OAAQ,CAAE,eAAgB,0BAI9BC,WAAY,SAACf,EAAIY,GACf,OAAOX,IAAMe,IAAN,UAAanB,EAAb,wBAAgCG,GAAhC,eAA2CY,GAClD,CACEK,OAAQ,CAAEjB,MACVc,OAAQ,CAAE,eAAgB,0BAI9BI,cAAe,SAAClB,GACd,OAAOC,IAAMkB,MAAN,UAAetB,EAAf,2BAAqCG,KAG9CoB,cAAe,SAACC,GACd,OAAOpB,IAAMC,IAAN,UAAaL,EAAb,mBAAmC,CAACoB,OAAQ,CAACI,aAIzCvB,O,iCCpDf,IAAIb,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,kFACD,UAEJN,EAAQE,QAAUE,G,iCCjBlB,IAAIT,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,wJACD,QAEJN,EAAQE,QAAUE,G,iCCnBlB,oCAEM4B,EAAU,CACdC,QAAS,CACP,SAAU,IACV,OACA,gBACA,YACA,SAAU,IACV,KACA,KAAM,IACN,UAAW,SAAW,IACtB,OACA,WACA,QACA,YAAa,IACb,QACA,QACA,QACA,OAAQ,IACR,QAAS,OAAQ,OAAQ,IACzB,KACA,SACA,aAAc,IACd,SACA,WACA,QACA,UAkBWC,IAfQ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,SAChCC,EAASC,iBAAO,MAEtB,OACE,cAAC,IAAD,CACEC,IAAKF,EACLpC,MAAOkC,EACPH,OAAQA,EACRQ,SAAU,EAEVC,SAAU,SAACC,GAAD,OAAgBN,EAASM,Q,mECxC1B,ICKFC,EAAgB,CACzB,CACE1C,MAAO,IACP2C,MAAO,UACPC,MDTS,IAA0B,oCCWrC,CACE5C,MAAO,IACP2C,MAAO,UACPC,MCdS,IAA0B,oCDgBrC,CACE5C,MAAO,IACP2C,MAAO,UACPC,MEnBS,IAA0B,oCFqBrC,CACE5C,MAAO,IACP2C,MAAO,UACPC,MGxBS,IAA0B,sC,mJCI5BpC,EAAa,SAACC,GACvB,8CAAO,WAAOoC,GAAP,eAAAC,EAAA,+EAEsBvC,IAAWC,WAAWC,GAF5C,OAGoB,OADfsC,EAFL,QAGWC,OACVH,EAAS,CACPI,KAAMC,IAAiBC,YACvBC,QAASL,EAASM,OAKpBR,EAAS,CACPI,KAAMC,IAAiBI,kBACvBF,QAASL,EAASM,KAAKE,UAb1B,gDAiBDV,EAAS,CACPI,KAAMC,IAAiBI,kBACvBF,QAAS,KAAML,SAASQ,UAnBzB,yDAAP,uDAoKS5B,EAAgB,SAAClB,GAC5B,8CAAO,WAAOoC,GAAP,eAAAC,EAAA,+EAEsBvC,IAAWoB,cAAclB,GAF/C,OAGoB,OADfsC,EAFL,QAGWC,OACVH,EAAS,CACPI,KAAMC,IAAiBM,eACvBJ,QAAS3C,IAKXoC,EAAS,CACPI,KAAMC,IAAiBI,kBACvBF,QAASL,EAASM,KAAKE,UAb1B,gDAiBDV,EAAS,CACPI,KAAMC,IAAiBI,kBACvBF,QAAS,KAAML,SAASQ,UAnBzB,yDAAP,wD,6PCxKaE,eAAW,SAACC,GAAD,YAAY,CACpCC,KAAM,CACJC,gBAAiB,mBAGnBC,OAAK,GACHC,SAAU,IACVC,MAAO,OACPH,gBAAiB,sBACjBI,QAAS,iBAJN,cAMFN,EAAMO,YAAYC,GAAG,MAAQ,CAC5BJ,SAAU,MAPT,cAUFJ,EAAMO,YAAYC,GAAG,MAAQ,CAC5BJ,SAAU,MAXT,0BAcQ,QAdR,GAiBLhC,MAAO,CACLqC,MAAO,qBACPC,cAAe,aACfC,SAAU,SACVC,YAAa,IACbC,WAAY,KAGdC,QAAS,CACPC,QAAS,OACTC,oBAAqB,MACrBC,IAAK,SAEL,MAAO,CACLN,SAAU,SACVO,WAAY,IACZC,cAAe,QACfV,MAAO,sBAIXW,UAAW,CACTT,SAAU,SACVF,MAAO,qBACPY,WAAY,WAEZ,oBAAqB,CACnBC,UAAW,mBAIfrC,MAAO,CACLwB,MAAO,qBACPc,eAAgB,YAChBZ,SAAU,UAGZa,QAAS,CACPnB,MAAO,SACPoB,OAAQ,UAGVC,KAAM,CACJf,SAAU,OACVF,MAAO,yBACPI,WAAY,QAGdtB,KAAM,CACJsB,WAAY,KAGdc,KAAM,CACJlB,MAAO,qBAGTmB,SAAU,CACRjB,SAAU,SACVF,MAAO,yBAGToB,OAAQ,CACNC,OAAQ,YAER,QAAS,CACPA,OAAQ,e,OCtEd,SAASC,EAAmBC,GAUtBA,EARFC,IADF,IAEEC,EAOEF,EAPFE,MACAC,EAMEH,EANFG,MACAC,EAKEJ,EALFI,MACAC,EAIEL,EAJFK,QACAC,EAGEN,EAHFM,KACAC,EAEEP,EAFFO,QACAC,EACER,EADFQ,QAGIC,EAAUC,IAEhB,OACE,eAACC,EAAA,EAAD,CACEF,QAAS,CACPxC,KAAK,GAAD,OAAKwC,EAAQxC,KAAb,gBACJE,MAAM,GAAD,OAAKsC,EAAQtC,MAAb,eAEPmC,KAAMA,EACNC,QAASA,EACTK,gBAAiB,OAPnB,UAQE,sBAAKC,UAAU,sBAAf,UACE,qBAAIA,UAAWJ,EAAQrE,MAAvB,mCACc,sBAAMyE,UAAWJ,EAAQK,UAAzB,oBAAyCX,EAAzC,UAEd,cAAC,IAAD,CACEU,UAAS,UAAKJ,EAAQrB,UAAb,gBACT2B,QAASR,OAIb,qBAAKM,UAAU,kBAEdL,EACC,cAACQ,EAAA,EAAD,CACEC,MAAO,CAAE5C,MAAO,OAAQoB,OAAQ,QAChCyB,QAAQ,OACRC,UAAU,SAGZ,qBAAKN,UAAWJ,EAAQ3B,QAAxB,SACE,sBAAK+B,UAAU,wBAAf,UACGX,GAAmB,KAAVA,GACR,qBACEkB,IAAKC,YAAsBnB,EAAO,GAAI,IAAI,GAC1CoB,IAAI,QACJT,UAAS,UAAKJ,EAAQjB,QAAb,WAGb,gCACE,oBAAGqB,UAAWJ,EAAQf,KAAtB,UACGS,EADH,OAGE,uBAAMU,UAAWJ,EAAQd,KAAzB,cAAiCU,QAElCkB,QAAQnB,IACP,oBAAGS,UAAS,UAAKJ,EAAQb,SAAb,SAAZ,oBAAkDQ,gBA6BlEL,EAAmByB,aAAe,CAChChB,SAAS,EACTH,QAAS,GACTE,QAAS,aACTD,MAAM,EACNF,MAAO,GACPF,MAAO,GACPC,MAAO,GACPF,IAAK,IAGQF,Q,oCClHAhC,eAAW,SAACC,GAAD,sBACrByD,YAAezD,OCFLD,eAAW,iBAAO,CAC/BE,KAAM,CACJK,QAAS,WACToD,aAAc,gCACdC,OAAQ,UACRtC,WAAY,YAEZ,oBAAqB,CACnBqC,aAAc,kCAIlBlC,QAAS,CACPnB,MAAO,OACPoB,OAAQ,QAGVC,KAAM,CACJf,SAAU,SACVE,WAAY,IACZJ,MAAO,wBAGTlB,KAAM,CACJkB,MAAO,sBAGTmB,SAAU,CACRjB,SAAU,SACVmB,OAAQ,YAGVH,KAAM,CACJhB,SAAU,SACVF,MAAO,oBACPL,SAAU,MACVc,WAAY,S,8ECxBhB,SAAS0C,EAAT,GAA6D,IAAtC3B,EAAqC,EAArCA,IAAKE,EAAgC,EAAhCA,MAAOD,EAAyB,EAAzBA,MAAOE,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACzCI,EAAUC,IACVmB,EAASR,YACbnB,GAAgB4B,IAASC,UACzB,GACA,IACA,GACA,GAGIC,EAAUC,cAOhB,MAA0BC,mBAAS,CAAE1B,SAAS,EAAOF,MAAM,IAA3D,mBAAO6B,EAAP,KAAcC,EAAd,KACMjF,EAAWkF,cAUjB,OACE,qCACE,sBAAKxB,UAAS,UAAKJ,EAAQxC,KAAb,wBAAd,UACE,sBACE4C,UAAU,yBACVE,QAAS,kBAtBIhG,EAsBckF,OArBjC+B,EAAQM,KAAR,iCAAuCvH,IADzC,IAAqBA,GAoBf,UAIE,qBAAK8F,UAAWJ,EAAQjB,QAAS4B,IAAKS,EAAQP,IAAI,UAClD,sBAAKT,UAAU,mBAAf,UACE,oBAAIA,UAAWJ,EAAQf,KAAvB,SACGS,IAID,oBAAGU,UAAS,UAAKJ,EAAQb,SAAb,aAAZ,qBAAuDQ,EAAvD,OAEF,mBAAGS,UAAWJ,EAAQd,KAAtB,SAA6BU,UAGjC,sBAAKQ,UAAU,mBAAf,UACA,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CAAUA,UAAU,uBACnBE,QAAS,kBApCOhG,EAoCekF,OAnCtC+B,EAAQM,KAAR,8BAAoCvH,IADtC,IAAyBA,OAuCnB,cAAC,IAAD,CAAY8F,UAAU,uBACrBE,QAAS,kBAlCOhG,EAkCakF,OAjC9BsC,OAAOC,QAAQ,4EAChBrF,EAASlB,YAAclB,IACvBoC,EAASsF,YAAW,sBAAuB,YAC7CF,OAAOG,SAASC,WAJG,IAAC5H,WAuClBoH,EAAM7B,MACL,cAACsC,EAAA,EAAD,2BACMT,GADN,IAEE5B,QAAS,kBAAM6B,EAAS,CAAE9B,MAAM,EAAOE,SAAS,WAgB1DoB,EAAYJ,aAAe,CACzBqB,aAAc,cAGDjB,Q,yFC7FA7D,G,OAAAA,aAAW,SAACC,GAAD,sBACrB8E,YAAc9E,QCUb+E,GAAS,uBAEf,SAASC,KAA+B,IAAlBC,EAAiB,uDAAJ,GACjC,MAAM,CAAE,CAAE3I,MAAO,MAAO2C,MAAO,QAA/B,mBAA2CgG,IAG7C,SAASC,GAAalD,GACpB,IACEmD,EAQEnD,EARFmD,SACAC,EAOEpD,EAPFoD,SACA9C,EAMEN,EANFM,KACAlE,EAKE4D,EALF5D,MACAiH,EAIErD,EAJFqD,UACAC,EAGEtD,EAHFsD,cACAC,EAEEvD,EAFFuD,WACAC,EACExD,EADFwD,eAGI/C,EAAUC,IAchB,OACE,eAAC+C,EAAA,EAAD,CACEhD,QAAS,CAAEtC,MAAOsC,EAAQiD,aAC1BtF,SAAS,KACTuF,WAAS,EACTC,sBAAoB,EACpBtD,KAAMA,EALR,UAME,cAACuD,EAAA,EAAD,CAAapD,QAAS,CAAExC,KAAMwC,EAAQrE,OAAtC,SAAgDA,IAEhD,cAAC0H,EAAA,EAAD,CAAeC,UAAQ,EAACtD,QAAS,CAAEsD,SAAUtD,EAAQuD,WAArD,SACE,sBAAMjJ,GAAIgI,GAAQkB,SArBH,SAACC,GAAO,IAAD,EAC1BA,EAAEC,iBACF,IACM/I,GAAQ,UADK8I,EAAXE,OACahJ,aAAP,eAAcd,QAAS,KAGrC6I,EAAS,CACR/H,WAcG,SACE,cAACiJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CACE1H,MAAM,QACN4D,UAAU,QACV+D,MAAO,EACPC,QAAS7B,GAAahG,KACtB8H,WAAY,CAAEC,KAAM,mBAS9B,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,yBACElE,QAASqC,EACTvC,UAAU,kBACVK,QAAQ,YACJsC,GAJN,aAKGF,KAEH,cAAC2B,EAAA,EAAD,yBACEC,WAAS,EACTC,oBAAkB,EAClBC,UAAU,SACV7H,KAAK,SACL8H,KAAMtC,GACNlC,UAAU,oBACVK,QAAQ,aACJqC,GARN,aASGF,WAmBXH,GAAa1B,aAAe,CAC1B2B,SAAU,aACV7C,MAAM,EAENlE,MAAO,2BACPiH,UAAW,KACXC,cAAe,eACfC,WAAY,GACZC,eAAgB,IAGHN,UCnHf,SAASoC,GAAT,GAA2D,IAA5BC,EAA2B,EAA3BA,cAAepC,EAAY,EAAZA,SAC5C,EAAwCjB,oBAAS,GAAjD,mBAAOsD,EAAP,KAAqBC,EAArB,KAOA,OACE,qCACE,cAAC,IAAD,CACE5E,UAAW0E,EACXxE,QAAS,kBAAM0E,GAAgB,MAIhCD,GACC,cAAC,GAAD,CACElF,KAAMkF,EACNpC,SAAU,kBAAMqC,GAAgB,IAChCtC,SAjBS,SAACuC,GAChBvC,EAASuC,GACTD,GAAgB,SA2BpBH,GAAoB9D,aAAe,CACjC2B,SAAU,cAGGmC,UCvBAK,OAdf,YAAsC,IAAd9E,EAAa,EAAbA,UACtB,OACE,qBAAKA,UAAWA,EAAhB,SACG,IAAI+E,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGnB,GAAJ,OACzB,cAAC5D,EAAA,EAAD,CAAsBG,UAAU,OAAOD,QAAQ,QAAhC0D,S,4BCMvB,SAASoB,GAAT,GAQI,IAPFC,EAOC,EAPDA,KACAzF,EAMC,EANDA,QACA0F,EAKC,EALDA,WACAC,EAIC,EAJDA,KACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,kBACAC,EACC,EADDA,aAEM7F,EAAUC,IACVsB,EAAUC,cAEhB,OACE,sBAAKpB,UAAS,UAAKJ,EAAQxC,KAAb,sBAAd,UAEE,sBAAK4C,UAAU,sBAAf,UACE,oBAAIA,UAAU,gBAAd,8CACA,gCACE,cAAC,KAAD,CAASA,UAAU,4BAA4BE,QAAS,kBAAMiB,EAAQM,KAAKiE,IAAOC,mBAElF,cAACC,GAAD,CACItD,SAAUkD,EACVd,cAAc,+BAItB,qBAAK1E,UAAU,kBAGf,sBAAKA,UAAWJ,EAAQiG,YAAxB,UACE,cAACC,EAAA,EAAD,CAAiBC,SAAUpG,EAASqG,SAAUP,IAE9C,qBAAKzF,UAAS,UAAKJ,EAAQqG,SAAb,UAAd,SACE,oBAAI/L,GAAG,eAAe8F,UAAS,UAAKJ,EAAQwF,KAAb,mBAA/B,SACE,mCACGG,EACC,cAAC,GAAD,CAAcvF,UAAWJ,EAAQsG,WAEjC,mCACGd,GAAQA,EAAKe,OAAS,EACrB,qCAEGf,EAAKH,KAAI,SAACtB,EAAMI,GAAP,OACR,oBAAI/D,UAAWJ,EAAQwG,SAAvB,SACE,cAAC,EAAD,eAAczC,KADsBI,OAMtCpE,GAAW2F,GACX,cAACe,EAAA,EAAD,CACEC,cAAejB,EACfkB,UAAW,EAFb,SAGE,qBAAKvG,UAAU,iBAAf,SACE,cAAC,IAAD,CAAUA,UAAU,oBAO5B,oBAAIA,UAAU,4CAAd,sCAwBpBmF,GAAaxE,aAAe,CAC1ByE,KAAM,GACNzF,SAAS,EACT2F,MAAM,EACNC,aAAa,EACbF,WAAY,aACZI,aAAc,aACdD,kBAAmB,cAGNL,UCHAqB,OApGf,WACE,MAAwBnF,mBAAS,GAAjC,mBAAOoF,EAAP,KAAaC,EAAb,KACA,EAAgCrF,oBAAS,iBAAO,CAC9C9G,MAAO,UADT,mBAAOoM,EAAP,KAAiBC,EAAjB,KAGA,EAA8BvF,oBAAS,GAAvC,mBAAO1B,EAAP,KAAgBkH,EAAhB,KACA,EAAwBxF,mBAAS,IAAjC,mBAAO+D,EAAP,KAAa0B,EAAb,KACA,EAAwBzF,oBAAS,GAAjC,mBAAOiE,EAAP,KAAayB,EAAb,KACA,EAAsC1F,oBAAS,GAA/C,mBAAOkE,EAAP,KAAoByB,EAApB,KACMC,EAAYnL,iBAAO,GACnBoL,EAAgBpL,iBAAO,IA0BvB2J,EAAY,uCAAG,WAAOlK,GAAP,eAAAgB,EAAA,kEAEH,KAAVhB,EAFa,uBAGfuL,EAAQI,EAAcC,SACtBJ,GAAQ,GAJO,0CAOI/M,IAAWsB,cAAcC,GAP7B,OAOX6L,EAPW,OAQjBC,QAAQC,IAAIF,EAAOtK,MACG,MAAlBsK,EAAO3K,SACTqK,EAAQM,EAAOtK,MACfiK,GAAQ,IAXO,4GAAH,sDAgDlB,OA/BAQ,qBAAU,WACR,IAAIC,GAAQ,EA2BZ,OA1BA,sBAAC,8BAAAjL,EAAA,kEAEG8K,QAAQC,IAAIX,GACZE,GAAW,GACPO,EAAS,KACU,QAAnBT,EAASpM,MALhB,iCAMoBP,IAAWY,gBAN/B,OAMKwM,EANL,gDAQoBpN,IAAWM,kBAAkBqM,EAASpM,OAR1D,QAQK6M,EARL,eAUOA,GAAUI,IACNC,EAAUL,EAAOtK,KAAK4K,SAASC,QAAO,SAAChE,GAC3C,OAAyB,IAAlBA,EAAKiE,YAEdV,EAAcC,QAAUM,EACxBX,EAAQW,IAfb,2EAmBOD,IACFX,GAAW,GACXtB,GAAeyB,GAAe,IArBnC,4EAAD,GA0BO,kBAAOQ,GAAQ,KACrB,CAACf,EAAME,IAGR,qCACE,cAAC,GAAD,CACEvB,KAAMA,EACNzF,QAASA,EACT0F,WA7EW,WACXoB,EAAOQ,EAAUE,QACnBT,EAAQD,EAAO,GAEfM,GAAQ,IA0ENzB,KAAMA,EACNC,YAAaA,EACbC,kBAxEkB,SAACqC,GAEvB,IAAIC,GAAU,EACG,UAAbnB,GAAwBA,EAASpM,QAAUsN,EAAKtN,QAClDuN,GAAU,GAERA,IAASA,EAAUC,YAAWpB,EAASpM,MAAOsN,EAAKtN,QAEvD0M,EAAUE,QAAU,EACpBD,EAAcC,QAAU,GACxBJ,GAAQ,GACRD,EAAQ,IACRF,EAAYiB,GACZnB,EAAQ,IA4DJjB,aAAcA,IAEhB,cAAC,EAAD,QC/FA5F,GAAW3C,aAAW,SAACC,GAAD,sBACvByD,YAAezD,OAGL,SAAS6K,KACtBC,YAAS,iBACOpI,KAChB,OACE,qBAAKG,UAAU,YAAf,SACE,cAAC,GAAD","file":"static/js/23.300c72e4.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import axios from \"axios\";\r\nconst URL = `/api/grammar`;\r\n\r\nconst grammarApi = {\r\n  getGrammar: (id) => {\r\n    return axios.get(`${URL}/get-grammar/${id}`)\r\n  },\r\n\r\n  getGrammarById: (id) => {\r\n    return axios.get(`${URL}/get-grammar-by-id/${id}`)\r\n  },\r\n\r\n  getGrammarByLevel: (level, token) => {\r\n    return axios.get(`${URL}/get-grammar-by-level/${level}`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  getGrammarLevels: (token) => {\r\n    return axios.get(`${URL}/get-grammar-levels`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  getAllGrammar: (token) => {\r\n    return axios.get(`${URL}/get-all-grammar`, {\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  postGrammar: (formData) => {\r\n    return axios.post(`${URL}/post-grammar`, {...formData},\r\n    {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    })\r\n  },\r\n\r\n  putGrammar: (id, formData) => {\r\n    return axios.put(`${URL}/put-grammar/${id}`, { ...formData},\r\n    {\r\n      params: { id },\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n\r\n  deleteGrammar: (id) => {\r\n    return axios.patch(`${URL}/delete-grammar/${id}`)\r\n  },\r\n\r\n  searchGrammar: (title) => {\r\n    return axios.get(`${URL}/search-grammar`, {params: {title}})\r\n  },\r\n}\r\n\r\nexport default grammarApi;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import React, { useRef } from \"react\";\r\nimport JoditEditor from \"jodit-react\";\r\nconst config =  {\r\n  buttons: [\r\n    'source', '|',\r\n    'bold',\r\n    'strikethrough',\r\n    'underline',\r\n    'italic', '|',\r\n    'ul',\r\n    'ol', '|',\r\n    'outdent', 'indent',  '|',\r\n    'font',\r\n    'fontsize',\r\n    'brush',\r\n    'paragraph', '|',\r\n    'image',\r\n    'video',\r\n    'table',\r\n    'link', '|',\r\n    'align', 'undo', 'redo', '|',\r\n    'hr',\r\n    'eraser',\r\n    'copyformat', '|',\r\n    'symbol',\r\n    'fullsize',\r\n    'print',\r\n    'about'\r\n],\r\n};\r\nconst RichTextEditor = ({ initialValue, getValue}) => {\r\n  const editor = useRef(null);\r\n\r\n  return (\r\n    <JoditEditor\r\n      ref={editor}\r\n      value={initialValue}\r\n      config={config}\r\n      tabIndex={1}\r\n      //   onBlur={(newContent) => getValue(newContent)}\r\n      onChange={(newContent) => getValue(newContent)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RichTextEditor;\r\n","export default __webpack_public_path__ + \"static/media/Level1.43c26585.jpg\";","import Level1 from 'assets/images/grammarLevels/Level1.jpg';\r\nimport Level2 from 'assets/images/grammarLevels/Level2.jpg';\r\nimport Level3 from 'assets/images/grammarLevels/Level3.jpg';\r\nimport Level4 from 'assets/images/grammarLevels/Level4.jpg';\r\n\r\nexport const GRAMMAR_LEVEL = [\r\n    {\r\n      value: '1',\r\n      label: 'Level 1',\r\n      image: Level1,\r\n    },\r\n    {\r\n      value: '2',\r\n      label: 'Level 2',\r\n      image: Level2,\r\n    },\r\n    {\r\n      value: '3',\r\n      label: 'Level 3',\r\n      image: Level3,\r\n    },\r\n    {\r\n      value: '4',\r\n      label: 'Level 4',\r\n      image: Level4,\r\n    },\r\n  ];\r\n  ","export default __webpack_public_path__ + \"static/media/Level2.740c60b7.jpg\";","export default __webpack_public_path__ + \"static/media/Level3.3f74cba2.jpg\";","export default __webpack_public_path__ + \"static/media/Level4.183c28e0.jpg\";","import GRAMMAR_CONSTANT from \"../constants/grammarConstant\";\r\nimport grammarApi from \"./../../apis/grammarApi\";\r\n\r\n\r\nexport const getGrammar = (id) => {\r\n    return async (dispatch) => {\r\n        try { \r\n          const response = await grammarApi.getGrammar(id);\r\n          if(response.status===200){\r\n            dispatch({\r\n              type: GRAMMAR_CONSTANT.GET_GRAMMAR,\r\n              payload: response.data,\r\n            })\r\n          }\r\n          else\r\n          {\r\n            dispatch({\r\n              type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n              payload: response.data.message,\r\n            })\r\n          }\r\n        } catch (error) {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: error.response.message,\r\n          })\r\n        }\r\n      }\r\n};\r\n\r\nexport const getAllGrammar = () => {\r\n  return async (dispatch, getState) => {\r\n      try { \r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_LOADING,\r\n          payload:true,\r\n        });\r\n\r\n        const {\r\n          authReducer: { user },\r\n        } = getState();\r\n\r\n        const response = await grammarApi.getAllGrammar(user.access_token);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.GET_ALL_GRAMMAR,\r\n            payload: response.data.grammars,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const getGrammarByLevel = (level) => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.getGrammarByLevel(level);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.GET_GRAMMAR_BY_LEVEL,\r\n            payload: response.data.grammars,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const getGrammarLevels = () => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.getGrammarLevels();\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.GET_GRAMMAR_LEVELS,\r\n            payload: response.data.levels,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const postGrammar = (formData) => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.postGrammar(formData);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.CREATE_GRAMMAR,\r\n            payload: response.data.grammar,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const putGrammar = (id, formData) => {\r\n  return async (dispatch)=>{\r\n    try{\r\n        const response = await grammarApi.putGrammar(id, formData);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.EDIT_GRAMMAR,\r\n            payload: response.data.grammar,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n\r\nexport const deleteGrammar = (id) => {\r\n  return async (dispatch) => {\r\n      try { \r\n        const response = await grammarApi.deleteGrammar(id);\r\n        if(response.status===200){\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.DELETE_GRAMMAR,\r\n            payload: id,\r\n          })\r\n        }\r\n        else\r\n        {\r\n          dispatch({\r\n            type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n            payload: response.data.message,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GRAMMAR_CONSTANT.SET_GRAMMAR_ERROR,\r\n          payload: error.response.message,\r\n        })\r\n      }\r\n    }\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n  },\r\n\r\n  paper: {\r\n    maxWidth: 350,\r\n    width: '100%',\r\n    backgroundColor: 'var(--bg-color-sec)',\r\n    padding: '2.4rem 3.2rem',\r\n\r\n    [theme.breakpoints.up('sm')]: {\r\n      maxWidth: 480,\r\n    },\r\n\r\n    [theme.breakpoints.up('md')]: {\r\n      maxWidth: 678,\r\n    },\r\n\r\n    maxHeight: '85vh',\r\n  },\r\n\r\n  title: {\r\n    color: 'var(--title-color)',\r\n    textTransform: 'capitalize',\r\n    fontSize: '2.2rem',\r\n    wordSpacing: 1.5,\r\n    fontWeight: 500,\r\n  },\r\n\r\n  content: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr',\r\n    gap: '0.8rem',\r\n\r\n    '& *': {\r\n      fontSize: '1.6rem',\r\n      lineHeight: 1.5,\r\n      letterSpacing: '0.5px',\r\n      color: 'var(--text-color)',\r\n    },\r\n  },\r\n\r\n  closeIcon: {\r\n    fontSize: '3.2rem',\r\n    color: 'var(--title-color)',\r\n    transition: 'all 0.5s',\r\n\r\n    '&:hover, &:active': {\r\n      transform: 'rotate(360deg)',\r\n    },\r\n  },\r\n\r\n  label: {\r\n    color: 'var(--label-color)',\r\n    textDecoration: 'underline',\r\n    fontSize: '1.7rem',\r\n  },\r\n\r\n  picture: {\r\n    width: '5.6rem',\r\n    height: '5.6rem',\r\n  },\r\n\r\n  word: {\r\n    fontSize: '2rem',\r\n    color: 'var(--secondary-color)',\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  type: {\r\n    fontWeight: 500,\r\n  },\r\n\r\n  mean: {\r\n    color: 'var(--text-color)',\r\n  },\r\n\r\n  phonetic: {\r\n    fontSize: '1.7rem',\r\n    color: 'var(--phonetic-color)',\r\n  },\r\n\r\n  topics: {\r\n    margin: '0 -0.4rem',\r\n\r\n    '& > *': {\r\n      margin: '0.4rem',\r\n    },\r\n  },\r\n}));\r\n","import Popover from '@material-ui/core/Popover';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { WORD_SPECIALTY } from 'constants/index';\r\nimport { GRAMMAR_LEVEL } from 'constants/grammarLevels';\r\nimport { cloudinaryImgOptimize } from 'helper';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Tag from '../Tag';\r\nimport useStyle from './style';\r\n\r\nfunction sliceTopics(levels) {\r\n  let res = [];\r\n  levels.forEach((level) => {\r\n    res.push(GRAMMAR_LEVEL.find((i) => i.value === level));\r\n  });\r\n  return res;\r\n}\r\n\r\nfunction GrammarDetailModal(props) {\r\n  const {\r\n    _id,\r\n    Image,\r\n    Title,\r\n    Level,\r\n    Content,\r\n    open,\r\n    onClose,\r\n    loading,\r\n  } = props;\r\n\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <Popover\r\n      classes={{\r\n        root: `${classes.root} flex-center`,\r\n        paper: `${classes.paper} container`,\r\n      }}\r\n      open={open}\r\n      onClose={onClose}\r\n      anchorReference={'none'}>\r\n      <div className=\"flex-center-between\">\r\n        <h2 className={classes.title}>\r\n          Chi tiết từ <span className={classes.wordTitle}>{`\"${Title}\"`}</span>\r\n        </h2>\r\n        <CloseIcon\r\n          className={`${classes.closeIcon} cur-pointer`}\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"english-break\"></div>\r\n\r\n      {loading ? (\r\n        <Skeleton\r\n          style={{ width: '100%', height: '35vh' }}\r\n          variant=\"rect\"\r\n          animation=\"wave\"\r\n        />\r\n      ) : (\r\n        <div className={classes.content}>\r\n          <div className=\"flex-center--ver my-4\">\r\n            {Image && Image !== '' && (\r\n              <img\r\n                src={cloudinaryImgOptimize(Image, 56, 56, true)}\r\n                alt=\"Photo\"\r\n                className={`${classes.picture} mr-8`}\r\n              />\r\n            )}\r\n            <div>\r\n              <p className={classes.word}>\r\n                {Title}&nbsp;\r\n               \r\n                <span className={classes.mean}> {Content}</span>\r\n              </p>\r\n              {Boolean(Level) && (\r\n                <p className={`${classes.phonetic} mt-4`}>Level: {Level}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* {level !== '0' && (\r\n            <p className={classes.level}>\r\n              <b className={classes.label}>Cấp độ:</b>&nbsp;&nbsp;\r\n              {level}\r\n            </p>\r\n          )} */}\r\n         \r\n        </div>\r\n      )}\r\n    </Popover>\r\n  );\r\n}\r\n\r\nGrammarDetailModal.propTypes = {\r\n  loading: PropTypes.bool,\r\n  Content: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  Level: PropTypes.string,\r\n  Image: PropTypes.string,\r\n  Title: PropTypes.string,\r\n  _id: PropTypes.string,\r\n};\r\n\r\nGrammarDetailModal.defaultProps = {\r\n  loading: true,\r\n  Content: '',\r\n  onClose: function () {},\r\n  open: false,\r\n  Level: '',\r\n  Image: '',\r\n  Title: '',\r\n  _id: '',\r\n};\r\n\r\nexport default GrammarDetailModal;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { dictionaryRoot } from 'components/UI/style';\r\n\r\nexport default makeStyles((theme) => ({\r\n  ...dictionaryRoot(theme),\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  root: {\r\n    padding: '1.2rem 0',\r\n    borderBottom: 'solid 1px var(--border-color)',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.35s',\r\n\r\n    '&:hover, &:active': {\r\n      borderBottom: 'solid 1px var(--accent-color)',\r\n    },\r\n  },\r\n\r\n  picture: {\r\n    width: '5rem',\r\n    height: '5rem',\r\n  },\r\n\r\n  word: {\r\n    fontSize: '1.8rem',\r\n    fontWeight: 500,\r\n    color: 'var(--primary-color)',\r\n  },\r\n\r\n  type: {\r\n    color: 'var(--label-color)',\r\n  },\r\n\r\n  phonetic: {\r\n    fontSize: '1.5rem',\r\n    margin: '0.8rem 0',\r\n  },\r\n\r\n  mean: {\r\n    fontSize: '1.6rem',\r\n    color: 'var(--text-color)',\r\n    maxWidth: '80%',\r\n    lineHeight: 1.5,\r\n  },\r\n}));\r\n","\r\nimport { cloudinaryImgOptimize } from \"helper\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport useStyle from \"./style\";\r\nimport WordDetailModal from \"components/UI/WordDetailModal\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMessage } from \"redux/actions/messageAction\";\r\nimport { DEFAULTS } from '../../../constants/index';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { deleteGrammar } from \"redux/actions/grammarAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction GrammarItem({ _id, Title, Image, Level, Content }) {\r\n  const classes = useStyle();\r\n  const imgSrc = cloudinaryImgOptimize(\r\n    Image ? Image : DEFAULTS.IMAGE_SRC,\r\n    50,\r\n    50,\r\n    true,\r\n    true\r\n  );\r\n\r\n  const history = useHistory();\r\n  function handleClick(id) {\r\n    history.push(`/admin/grammar/details/${id}`);\r\n  }\r\n  function handleEditClick(id) {\r\n    history.push(`/admin/grammar/edit/${id}`);\r\n  }\r\n  const [modal, setModal] = useState({ loading: false, open: false });\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Bạn chắc chắn muốn xóa ngữ pháp này?')) {\r\n       dispatch(deleteGrammar(id));\r\n       dispatch(setMessage(\"Delete successfully\", \"success\"));\r\n     window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`${classes.root} flex-center-between`}>\r\n        <div \r\n          className=\"w-100 flex-center--ver\"\r\n          onClick={() => handleClick(_id)}\r\n        >\r\n          <img className={classes.picture} src={imgSrc} alt=\"photo\" />\r\n          <div className=\"ml-8 flex-grow-1\">\r\n            <h3 className={classes.word}>\r\n              {Title}\r\n              \r\n            </h3>\r\n          \r\n              <p className={`${classes.phonetic} phonetic`}> Level: {Level} </p>\r\n           \r\n            <p className={classes.mean}>{Content}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-center--ver\">\r\n        <div className=\"mr-5\">\r\n          <EditIcon className=\"english-setting-icon\"\r\n           onClick={() => handleEditClick(_id)}\r\n           />\r\n        </div>\r\n        <DeleteIcon className=\"english-setting-icon\" \r\n         onClick={() => deleteHandler(_id)}\r\n         />\r\n\r\n      </div>\r\n      </div>\r\n      {modal.open && (\r\n        <WordDetailModal\r\n          {...modal}\r\n          onClose={() => setModal({ open: false, loading: false })}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nGrammarItem.propTypes = {\r\n  CreateDate: PropTypes.string,\r\n  onShowDetail: PropTypes.func,\r\n  Topic: PropTypes.string,\r\n  Image: PropTypes.string,\r\n  Name: PropTypes.string,\r\n  _id: PropTypes.string,\r\n};\r\n\r\nGrammarItem.defaultProps = {\r\n  onShowDetail: function () {},\r\n};\r\n\r\nexport default GrammarItem;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { dialogMUIRoot } from '../style';\r\n\r\nexport default makeStyles((theme) => ({\r\n  ...dialogMUIRoot(theme),\r\n}));\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SelectCustom from 'components/UI/SelectCustom';\r\n// import { WORD_TYPES, WORD_SPECIALTY, WORD_LEVELS } from 'constants';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useRef } from 'react';\r\nimport TopicSelect from '../../UI/TopicSelect';\r\nimport useStyle from './style';\r\nimport {GRAMMAR_LEVEL } from '../../../constants/grammarLevels';\r\n\r\nconst formId = 'grammarLevelPackForm';\r\n\r\nfunction addAllOption(optionList = []) {\r\n  return [{ value: 'All', label: 'All' }, ...optionList];\r\n}\r\n\r\nfunction GrammarLevel(props) {\r\n  const {\r\n    onChoose,\r\n    onCancel,\r\n    open,\r\n    title,\r\n    okBtnText,\r\n    cancelBtnText,\r\n    okBtnProps,\r\n    cancelBtnProps,\r\n  } = props;\r\n\r\n  const classes = useStyle();\r\n  //const topics = useRef([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { target } = e;\r\n    const level = target.level?.value || '-1'\r\n\r\n    //console.log(topic);\r\n    onChoose({\r\n     level\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      classes={{ paper: classes.dialogPaper }}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      disableBackdropClick\r\n      open={open}>\r\n      <DialogTitle classes={{ root: classes.title }}>{title}</DialogTitle>\r\n\r\n      <DialogContent dividers classes={{ dividers: classes.breakLine }}>\r\n        <form id={formId} onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <SelectCustom\r\n                label=\"Level\"\r\n                className=\"w-100\"\r\n                index={0}\r\n                options={addAllOption(GRAMMAR_LEVEL)}\r\n                inputProps={{ name: 'level' }}\r\n              />\r\n            </Grid>\r\n           \r\n          \r\n          </Grid>\r\n        </form>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button\r\n          onClick={onCancel}\r\n          className=\"_btn _btn-stand\"\r\n          variant=\"outlined\"\r\n          {...cancelBtnProps}>\r\n          {cancelBtnText}\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          disableFocusRipple\r\n          component=\"button\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          className=\"_btn _btn-primary\"\r\n          variant=\"contained\"\r\n          {...okBtnProps}>\r\n          {okBtnText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nGrammarLevel.propTypes = {\r\n  cancelBtnProps: PropTypes.object,\r\n  cancelBtnText: PropTypes.string,\r\n  okBtnProps: PropTypes.object,\r\n  okBtnText: PropTypes.string,\r\n  onCancel: PropTypes.func,\r\n  onChoose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  title: PropTypes.string,\r\n // topicMultiples: PropTypes.bool,\r\n};\r\n\r\nGrammarLevel.defaultProps = {\r\n  onChoose: function () {},\r\n  open: true,\r\n // topicMultiples: true,\r\n  title: 'Gói từ vựng',\r\n  okBtnText: 'Ok',\r\n  cancelBtnText: 'Đóng',\r\n  okBtnProps: {},\r\n  cancelBtnProps: {},\r\n};\r\n\r\nexport default GrammarLevel;\r\n","import SettingsIcon from '@material-ui/icons/Settings';\r\nimport GrammarLevel from '../UI/GrammarLevel';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\n\r\nfunction GrammarLevelSetting({ classNameIcon, onChoose }) {\r\n  const [openWordPack, setOpenWordPack] = useState(false);\r\n\r\n  const onSelect = (v) => {\r\n    onChoose(v);\r\n    setOpenWordPack(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SettingsIcon\r\n        className={classNameIcon}\r\n        onClick={() => setOpenWordPack(true)}\r\n      />\r\n\r\n      {/* setting modal */}\r\n      {openWordPack && (\r\n        <GrammarLevel\r\n          open={openWordPack}\r\n          onCancel={() => setOpenWordPack(false)}\r\n          onChoose={onSelect}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nGrammarLevelSetting.propTypes = {\r\n  classNameIcon: PropTypes.string,\r\n  onChoose: PropTypes.func,\r\n};\r\n\r\nGrammarLevelSetting.defaultProps = {\r\n  onChoose: () => {},\r\n};\r\n\r\nexport default GrammarLevelSetting;\r\n","import PropTypes from 'prop-types';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport React from 'react';\r\n\r\nfunction WordSkeleton({ className }) {\r\n  return (\r\n    <div className={className}>\r\n      {new Array(10).fill(0).map((_, index) => (\r\n        <Skeleton key={index} animation=\"wave\" variant=\"rect\" />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nWordSkeleton.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default WordSkeleton;\r\n","import LoopIcon from '@material-ui/icons/Loop';\r\nimport AutoSearchInput from 'components/UI/AutoSearchInput';\r\nimport InfiniteScroll from 'components/UI/InfiniteScroll';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport useStyle from './style';\r\nimport WordItem from './GrammarItem/index';\r\nimport WordPackSetting from './WordPackSetting';\r\nimport WordSkeleton from './WordSkeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { ROUTES } from 'constants/index';\r\nimport { useHistory } from 'react-router-dom';\r\nimport RichTextEditor from 'components/UI/RichTextEditor';\r\n\r\nfunction GrammarAdmin({\r\n  list,\r\n  loading,\r\n  onLoadData,\r\n  more,\r\n  isFirstLoad,\r\n  onSettingWordPack,\r\n  onSearchWord,\r\n}) {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  \r\n  return (\r\n    <div className={`${classes.root} english-container`}>\r\n      {/* title - menu */}\r\n      <div className=\"flex-center-between\">\r\n        <h1 className=\"english-title\">Quản lý ngữ pháp</h1>\r\n        <div>\r\n          <AddIcon className=\"english-setting-icon mr-5\" onClick={() => history.push(ROUTES.CREATE_GRAMMAR)}/>\r\n  \r\n          <WordPackSetting\r\n              onChoose={onSettingWordPack}\r\n              classNameIcon=\"english-setting-icon\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"english-break\"></div>\r\n\r\n      {/* list content */}\r\n      <div className={classes.contentWrap}>\r\n        <AutoSearchInput disabled={loading} onSearch={onSearchWord} />\r\n\r\n        <div className={`${classes.listWrap} w-100`}>\r\n          <ul id=\"dictionaryId\" className={`${classes.list} flex-col w-100`}>\r\n            <>\r\n              {isFirstLoad ? (\r\n                <WordSkeleton className={classes.skeleton} />\r\n              ) : (\r\n                <>\r\n                  {list && list.length > 0 ? (\r\n                    <>\r\n                      {/* render list */}\r\n                      {list.map((item, index) => (\r\n                        <li className={classes.listItem} key={index}>\r\n                          <WordItem {...item} />\r\n                        </li>\r\n                      ))}\r\n\r\n                      {/* infinite scrolling */}\r\n                      {!loading && more && (\r\n                        <InfiniteScroll\r\n                          onTouchAnchor={onLoadData}\r\n                          threshold={1}>\r\n                          <div className=\"w-100 t-center\">\r\n                            <LoopIcon className=\"ani-spin\" />\r\n                          </div>\r\n                        </InfiniteScroll>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    // empty list\r\n                    <h3 className=\"notfound-title h-100 flex-center t-center\">\r\n                      No result.\r\n                    </h3>\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGrammarAdmin.propTypes = {\r\n  isFirstLoad: PropTypes.bool,\r\n  list: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n  more: PropTypes.bool,\r\n  onLoadData: PropTypes.func,\r\n  onSearchWord: PropTypes.func,\r\n  onSettingWordPack: PropTypes.func,\r\n};\r\n\r\nGrammarAdmin.defaultProps = {\r\n  list: [],\r\n  loading: false,\r\n  more: true,\r\n  isFirstLoad: true,\r\n  onLoadData: function () {},\r\n  onSearchWord: function () {},\r\n  onSettingWordPack: function () {},\r\n};\r\n\r\nexport default GrammarAdmin;\r\n","import grammarApi from \"apis/grammarApi\";\r\nimport GrammarDetailModal from \"components/UI/GrammarDetailModal\";\r\nimport { equalArray } from \"helper\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport GrammarAdmin from \"./index\";\r\n\r\nfunction ListeningAdminData() {\r\n  const [page, setPage] = useState(1);\r\n  const [packInfo, setPackInfo] = useState(() => ({\r\n    level: \"All\",\r\n  }));\r\n  const [loading, setLoading] = useState(true);\r\n  const [list, setList] = useState([]);\r\n  const [more, setMore] = useState(true); // toggle infinite scrolling\r\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\r\n  const totalPage = useRef(0);\r\n  const preSearchList = useRef([]);\r\n\r\n  const nextPage = () => {\r\n    if (page < totalPage.current) {\r\n      setPage(page + 1);\r\n    } else {\r\n      setMore(false);\r\n    }\r\n  };\r\n\r\n  const settingWordPack = (info) => {\r\n    // check old pack vs new pack\r\n    let isEqual = true;\r\n    if (packInfo !== \"level\" && packInfo.level !== info.level) {\r\n      isEqual = false;\r\n    }\r\n    if (isEqual) isEqual = equalArray(packInfo.level, info.level);\r\n\r\n    totalPage.current = 0;\r\n    preSearchList.current = [];\r\n    setMore(true);\r\n    setList([]);\r\n    setPackInfo(info);\r\n    setPage(1);\r\n  };\r\n\r\n  const onSearchWord = async (title) => {\r\n    try {\r\n      if (title === \"\") {\r\n        setList(preSearchList.current);\r\n        setMore(true);\r\n        return;\r\n      }\r\n      const apiRes = await grammarApi.searchGrammar(title);\r\n      console.log(apiRes.data);\r\n      if (apiRes.status === 200) {\r\n        setList(apiRes.data);\r\n        setMore(false);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  // get word pack\r\n  useEffect(() => {\r\n    let isSub = true;\r\n    (async function () {\r\n      try {\r\n        console.log(packInfo);\r\n        setLoading(true);\r\n        let apiRes = null;\r\n        if (packInfo.level === \"All\") {\r\n          apiRes = await grammarApi.getAllGrammar();\r\n        } else {\r\n          apiRes = await grammarApi.getGrammarByLevel(packInfo.level);\r\n        }\r\n        if (apiRes && isSub) {\r\n          const newList = apiRes.data.grammars.filter((item) => {\r\n            return item.isLocked === 0\r\n          })\r\n          preSearchList.current = newList;\r\n          setList(newList);\r\n        }\r\n      } catch (error) {\r\n      } finally {\r\n        if (isSub) {\r\n          setLoading(false);\r\n          isFirstLoad && setIsFirstLoad(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => (isSub = false);\r\n  }, [page, packInfo]);\r\n\r\n  return (\r\n    <>\r\n      <GrammarAdmin\r\n        list={list}\r\n        loading={loading}\r\n        onLoadData={nextPage}\r\n        more={more}\r\n        isFirstLoad={isFirstLoad}\r\n        onSettingWordPack={settingWordPack}\r\n        onSearchWord={onSearchWord}\r\n      />\r\n      <GrammarDetailModal />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListeningAdminData;\r\n","import React from 'react'\r\nimport { dictionaryRoot } from '../components/UI/style'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport useTitle from './../hooks/useTitle';\r\nimport GrammarAdminData from '../components/GrammarAdmin/data'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  ...dictionaryRoot(theme)\r\n}))\r\n\r\nexport default function GrammarAdminPage() {\r\n  useTitle('Grammar Admin')\r\n  const classes = useStyle();\r\n  return (\r\n    <div className=\"container\">\r\n      <GrammarAdminData/>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"sourceRoot":""}