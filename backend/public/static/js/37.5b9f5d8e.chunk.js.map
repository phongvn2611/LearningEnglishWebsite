{"version":3,"sources":["apis/listeningApi.js","pages/ListeningByTopic.js"],"names":["URL","listeningApi","getListening","id","axios","get","getListenByTopic","topic","type","params","getListenById","getListenTopics","getAllListen","searchListen","name","postListen","formData","post","header","putListen","put","deleteListen","delete","useStyle","makeStyles","mobilelist","height","floatleft","float","margin","padding","title","display","fontSize","fontWeight","color","tldetail","textlimit","overflow","textOverflow","whiteSpace","width","ListeningByTopicPage","useTitle","useState","list","setList","classes","history","useHistory","useParams","useEffect","a","apiRes","status","console","log","data","listens","className","variant","align","map","item","src","image","Image","cloudinaryImgOptimize","DEFAULTS","IMAGE_SRC","onClick","_id","push","href","Name","Description"],"mappings":"mIACMA,EAAG,iBAEHC,EAAe,CACnBC,aAAc,SAACC,GACb,OAAOC,IAAMC,IAAN,UAAaL,EAAb,0BAAkCG,KAG3CG,iBAAkB,SAACC,EAAOC,GACxB,OAAOJ,IAAMC,IAAN,UAAaL,EAAb,wBAAwC,CAACS,OAAQ,CAACF,QAAOC,WAGlEE,cAAe,SAACP,GACd,OAAOC,IAAMC,IAAN,UAAaL,EAAb,6BAAqCG,KAG9CQ,gBAAiB,SAACJ,EAAOC,GACvB,OAAOJ,IAAMC,IAAN,UAAaL,EAAb,sBAAqC,CAACS,OAAQ,CAAEF,QAAOC,WAGhEI,aAAc,SAACJ,GACb,OAAOJ,IAAMC,IAAN,UAAaL,EAAb,mBAAmC,CAACS,OAAQ,CAACD,WAGtDK,aAAc,SAACC,GACb,OAAOV,IAAMC,IAAN,UAAaL,EAAb,kBAAkC,CAACS,OAAQ,CAACK,WAGrDC,WAAY,SAACC,GACX,OAAOZ,IAAMa,KAAN,UAAcjB,EAAd,+BAAqCgB,GAC5C,CACEE,OAAQ,CAAE,eAAgB,0BAI9BC,UAAW,SAAChB,EAAIa,GACd,OAAOZ,IAAMgB,IAAN,UAAapB,EAAb,uBAA+BG,GAA/B,eAA0Ca,GACjD,CACEP,OAAQ,CAAEN,MACVe,OAAQ,CAAE,eAAgB,0BAI9BG,aAAc,SAAClB,GACb,OAAOC,IAAMkB,OAAN,UAAgBtB,EAAhB,0BAAqCG,MAIjCF,O,qJCrCTsB,EAAWC,aAAW,iBAAO,CACjCC,WAAa,CACXC,OAAQ,SAGZC,UAAW,CACTC,MAAO,OACPC,OAAQ,kBACRC,QAAS,OAEXC,MAAO,CACLC,QAAS,eACTC,SAAU,SACVC,WAAY,IACZC,MAAO,OACPN,OAAQ,sBAEVO,SAAU,CACRH,SAAU,SACVC,WAAW,IACXC,MAAO,SAETE,UAAW,CACPC,SAAU,SACVC,aAAc,WACdC,WAAY,SACdC,MAAO,aA6EMC,UAxEf,WACEC,YAAS,aACT,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAASxB,IACTyB,EAAUC,cAET1C,EAAQ2C,cAAY3C,MA8B3B,OA5BC4C,qBAAU,WAWV,OAVA,sBAAC,4BAAAC,EAAA,+EAEwBnD,IAAaK,iBAAiBC,EAAM,UAF5D,OAGyB,OADhB8C,EAFT,QAGcC,SACPC,QAAQC,IAAIH,EAAOI,MACrBX,EAAQO,EAAOI,KAAKC,UALzB,sGAAD,GAUO,eACN,IAiBA,sBAAKC,UAAU,YAAf,UAEI,cAAC,IAAD,CAAYC,QAAQ,KAAKC,MAAM,SAA/B,SACStD,IAGVsC,GACDA,EAAKiB,KAAI,SAACC,GAAD,OAET,qBAAKJ,UAAWZ,EAAQtB,WAAxB,SACA,gCACE,qBAAKkC,UAAWZ,EAAQpB,UAAxB,SACE,4BACE,qBAAKD,OAAO,OAAOe,MAAM,OAAOuB,KA5BzBC,EA4BuCF,EAAKG,MA3B5CC,YAAuBF,GAAgBG,IAASC,UAC1D,IACA,KACA,GACA,IAuB8DC,QAAS,kBAlB9DnE,EAkB6E4D,EAAKQ,SAjBhGvB,EAAQwB,KAAR,6BAAmCrE,IADtB,IAACA,SAqBR,mBAAGwD,UAAWZ,EAAQhB,MAAO0C,KAAI,6BAAwBV,EAAKQ,KAA9D,SAAqE,uCAAUR,EAAKW,UACpF,uBAEA,qBAAKf,UAAWZ,EAAQV,UAAxB,SACA,sBAAMsB,UAAWZ,EAAQX,SAAzB,SAAoC2B,EAAKY,qBAnCjC,IAACV","file":"static/js/37.5b9f5d8e.chunk.js","sourcesContent":["import axios from \"axios\";\nconst URL = `/api/listening`;\n\nconst listeningApi = {\n  getListening: (id) => {\n    return axios.get(`${URL}/get-listening/${id}`);\n  },\n\n  getListenByTopic: (topic, type) => {\n    return axios.get(`${URL}/get-listen-by-topic`, {params: {topic, type}})\n  },\n\n  getListenById: (id) => {\n    return axios.get(`${URL}/get-listen-by-id/${id}`)\n  },\n\n  getListenTopics: (topic, type) => {\n    return axios.get(`${URL}/get-listen-topics`,{params: { topic, type}})\n  },\n\n  getAllListen: (type) => {\n    return axios.get(`${URL}/get-all-listen`, {params: {type}})\n  },\n\n  searchListen: (name) => {\n    return axios.get(`${URL}/search-listen`, {params: {name}})\n  },\n\n  postListen: (formData) => {\n    return axios.post(`${URL}/post-listen`, {...formData},\n    {\n      header: { \"content-type\": \"multipart/form-data\" },\n    })\n  },\n\n  putListen: (id, formData) => {\n    return axios.put(`${URL}/put-listen/${id}`, { ...formData},\n    {\n      params: { id },\n      header: { \"content-type\": \"multipart/form-data\" },\n    });\n  },\n\n  deleteListen: (id) => {\n    return axios.delete(`${URL}/delete-listen/${id}`)\n  },\n}\n\nexport default listeningApi;\n","import useTitle from 'hooks/useTitle';\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport React, { useState, useEffect } from 'react';\nimport listeningApi from '../apis/listeningApi';\nimport { useHistory, useParams } from 'react-router';\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from 'constants/index';\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyle = makeStyles(() => ({\n  mobilelist : {\n    height: \"115px\",\n \n},\nfloatleft: {\n  float: \"left\",\n  margin: \"0 10px 10px 0px\",\n  padding: \"2px\",\n},\ntitle: {\n  display: 'inline-block',\n  fontSize: '2.0rem',\n  fontWeight: 400,\n  color: 'blue',\n  margin: '0.8rem 0rem 0rem 0',\n},\ntldetail: {\n  fontSize: '1.5rem',\n  fontWeight:400,\n  color: 'black', \n},\ntextlimit: {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  width: \"500px\",\n}\n\n}));\n\nfunction ListeningByTopicPage() {\n  useTitle('Listening');\n  const [list, setList] = useState([]);\n  const classes= useStyle();\n  const history = useHistory();\n\n  const  topic = useParams().topic;\n  \n   useEffect(() => {\n   (async function () {\n     try {\n       const apiRes = await listeningApi.getListenByTopic(topic,\"Newest\");\n       if (apiRes.status === 200) {\n           console.log(apiRes.data)\n         setList(apiRes.data.listens);\n       }\n     } catch (error) {}\n   })();\n \n   return () => {};\n }, []);\n\n const getImage = (image) =>{\n    const imgSrc = cloudinaryImgOptimize( image ? image : DEFAULTS.IMAGE_SRC,\n         200,\n         200,\n         true,\n         true\n     );\n     return imgSrc;\n}\n\nconst viewDetail=(id)=>{\n    history.push(`/listening/details/${id}`)\n}\n\n  return (\n    <div className=\"container\">\n\n        <Typography variant=\"h6\" align=\"center\">\n                {topic}\n        </Typography>\n                \n      {list &&(\n      list.map((item) => \n   \n      <div className={classes.mobilelist} >\n      <div>\n        <div className={classes.floatleft}>\n          <a>\n            <img height=\"80px\" width=\"80px\" src={getImage(item.Image)} onClick={()=>viewDetail(item._id)}/>\n          </a>\n          </div>\n          <a className={classes.title} href={`/listening/details/${item._id}`}><strong> {item.Name}</strong></a>\n          <br></br>\n          \n          <div className={classes.textlimit}>\n          <span className={classes.tldetail}>{item.Description}</span>\n          </div>\n      \n      </div>\n\n    </div>\n   \n     \n      ))}\n\n     \n    </div>\n  );\n}\n\nexport default ListeningByTopicPage;\n"],"sourceRoot":""}