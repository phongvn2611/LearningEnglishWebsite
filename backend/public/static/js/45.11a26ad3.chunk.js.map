{"version":3,"sources":["hooks/useCloseContact.js","pages/Login.js"],"names":["useCloseContact","useEffect","document","getElementById","style","display","removeAttribute","schema","yup","shape","email","required","password","min","LoginPage","useTitle","useCloseNavigation","useSelector","state","authReducer","isAuth","role","useState","loading","setLoading","dispatch","useDispatch","classes","useHistory","makeStyles","formStyle","visiblePw","setVisiblePw","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","user","setUser","handleChange","e","target","name","value","handleLogin","a","userApi","login","res","setMessage","data","message","roleType","setTimeout","window","location","replace","UX","DELAY_TIME","response","className","root","onSubmit","autoComplete","labelIcon","src","alt","title","label","size","placeholder","onChange","error","Boolean","inputProps","autoFocus","type","endAdornment","icon","onClick","forgotPw","to","ROUTES","FORGOT_PASSWORD","variant","color","disabled","endIcon","REGISTER"],"mappings":"uGAAA,WAaeA,IAXf,WAQE,OAPAC,qBAAU,WAER,OADAC,SAASC,eAAe,eAAeC,MAAMC,QAAU,OAChD,WAAO,IAAD,EACX,UAAAH,SAASC,eAAe,sBAAxB,SAAwCG,gBAAgB,YAEzD,IAEI,O,sTCaHC,EAASC,MAAaC,MAAM,CAChCC,MAAOF,MAAaG,SAAS,8BAAoBD,MAAM,mCACvDE,SAAUJ,MAEPG,SAAS,2CACTE,IAAI,EAHG,4DAuJGC,UAjJf,WAAsB,IAAD,IACnBC,YAAS,SACTC,cACAhB,cACA,MAAyBiB,aAAY,SAACC,GAAD,OAAWA,EAAMC,eACtD,GADA,EAAQC,OAAR,EAAgBC,KACcC,oBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cAEXC,GADUC,cACAC,IAAWC,IAAXD,IAChB,EAAkCP,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAIIC,YAAQ,CACVC,SAAUC,YAAY5B,KAJtB6B,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAIf,EAAwBhB,mBAAS,CAC/BZ,MAAO,GACPE,SAAU,KAFZ,mBAAO4B,EAAP,KAAaC,EAAb,KAKMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdL,EAAQ,2BAAKD,GAAN,kBAAaK,EAAOC,MAGvBC,EAAW,uCAAG,WAAOJ,GAAP,mBAAAK,EAAA,sEAEhBxB,GAAW,GAFK,SAGEyB,IAAQC,MAAMV,EAAK9B,MAAO8B,EAAK5B,UAHjC,OAGVuC,EAHU,OAIhB1B,EAAS2B,YAAWD,EAAIE,KAAKC,QAAS,YACR,QAA1BH,EAAIE,KAAKb,KAAKe,SAChBC,YAAW,WACTC,OAAOC,SAASC,QAAQ,WACvBC,IAAGC,YAENL,YAAW,WACTC,OAAOC,SAASC,QAAQ,YACvBC,IAAGC,YAZQ,gDAehBpC,EAAS2B,YAAU,UAAC,KAAMU,gBAAP,iBAAC,EAAgBT,YAAjB,aAAC,EAAsBC,QAAS,UACnD9B,GAAW,GAhBK,yDAAH,sDAoBjB,OACE,qBAAKuC,UAAU,0BAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBACEA,UAAS,UAAKpC,EAAQqC,KAAb,aACTC,SAAU5B,EAAaU,GACvBmB,aAAa,MAHf,UAKE,sBAAKH,UAAU,WAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBACEA,UAAWpC,EAAQwC,UACnBC,IAAI,sGACJC,IAAI,WAGR,oBAAIN,UAAS,UAAKpC,EAAQ2C,MAAb,aAAb,yCAGF,sBAAKP,UAAU,WAAf,UACE,cAAC,IAAD,CACEQ,MAAM,QACNC,KAAK,QACLC,YAAY,kBACZC,SAAUhC,EACViC,MAAOC,QAAQtC,EAAO5B,OACtBmE,WAAU,aACRhC,KAAM,QACNiC,WAAW,GACR1C,EAAS,YAGfE,EAAO5B,OACN,mBAAGqD,UAAU,aAAb,mBAA2BzB,EAAO5B,aAAlC,aAA2B,EAAc4C,aAI7C,sBAAKS,UAAU,WAAf,UACE,cAAC,IAAD,CACEQ,MAAM,qBACNC,KAAK,QACLC,YAAY,+BACZC,SAAUhC,EACViC,MAAOC,QAAQtC,EAAO1B,UACtBiE,WAAU,aACRhC,KAAM,WACNkC,KAAMhD,EAAY,OAAS,YACxBK,EAAS,aAEd4C,aACEjD,EACE,cAAC,IAAD,CACEgC,UAAS,UAAKpC,EAAQsD,KAAb,YAAqBtD,EAAQI,WACtCmD,QAAS,kBAAMlD,GAAa,MAG9B,cAAC,IAAD,CACE+B,UAAWpC,EAAQsD,KACnBC,QAAS,kBAAMlD,GAAa,QAKnCM,EAAO1B,UACN,mBAAGmD,UAAU,aAAb,mBAA2BzB,EAAO1B,gBAAlC,aAA2B,EAAiB0C,aAIhD,cAAC,IAAD,CAAMS,UAAWpC,EAAQwD,SAAUC,GAAIC,IAAOC,gBAA9C,0CAIA,cAAC,IAAD,CACEvB,UAAU,oBACVgB,KAAK,SACLQ,QAAQ,YACRC,MAAM,UACNC,SAAUlE,EACVmE,QAASnE,GAAW,cAAC,IAAD,CAAUwC,UAAU,aACxCS,KAAK,QAPP,sCAYA,qBAAKT,UAAU,2BAAf,0BAGF,sBAAKA,UAAU,cAAf,4DAEE,cAAC,IAAD,CAAMqB,GAAIC,IAAOM,SAAU5B,UAAU,eAArC","file":"static/js/45.11a26ad3.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\nfunction useCloseContact() {\n  useEffect(() => {\n    document.getElementById('dynoContact').style.display = 'none';\n    return () => {\n      document.getElementById('dynoContact')?.removeAttribute('style');\n    };\n  }, []);\n\n  return null;\n}\n\nexport default useCloseContact;\n","import \"./style/login-signup.scss\";\nimport { ROUTES } from \"../constants\";\nimport useTitle from \"./../hooks/useTitle\";\nimport useCloseNavigation from \"./../hooks/useCloseNavigation\";\nimport React, { useState } from \"react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport InputCustom from \"../components/UI/InputCustom\";\nimport { formStyle } from \"../components/UI/style\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport userApi from \"../apis/userApi\";\nimport { UX } from \"../constants\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport { setMessage } from \"./../redux/actions/messageAction\";\nimport { useSelector } from \"react-redux\";\nimport useCloseContact from \"hooks/useCloseContact\";\n\nconst schema = yup.object().shape({\n  email: yup.string().required(\"Email đang trống\").email(\"Email không hợp lệ\"),\n  password: yup\n    .string()\n    .required(\"Mật khẩu đang trống\")\n    .min(6, `Mật khẩu tối thiểu 6 ký tự`),\n});\n\nfunction LoginPage() {\n  useTitle(\"Login\");\n  useCloseNavigation();\n  useCloseContact();\n  const { isAuth, role } = useSelector((state) => state.authReducer);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = makeStyles(formStyle)();\n  const [visiblePw, setVisiblePw] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleLogin = async (e) => {\n    try {\n      setLoading(true);\n      const res = await userApi.login(user.email, user.password);\n      dispatch(setMessage(res.data.message, \"success\"));\n      if (res.data.user.roleType == \"user\") {\n        setTimeout(() => {\n          window.location.replace(\"/home\");\n        }, UX.DELAY_TIME);\n      } else {\n        setTimeout(() => {\n          window.location.replace(\"/admin\");\n        }, UX.DELAY_TIME);\n      }\n    } catch (error) {\n      dispatch(setMessage(error.response?.data?.message, \"error\"));\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"pos-rel w-100vw h-100vh\">\n      <div className=\"transform-center\">\n        <form\n          className={`${classes.root} flex-col`}\n          onSubmit={handleSubmit(handleLogin)}\n          autoComplete=\"off\"\n        >\n          <div className=\"flex-col\">\n            <div className=\"t-center mt-5\">\n              <img\n                className={classes.labelIcon}\n                src=\"https://res.cloudinary.com/phongvn2611/image/upload/v1637079637/english/avatar/logo-tiny_seqkri.png\"\n                alt=\"logo\"\n              />\n            </div>\n            <h1 className={`${classes.title} t-center`}>Đăng nhập</h1>\n          </div>\n\n          <div className=\"flex-col\">\n            <InputCustom\n              label=\"Email\"\n              size=\"small\"\n              placeholder=\"Nhập email\"\n              onChange={handleChange}\n              error={Boolean(errors.email)}\n              inputProps={{\n                name: \"email\",\n                autoFocus: true,\n                ...register(\"email\"),\n              }}\n            />\n            {errors.email && (\n              <p className=\"text-error\">{errors.email?.message}</p>\n            )}\n          </div>\n\n          <div className=\"flex-col\">\n            <InputCustom\n              label=\"Mật khẩu\"\n              size=\"small\"\n              placeholder=\"Nhập mật khẩu\"\n              onChange={handleChange}\n              error={Boolean(errors.password)}\n              inputProps={{\n                name: \"password\",\n                type: visiblePw ? \"text\" : \"password\",\n                ...register(\"password\"),\n              }}\n              endAdornment={\n                visiblePw ? (\n                  <VisibilityIcon\n                    className={`${classes.icon} ${classes.visiblePw}`}\n                    onClick={() => setVisiblePw(false)}\n                  />\n                ) : (\n                  <VisibilityOffIcon\n                    className={classes.icon}\n                    onClick={() => setVisiblePw(true)}\n                  />\n                )\n              }\n            />\n            {errors.password && (\n              <p className=\"text-error\">{errors.password?.message}</p>\n            )}\n          </div>\n\n          <Link className={classes.forgotPw} to={ROUTES.FORGOT_PASSWORD}>\n            Quên mật khẩu ?\n          </Link>\n\n          <Button\n            className=\"_btn _btn-primary\"\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            endIcon={loading && <LoopIcon className=\"ani-spin\" />}\n            size=\"large\"\n          >\n            Đăng nhập\n          </Button>\n\n          <div className=\"or-option w-100 t-center\">HOẶC</div>\n        </form>\n\n        <div className=\"has-account\">\n          Bạn chưa có tài khoản?&nbsp;\n          <Link to={ROUTES.REGISTER} className=\"account-link\">\n            Đăng ký\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"],"sourceRoot":""}