{"version":3,"sources":["components/WordAdmin/EditWord/style.js","components/WordAdmin/EditWord/index.js","pages/EditWord.js"],"names":["makeStyles","root","padding","boxShadow","borderRadius","backgroundColor","title","color","textTransform","fontSize","marginBottom","grid","marginTop","tooltipIcon","btn","marginLeft","minWidth","btnReset","borderColor","filter","sentenceInput","minHeight","avtWrap","width","height","position","avt","border","cameraIconWrap","right","bottom","cursor","opacity","cameraIcon","fileInput","top","left","schema","yup","shape","word","trim","required","lowercase","max","MAX","WORD_LEN","mean","MEAN_WORD_LEN","phonetic","PHONETIC_LEN","type","oneOf","WORD_TYPES","map","i","value","level","WORD_LEVELS","specialty","WORD_SPECIALTY","examples","EXAMPLE_WORD_LEN","synonyms","SYNONYMS_WORD_LEN","antonyms","note","NOTE_WORD_LEN","analysisExample","exampleStr","exampleArr","split","str","toLocaleLowerCase","indexOf","getTypeCurrent","options","length","ButtonWrapper","props","Grid","item","xs","md","lg","TagsWrapper","EditWord","useTitle","classes","useStyle","useState","submitting","setSubmitting","history","useHistory","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","dispatch","useDispatch","id","useParams","setPhonetic","wordValue","setWordValue","image","setImage","useEffect","a","wordApi","getWord","apiRes","data","join","picture","handleChange","e","target","name","topics","useRef","onSubmit","rest","setMessage","synonymArr","antonymArr","dataSend","current","replaceAll","putWord","message","response","className","autoComplete","container","alignContent","src","alt","onChange","preventDefault","file","files","size","convertImageToBase64","then","res","err","accept","spacing","InputCustom","label","error","Boolean","inputProps","maxLength","PhoneticInput","errorMessage","SelectCustom","index","multiline","endAdornment","InformationTooltip","TopicSelect","topicList","buttonTitle","buttonWrapper","tagsWrapper","Button","endIcon","variant","onClick","push","disabled","defaultProps","onSubmitForm","margin","EditWordPage"],"mappings":"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","file":"static/js/53.649587d4.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  root: {\r\n    padding: '2.8rem 3.6rem',\r\n    boxShadow: 'var(--box-shadow)',\r\n    borderRadius: 'var(--border-radius)',\r\n    backgroundColor: 'var(--bg-color-sec)',\r\n  },\r\n\r\n  title: {\r\n    color: 'var(--title-color)',\r\n    textTransform: 'capitalize',\r\n    fontSize: '2.8rem',\r\n    marginBottom: '1.2rem',\r\n  },\r\n\r\n  grid: {\r\n    marginTop: '2.4rem',\r\n    marginBottom: '2.4rem',\r\n  },\r\n\r\n  tooltipIcon: {\r\n    fontSize: '1.6rem',\r\n    color: 'var(--label-color)',\r\n  },\r\n\r\n  btn: {\r\n    marginLeft: '1rem',\r\n    textTransform: 'none',\r\n    minWidth: '14rem',\r\n  },\r\n\r\n  btnReset: {\r\n    borderColor: 'var(--accent-color) !important',\r\n    color: 'var(--accent-color) !important',\r\n\r\n    '&:hover, &:active': {\r\n      filter: 'brightness(0.85)',\r\n    },\r\n  },\r\n\r\n  sentenceInput: {\r\n    minHeight: '8rem',\r\n  },\r\n\r\n  avtWrap: {\r\n    width: \"15rem\",\r\n    height: \"15rem\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  avt: {\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid var(--primary-color)\",\r\n  },\r\n\r\n  cameraIconWrap: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    bottom: 0,\r\n\r\n    width: \"4.2rem\",\r\n    height: \"4.2rem\",\r\n    padding: \"1.2rem\",\r\n\r\n    backgroundColor: \"var(--primary-color)\",\r\n    borderRadius: \"50%\",\r\n    cursor: \"pointer\",\r\n    border: \"solid 5px var(--bg-color-sec)\",\r\n\r\n    \"&:hover, &:active\": {\r\n      opacity: 0.85,\r\n    },\r\n  },\r\n\r\n  cameraIcon: {\r\n    color: \"var(--text-color)\",\r\n    fontSize: \"2rem\",\r\n  },\r\n\r\n  fileInput: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    top: 0,\r\n    left: 0,\r\n    opacity: 0,\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport wordApi from \"apis/wordApi\";\r\nimport InputCustom from \"components/UI/InputCustom\";\r\nimport SelectCustom from \"components/UI/SelectCustom\";\r\nimport TopicSelect from \"components/UI/TopicSelect\";\r\nimport {\r\n  MAX,\r\n  WORD_LEVELS,\r\n  WORD_SPECIALTY,\r\n  WORD_TYPES,\r\n} from \"constants/index\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMessage } from \"redux/actions/messageAction\";\r\nimport * as yup from \"yup\";\r\nimport InformationTooltip from \"./../AddWord/InformationTooltip\";\r\nimport PhoneticInput from \"./../AddWord/PhoneticInput\";\r\nimport useStyle from \"./style\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport { convertImageToBase64 } from \"helper/index\";\r\nimport useTitle from 'hooks/useTitle';\r\n\r\nconst schema = yup.object().shape({\r\n  word: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"Hãy nhập một từ vào đây\")\r\n    .lowercase()\r\n    .max(MAX.WORD_LEN, `Từ dài tối đã ${MAX.WORD_LEN} ký tự`),\r\n  mean: yup\r\n    .string()\r\n    .trim()\r\n    .lowercase()\r\n    .required(\"Hãy nhập ý nghĩa từ\")\r\n    .max(MAX.MEAN_WORD_LEN, `Từ dài tối đã ${MAX.MEAN_WORD_LEN} ký tự`),\r\n  phonetic: yup\r\n    .string()\r\n    .trim()\r\n    .lowercase()\r\n    .required(\"Hãy nhập ký âm của từ\")\r\n    .max(MAX.PHONETIC_LEN, `Từ dài tối đã ${MAX.PHONETIC_LEN} ký tự`),\r\n  type: yup\r\n    .string()\r\n    .required(\"Chọn loại của từ\")\r\n    .oneOf(WORD_TYPES.map((i) => i.value)),\r\n  level: yup\r\n    .string()\r\n    .required(\"Chọn cấp bậc của từ\")\r\n    .oneOf(WORD_LEVELS.map((i) => i.value)),\r\n  specialty: yup\r\n    .string()\r\n    .required(\"Chọn cấp bậc của từ\")\r\n    .oneOf(WORD_SPECIALTY.map((i) => i.value)),\r\n  examples: yup\r\n    .string()\r\n    .max(MAX.EXAMPLE_WORD_LEN, `Ví dụ tối đa ${MAX.EXAMPLE_WORD_LEN} ký tự`),\r\n  synonyms: yup\r\n    .string()\r\n    .max(\r\n      MAX.SYNONYMS_WORD_LEN,\r\n      `Từ đồng nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`\r\n    ),\r\n  antonyms: yup\r\n    .string()\r\n    .max(\r\n      MAX.SYNONYMS_WORD_LEN,\r\n      `Từ trái nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`\r\n    ),\r\n  note: yup\r\n    .string()\r\n    .max(MAX.NOTE_WORD_LEN, `Ghi chú tối đa ${MAX.NOTE_WORD_LEN} ký tự`),\r\n});\r\n\r\nconst analysisExample = (exampleStr = \"\", word = \"\") => {\r\n  if (typeof exampleStr !== \"string\" || exampleStr === \"\") {\r\n    return [];\r\n  }\r\n\r\n  const exampleArr = exampleStr.split(\"\\n\");\r\n  for (let str of exampleArr) {\r\n    if (str.toLocaleLowerCase().indexOf(word.toLocaleLowerCase()) === -1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return exampleArr;\r\n};\r\n\r\nconst getTypeCurrent = (type = \"\", options = []) => {\r\n  for (let i = 0; i < options.length; i++) {\r\n    if (options[i].value === type) {\r\n      return i;\r\n    }\r\n  }\r\n  return 0;\r\n};\r\n\r\n// Prevent unmount component topic select\r\nconst ButtonWrapper = (props) => <Grid {...props} item xs={12} md={6} lg={4} />;\r\nconst TagsWrapper = (props) => <Grid {...props} item xs={12} />;\r\n\r\nfunction EditWord() {\r\n  useTitle('Edit word');\r\n  const classes = useStyle();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const defaultImg =\r\n    \"https://res.cloudinary.com/phongvn2611/image/upload/v1638368033/english/word/default-image_fbmbtn.png\";\r\n\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  const [phonetic, setPhonetic] = useState('');\r\n\r\n  const [wordValue, setWordValue] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const apiRes = await wordApi.getWord(id);\r\n      apiRes.data.examples = apiRes.data.examples.join('\\n');\r\n      apiRes.data.synonyms = apiRes.data.synonyms.join('\\n');\r\n      apiRes.data.antonyms = apiRes.data.antonyms.join('\\n');\r\n      setWordValue(apiRes.data);\r\n      setPhonetic(apiRes.data.phonetic)\r\n      setImage(apiRes.data.picture);\r\n    })();\r\n    return () => {};\r\n  }, [id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setWordValue({ ...wordValue, [name]: value });\r\n  }\r\n\r\n  const handleChangePicture = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const file = e.target.files[0];\r\n      if (!file) {\r\n        dispatch(setMessage(\"No files were uploaded\", \"error\"));\r\n      }\r\n      if (file.size / 1024 ** 2 > 2) {\r\n        dispatch(setMessage(\"Size too large\", \"error\"));\r\n      }\r\n      convertImageToBase64(file).then((res) => {\r\n        setImage(res);\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n  const topics = useRef([]);\r\n  const onSubmit = async (e) => {\r\n    try {\r\n      setSubmitting(true);\r\n      const { examples, synonyms, antonyms, word, ...rest } = wordValue;\r\n      // check examples validation\r\n      const exampleArr = analysisExample(examples, word);\r\n      if (typeof exampleArr === \"boolean\" && !exampleArr) {\r\n        dispatch(setMessage(\"Câu ví dụ phải chứa từ vựng mới.\", \"warning\"));\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // split synonyms string to an array synonyms\r\n      const synonymArr = synonyms !== \"\" ? synonyms.split(\"\\n\") : [];\r\n\r\n      // split antonyms string to an array synonyms\r\n      const antonymArr = antonyms !== \"\" ? antonyms.split(\"\\n\") : [];\r\n\r\n      // call API\r\n      const dataSend = {\r\n        ...rest,\r\n        examples: exampleArr,\r\n        synonyms: synonymArr,\r\n        antonyms: antonymArr,\r\n        topics: topics.current,\r\n        picture: image,\r\n        phonetic: phonetic.replaceAll(\"/\", \"\"),\r\n      };\r\n\r\n      const apiRes = await wordApi.putWord(id, dataSend);\r\n\r\n      if (apiRes) {\r\n        dispatch(setMessage(\"Update word successfully\", \"success\"));\r\n        setSubmitting(false);\r\n      }\r\n    } catch (error) {\r\n      const message =\r\n        error.response?.data?.message || \"Error, can not update word.\";\r\n      dispatch(setMessage(message, \"error\"));\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n\r\n  function handleClickGoBack() {\r\n    history.push(\"/admin/word\");\r\n  }\r\n\r\n  return (\r\n     <div >\r\n      <h1 className={classes.title}>Sửa từ</h1>\r\n      <div className=\"english-break\"></div>\r\n\r\n      {wordValue && (\r\n        <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n          <Grid container alignContent=\"center\">\r\n            <div className={classes.avtWrap}>\r\n              <img\r\n                src={image ? image : defaultImg}\r\n                alt=\"\"\r\n                className={`${classes.avt} w-100 h-100`}\r\n              />\r\n              <div className={`${classes.cameraIconWrap} flex-center`}>\r\n                <CameraIcon className={classes.cameraIcon} />\r\n                <input\r\n                  type=\"file\"\r\n                  className={classes.fileInput}\r\n                  onChange={handleChangePicture}\r\n                  accept=\"image/*\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid className={classes.grid} container spacing={3}>\r\n            {/* new word */}\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <InputCustom\r\n                className=\"w-100\"\r\n                label=\"Word\"\r\n                value={wordValue.word}\r\n              //  onChange={handleChange}\r\n              />\r\n            </Grid>\r\n\r\n            {/* mean */}\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <InputCustom\r\n                className=\"w-100\"\r\n                label=\"Meaning\"\r\n                value={wordValue.mean}\r\n                error={Boolean(errors.mean)}\r\n                inputProps={{\r\n                  maxLength: MAX.MEAN_WORD_LEN,\r\n                  name: \"mean\",\r\n                  ...register(\"mean\"),\r\n                }}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.mean && (\r\n                <p className=\"text-error\">{errors.mean?.message}</p>\r\n              )}\r\n            </Grid>\r\n\r\n            {/* phonetic */}\r\n            <PhoneticInput\r\n              errorMessage={errors.phonetic?.message}\r\n              error={Boolean(errors.phonetic)}\r\n              value={wordValue.phonetic}\r\n              inputProps={{\r\n                maxLength: MAX.MEAN_WORD_LEN,\r\n                name: \"phonetic\",\r\n              }}\r\n              register={register(\"phonetic\")}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            {/* word type */}\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <SelectCustom\r\n                className=\"w-100\"\r\n                label=\"Type (*)\"\r\n                options={WORD_TYPES}\r\n                error={Boolean(errors.type)}\r\n                index={getTypeCurrent(wordValue.type, WORD_TYPES)}\r\n                inputProps={{\r\n                  name: \"type\",\r\n                  ...register(\"type\"),\r\n                }}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.type && (\r\n                <p className=\"text-error\">{errors.type?.message}</p>\r\n              )}\r\n            </Grid>\r\n\r\n            {/* word level */}\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <SelectCustom\r\n                className=\"w-100\"\r\n                label=\"Cấp bậc của từ (*)\"\r\n                options={WORD_LEVELS}\r\n                error={Boolean(errors.level)}\r\n                index={getTypeCurrent(wordValue.level, WORD_LEVELS)}\r\n                inputProps={{ name: \"level\", ...register(\"level\") }}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.level && (\r\n                <p className=\"text-error\">{errors.level?.message}</p>\r\n              )}\r\n            </Grid>\r\n\r\n            {/* word specialty */}\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <SelectCustom\r\n                className=\"w-100\"\r\n                label=\"Thuộc chuyên ngành\"\r\n                options={WORD_SPECIALTY}\r\n                error={Boolean(errors.specialty)}\r\n                index={getTypeCurrent(wordValue.specialty, WORD_SPECIALTY)}\r\n                inputProps={{\r\n                  name: \"specialty\",\r\n                  ...register(\"specialty\"),\r\n                }}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.specialty && (\r\n                <p className=\"text-error\">{errors.specialty?.message}</p>\r\n              )}\r\n            </Grid>\r\n\r\n            {/* examples */}\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <InputCustom\r\n                className=\"w-100\"\r\n                label=\"Câu ví dụ\"\r\n                value={wordValue.examples}\r\n                multiline\r\n                endAdornment={\r\n                  <InformationTooltip title=\"Thêm các câu ví dụ cho từ trên. Đảm bảo có sự xuất hiện của từ đó trong câu. Bạn có thể thêm nhiều câu bằng cách xuống dòng.\" />\r\n                }\r\n                error={Boolean(errors.examples)}\r\n                inputProps={{\r\n                  name: \"examples\",\r\n                  ...register(\"examples\"),\r\n                }}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              {errors.examples && (\r\n                <p className=\"text-error\">{errors.examples?.message}</p>\r\n              )}\r\n            </Grid>\r\n\r\n            {/* synonyms */}\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <InputCustom\r\n                className=\"w-100\"\r\n                label=\"Các từ đồng nghĩa\"\r\n                multiline\r\n                value={wordValue.synonyms}\r\n                error={Boolean(errors.synonyms)}\r\n                inputProps={{\r\n                  name: \"synonyms\",\r\n                  ...register(\"synonyms\"),\r\n                }}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.synonyms && (\r\n                <p className=\"text-error\">{errors.synonyms?.message}</p>\r\n              )}\r\n            </Grid>\r\n\r\n            {/* antonyms */}\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <InputCustom\r\n                className=\"w-100\"\r\n                label=\"Các từ trái nghĩa\"\r\n                multiline\r\n                value={wordValue.antonyms}\r\n                error={Boolean(errors.antonyms)}\r\n                inputProps={{\r\n                  name: \"antonyms\",\r\n                  ...register(\"antonyms\"),\r\n                }}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.antonyms && (\r\n                <p className=\"text-error\">{errors.antonyms?.message}</p>\r\n              )}\r\n            </Grid>\r\n\r\n            {/* note */}\r\n            <Grid item xs={12} md={6} lg={4}>\r\n              <InputCustom\r\n                className=\"w-100\"\r\n                label=\"Ghi chú\"\r\n                multiline\r\n                value={wordValue.note}\r\n                endAdornment={\r\n                  <InformationTooltip title=\"Nhập thêm ghi chú mà bạn muốn cho từ. Thêm nhiều dòng bằng cách xuống dòng.\" />\r\n                }\r\n                error={Boolean(errors.note)}\r\n                inputProps={{\r\n                  name: \"note\",\r\n                  ...register(\"note\"),\r\n                }}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.note && (\r\n                <p className=\"text-error\">{errors.note?.message}</p>\r\n              )}\r\n            </Grid>\r\n\r\n            {/* word topics */}\r\n            <TopicSelect\r\n              onChange={(topicList) => (topics.current = topicList)}\r\n              buttonTitle=\"Chọn chủ đề\"\r\n              buttonWrapper={ButtonWrapper}\r\n              tagsWrapper={TagsWrapper}\r\n            />\r\n          </Grid>\r\n\r\n          <div className=\"english-break\"></div>\r\n          {/* button group */}\r\n          <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\r\n            <Button\r\n              className={`${classes.btn} ${classes.btnReset}`}\r\n              color=\"secondary\"\r\n              endIcon={<ResetIcon />}\r\n              variant=\"outlined\"\r\n              // disabled={}\r\n              onClick={() => handleClickGoBack()}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              className={`${classes.btn} _btn _btn-primary`}\r\n              disabled={submitting}\r\n              endIcon={\r\n                submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\r\n              }\r\n              variant=\"contained\"\r\n              onClick={() => onSubmit()}\r\n            >\r\n              Sửa từ\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nEditWord.propTypes = {\r\n  onSubmitForm: PropTypes.func,\r\n  submitting: PropTypes.bool,\r\n};\r\n\r\nEditWord.defaultProps = {\r\n  onSubmitForm: function () {},\r\n  submitting: false,\r\n};\r\n\r\nexport default EditWord;\r\n","import React from \"react\";\r\nimport EditWord from \"./../components/WordAdmin/EditWord\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    margin: \"3.2rem 0\",\r\n  },\r\n}));\r\nfunction EditWordPage() {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className=\"container\">\r\n      <div className={classes.root}>\r\n        <div className=\"ani-fade\">\r\n          <EditWord />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditWordPage;\r\n"],"sourceRoot":""}