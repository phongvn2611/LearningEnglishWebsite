{"version":3,"sources":["../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Edit.js","apis/questionApi.js","../node_modules/@material-ui/icons/Check.js","apis/quizApi.js","redux/constants/questionConstant.js","pages/QuizDetail.js","redux/actions/questionAction.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","URL","questionApi","getQuestion","id","axios","get","getQuestionByQuiz","token","postQuestion","question","post","putQuestion","put","deleteQuestionByQuiz","delete","headers","Authorization","deleteQuestion","quizApi","getQuiz","getQuizByListen","getAllQuiz","postQuizByListen","deleteQuizByListen","deleteQuiz","getAllListenAndGrammar","QUESTION_CONSTANT","GET_QUESTION","GET_QUESTION_BY_QUIZ","CREATE_QUESTION","EDIT_QUESTION","DELETE_QUESTION_BY_QUIZ","DELETE_QUESTION","SET_QUESTION_LOADING","SET_QUESTION_ERROR","useStyle","makeStyles","theme","dictionaryRoot","QuizDetailPage","useTitle","classes","history","useHistory","dispatch","useDispatch","useParams","useState","quiz","setQuiz","quizID","settQuizID","questions","setQuestions","useEffect","a","apiRes","data","_id","deleteHandler","window","confirm","response","status","type","payload","message","setMessage","location","reload","handleAddQuiz","className","root","onClick","push","map","index","Typography","variant","Content","Answers","answer","content","isCorrect","Button","color"],"mappings":"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","file":"static/js/25.5b7a2633.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import axios from \"axios\";\r\nconst URL = `/api/question`;\r\n\r\nconst questionApi = {\r\n  getQuestion: (id) => {\r\n    return axios.get(`${URL}/get-question-by-id/${id}`)\r\n  },\r\n\r\n  getQuestionByQuiz: (id, token) => {\r\n    return axios.get(`${URL}/get-question-by-quiz/${id}`)\r\n  },\r\n\r\n  postQuestion: (id, question) => {\r\n    return axios.post(`${URL}/post-question-by-quiz/${id}`, {...question})\r\n  },\r\n\r\n  putQuestion: (id, question) => {\r\n    return axios.put(`${URL}/put-question/${id}`, {...question})\r\n  },\r\n\r\n  deleteQuestionByQuiz: (id, token) => {\r\n    return axios.delete(`${URL}/delete-question-by-quiz/${id}`,{\r\n      headers: {Authorization: token}\r\n    })\r\n  },\r\n\r\n  deleteQuestion: (id) => {\r\n    return axios.delete(`${URL}/delete-question-by-id/${id}`)\r\n  },\r\n}\r\n\r\nexport default questionApi;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","import axios from \"axios\";\r\nconst URL = `/api/quiz`;\r\n\r\nconst quizApi = {\r\n  getQuiz: (id, token) => {\r\n    return axios.get(`${URL}/get-quiz-by-id/${id}`, {\r\n      headers: { Authorization: token },\r\n    });\r\n  },\r\n\r\n  getQuizByListen: (id) => {\r\n    return axios.get(`${URL}/get-quiz-by-listen/${id}`);\r\n  },\r\n  getAllQuiz: (token) => {\r\n    return axios.get(`${URL}/get-all-quiz`, {\r\n      headers: { Authorization: token },\r\n    });\r\n  },\r\n\r\n  postQuizByListen: (id) => {\r\n    return axios.post(`${URL}/post-quiz-by-listen/${id}`);\r\n  },\r\n\r\n  deleteQuizByListen: (id, token) => {\r\n    return axios.delete(`${URL}/delete-quiz-by-listen/${id}`, {\r\n      headers: { Authorization: token },\r\n    });\r\n  },\r\n\r\n  deleteQuiz: (id, token) => {\r\n    return axios.delete(`${URL}/delete-quiz-by-id/${id}`, {\r\n      headers: { Authorization: token },\r\n    });\r\n  },\r\n\r\n  getAllListenAndGrammar: () => {\r\n    return axios.get(`${URL}/get-all-listen-grammar`);\r\n  },\r\n};\r\n\r\nexport default quizApi;\r\n","const QUESTION_CONSTANT = {\r\n    GET_QUESTION: 'GET_QUESTION',\r\n    GET_QUESTION_BY_QUIZ: 'GET_QUESTION_BY_QUIZ',\r\n    CREATE_QUESTION: \"CREATE_QUESTION\",\r\n    EDIT_QUESTION: \"EDIT_QUESTION\",\r\n    DELETE_QUESTION_BY_QUIZ: \"DELETE_QUESTION_BY_QUIZ\",\r\n    DELETE_QUESTION: \"DELETE_QUESTION\",\r\n    SET_QUESTION_LOADING: \"SET_QUESTION_LOADING\",\r\n    SET_QUESTION_ERROR: \"SET_QUESTION_ERROR\",\r\n\r\n  }\r\n  \r\n  export default QUESTION_CONSTANT;\r\n  ","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport quizApi from \"apis/quizApi\";\r\nimport questionApi from \"apis/questionApi\";\r\nimport { dictionaryRoot } from \"../components/UI/style\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMessage } from \"redux/actions/messageAction\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport useTitle from 'hooks/useTitle';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nimport { deleteQuestion } from \"redux/actions/questionAction\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  ...dictionaryRoot(theme),\r\n}));\r\n\r\nexport default function QuizDetailPage() {\r\n\r\n  useTitle('Quiz detail');\r\n\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [quizID, settQuizID] = useState(null);\r\n  const [questions, setQuestions] = useState(null);\r\n  useEffect(() => {\r\n    (async function () {\r\n      const apiRes = await quizApi.getQuizByListen(id);\r\n      setQuiz(apiRes.data);\r\n      settQuizID(apiRes.data ? apiRes.data._id : null);\r\n    })();\r\n    return () => {};\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      if (quizID === null) {\r\n        return;\r\n      }\r\n      const apiRes = await questionApi.getQuestionByQuiz(quizID);\r\n      setQuestions(apiRes.data.questions);\r\n    })();\r\n    return () => {};\r\n  }, [quizID]);\r\n\r\n  const deleteHandler = (id) => {\r\n    try{\r\n    if (window.confirm('Bạn chắc chắn muốn xóa câu hỏi này?')) {\r\n     dispatch(deleteQuestion(id))\r\n       dispatch(setMessage(\"Delete successfully\", \"success\"));\r\n        window.location.reload();\r\n      }\r\n    }\r\n    catch {\r\n\r\n      dispatch(setMessage(\"Không thể xóa câu hỏi\", \"error\"));\r\n    }\r\n  };\r\n\r\n  const handleAddQuiz = async () => {\r\n    try {\r\n      const apiRes = await quizApi.postQuizByListen(id);\r\n      if (apiRes) {\r\n        dispatch(setMessage(\"Create quiz successfully\", \"success\"));\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      dispatch(setMessage(error.response.data.message));\r\n    }\r\n  };\r\n  return (\r\n    <div className={`${classes.root} english-container`}>\r\n      <div className=\"flex-center-between\">\r\n        <h1 className=\"english-title\">Quiz</h1>\r\n        {quiz && (\r\n          <AddIcon\r\n            className=\"english-setting-icon mr-5\"\r\n            onClick={() => history.push(`/admin/quiz/add/${id}/${quizID}`)}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"english-break\"></div>\r\n      {quiz ? (\r\n        questions ? (\r\n          questions.map((question, index) => (\r\n            <>  <div className={`${classes.root} flex-center-between`}>\r\n            <div key={index} className=\"mb-6\">\r\n              <Typography variant=\"h5\">{question.Content}</Typography>\r\n              {question.Answers.map((answer, index) => (\r\n                <div key={index} className=\"d-flex\">\r\n                  <Typography variant=\"body2\" className=\"mb-2\">\r\n                    {answer.content}\r\n                  </Typography>\r\n                  {answer.isCorrect && <CheckIcon className=\"ml-3\" />}\r\n                </div>))}\r\n              \r\n            </div>\r\n           \r\n            <div className=\"flex-center--ver\">\r\n                <div className=\"mr-5\">\r\n                  <EditIcon className=\"english-setting-icon\"\r\n                    onClick={() => history.push(`/admin/quiz/edit/${id}/${question._id}`)} \r\n                  />\r\n                </div>\r\n                <DeleteIcon className=\"english-setting-icon\"\r\n                  onClick={() => deleteHandler(question._id)} \r\n                  />\r\n\r\n              </div>\r\n              </div></>\r\n           \r\n          ))\r\n        ) : (\r\n          <Typography className=\"mt-5\" variant=\"h5\">\r\n            Chưa có câu hỏi nào trong quiz\r\n          </Typography>\r\n        )\r\n      ) : (\r\n        <div>\r\n          <Typography className=\"mt-5 mb-5\" variant=\"h5\">\r\n            Bài nghe chưa có quiz\r\n          </Typography>\r\n          <Button className=\"_btn _btn-primary\" onClick={handleAddQuiz}>\r\n            Thêm quiz\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n<Button color='primary' onClick={() => history.push(\"/admin/quiz\")}>GO BACK</Button>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import questionApi from \"./../../apis/questionApi\";\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport QUESTION_CONSTANT from \"../constants/questionConstant\";\r\n\r\nexport const getQuestion = (id) => {\r\n    return async (dispatch, getState) => {\r\n        try { \r\n          const {\r\n            authReducer: { user },\r\n          } = getState();\r\n\r\n          const response = await questionApi.getQuestion(id, user.access_token);\r\n          if(response.status===200){\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.GET_QUESTION,\r\n              payload: response.data.question,\r\n            })\r\n          }\r\n          else\r\n          {\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.SET_QUESTION_ERROR,\r\n              payload: response.data.message,\r\n            })\r\n          }\r\n        } catch (error) {\r\n          dispatch({ type: QUESTION_CONSTANT.SET_QUESTION_ERROR, payload: error.message})\r\n\r\n        }\r\n      }        \r\n    };\r\n\r\nexport const getQuestionByQuiz = (id) => {\r\n    return async (dispatch, getState) => {\r\n        try { \r\n          const {\r\n            authReducer: { user },\r\n          } = getState();\r\n\r\n          const response = await questionApi.getQuestionByQuiz(id, user.access_token);\r\n          if(response.status===200){\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.GET_QUESTION_BY_QUIZ,\r\n              payload: response.data.questions,\r\n            })\r\n          }\r\n          else\r\n          {\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.SET_QUESTION_ERROR,\r\n              payload: response.data.message,\r\n            })\r\n          }\r\n        } catch (error) {\r\n          dispatch({ type: QUESTION_CONSTANT.SET_QUESTION_ERROR, payload: error.message})\r\n        }\r\n      }\r\n    };\r\n\r\nexport const postQuestionByQuiz = (id, formData) => {\r\n    return async (dispatch, getState) => {\r\n        try { \r\n          const {\r\n            authReducer: { user },\r\n          } = getState();\r\n\r\n          const response = await questionApi.postQuestion(id, formData, user.access_token);\r\n          if(response.status===200){\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.CREATE_QUESTION,\r\n              payload: response.data.question,\r\n            })\r\n          }\r\n          else\r\n          {\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.SET_QUESTION_ERROR,\r\n              payload: response.data.message,\r\n            })\r\n          }\r\n        } catch (error) {\r\n          dispatch({ type: QUESTION_CONSTANT.SET_QUESTION_ERROR, payload: error.message})\r\n        }\r\n      }\r\n    };\r\n\r\nexport const putQuestion = (id, formData) => {\r\n    return async (dispatch, getState) => {\r\n        try { \r\n          const {\r\n            authReducer: { user },\r\n          } = getState();\r\n\r\n          const response = await questionApi.putQuestion(id, formData, user.access_token);\r\n          if(response.status===200){\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.EDIT_QUESTION,\r\n              payload: response.data.question,\r\n            })\r\n          }\r\n          else\r\n          {\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.SET_QUESTION_ERROR,\r\n              payload: response.data.message,\r\n            })\r\n          }\r\n        } catch (error) {\r\n          dispatch({ type: QUESTION_CONSTANT.SET_QUESTION_ERROR, payload: error.message})\r\n        }\r\n      }\r\n    };\r\n\r\nexport const deleteQuestion = (id) => {\r\n    return async (dispatch) => {\r\n        try { \r\n      \r\n          const response = await questionApi.deleteQuestion(id);\r\n          if(response.status===200){\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.DELETE_QUESTION,\r\n              payload: id,\r\n            })\r\n          }\r\n          else\r\n          {\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.SET_QUESTION_ERROR,\r\n              payload: response.data.message,\r\n            })\r\n          }\r\n        } catch (error) {\r\n          dispatch({ type: QUESTION_CONSTANT.SET_QUESTION_ERROR, payload: error.message})\r\n\r\n        }\r\n      }\r\n            };\r\n\r\nexport const deleteQuestionByQuiz = (id, formData) => {\r\n    return async (dispatch, getState) => {\r\n        try { \r\n          const {\r\n            authReducer: { user },\r\n          } = getState();\r\n\r\n          const response = await questionApi.deleteQuestionByQuiz(id, formData, user.access_token);\r\n          if(response.status===200){\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.DELETE_QUESTION_BY_QUIZ,\r\n              payload: id,\r\n            })\r\n          }\r\n          else\r\n          {\r\n            dispatch({\r\n              type: QUESTION_CONSTANT.SET_QUESTION_ERROR,\r\n              payload: response.data.message,\r\n            })\r\n          }\r\n        } catch (error) {\r\n          dispatch({ type: QUESTION_CONSTANT.SET_QUESTION_ERROR, payload: error.message})\r\n        }\r\n      }\r\n    \r\n  };\r\n"],"sourceRoot":""}