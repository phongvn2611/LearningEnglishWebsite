{"version":3,"sources":["pages/Login.js"],"names":["schema","yup","shape","email","required","password","min","LoginPage","useTitle","useCloseNavigation","useSelector","state","authReducer","isAuth","role","useState","loading","setLoading","dispatch","useDispatch","classes","useHistory","makeStyles","formStyle","visiblePw","setVisiblePw","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","user","setUser","handleChange","e","target","name","value","handleLogin","a","userApi","login","res","setMessage","data","message","setTimeout","window","location","replace","UX","DELAY_TIME","response","className","root","onSubmit","autoComplete","labelIcon","src","alt","title","label","size","placeholder","onChange","error","Boolean","inputProps","autoFocus","type","endAdornment","icon","onClick","forgotPw","to","ROUTES","FORGOT_PASSWORD","variant","color","disabled","endIcon","REGISTER"],"mappings":"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","file":"static/js/55.b64c1130.chunk.js","sourcesContent":["import \"./style/login-signup.scss\";\r\nimport { ROUTES } from \"../constants\";\r\nimport useTitle from \"./../hooks/useTitle\";\r\nimport useCloseNavigation from \"./../hooks/useCloseNavigation\";\r\nimport React, { useState } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport InputCustom from \"../components/UI/InputCustom\";\r\nimport { formStyle } from \"../components/UI/style\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport userApi from \"../apis/userApi\";\r\nimport { UX } from \"../constants\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\nimport { setMessage } from \"./../redux/actions/messageAction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string().required(\"Email đang trống\").email(\"Email không hợp lệ\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Mật khẩu đang trống\")\r\n    .min(6, `Mật khẩu tối thiểu 6 ký tự`),\r\n});\r\n\r\nfunction LoginPage() {\r\n  useTitle(\"Login\");\r\n  useCloseNavigation();\r\n\r\n  const { isAuth, role } = useSelector((state) => state.authReducer);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = makeStyles(formStyle)();\r\n  const [visiblePw, setVisiblePw] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await userApi.login(user.email, user.password);\r\n      dispatch(setMessage(res.data.message, \"success\"));\r\n      setTimeout(() => {\r\n        window.location.replace(\"/home\");\r\n      }, UX.DELAY_TIME);\r\n    } catch (error) {\r\n      dispatch(setMessage(error.response?.data?.message, \"error\"));\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pos-rel w-100vw h-100vh\">\r\n      <div className=\"transform-center\">\r\n        <form\r\n          className={`${classes.root} flex-col`}\r\n          onSubmit={handleSubmit(handleLogin)}\r\n          autoComplete=\"off\"\r\n        >\r\n          <div className=\"flex-col\">\r\n            <div className=\"t-center mt-5\">\r\n              <img\r\n                className={classes.labelIcon}\r\n                src=\"https://res.cloudinary.com/phongvn2611/image/upload/v1637079637/english/avatar/logo-tiny_seqkri.png\"\r\n                alt=\"logo\"\r\n              />\r\n            </div>\r\n            <h1 className={`${classes.title} t-center`}>Đăng nhập</h1>\r\n          </div>\r\n\r\n          <div className=\"flex-col\">\r\n            <InputCustom\r\n              label=\"Email\"\r\n              size=\"small\"\r\n              placeholder=\"Nhập email\"\r\n              onChange={handleChange}\r\n              error={Boolean(errors.email)}\r\n              inputProps={{\r\n                name: \"email\",\r\n                autoFocus: true,\r\n                ...register(\"email\"),\r\n              }}\r\n            />\r\n            {errors.email && (\r\n              <p className=\"text-error\">{errors.email?.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex-col\">\r\n            <InputCustom\r\n              label=\"Mật khẩu\"\r\n              size=\"small\"\r\n              placeholder=\"Nhập mật khẩu\"\r\n              onChange={handleChange}\r\n              error={Boolean(errors.password)}\r\n              inputProps={{\r\n                name: \"password\",\r\n                type: visiblePw ? \"text\" : \"password\",\r\n                ...register(\"password\"),\r\n              }}\r\n              endAdornment={\r\n                visiblePw ? (\r\n                  <VisibilityIcon\r\n                    className={`${classes.icon} ${classes.visiblePw}`}\r\n                    onClick={() => setVisiblePw(false)}\r\n                  />\r\n                ) : (\r\n                  <VisibilityOffIcon\r\n                    className={classes.icon}\r\n                    onClick={() => setVisiblePw(true)}\r\n                  />\r\n                )\r\n              }\r\n            />\r\n            {errors.password && (\r\n              <p className=\"text-error\">{errors.password?.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          <Link className={classes.forgotPw} to={ROUTES.FORGOT_PASSWORD}>\r\n            Quên mật khẩu ?\r\n          </Link>\r\n\r\n          <Button\r\n            className=\"_btn _btn-primary\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={loading}\r\n            endIcon={loading && <LoopIcon className=\"ani-spin\" />}\r\n            size=\"large\"\r\n          >\r\n            Đăng nhập\r\n          </Button>\r\n\r\n          <div className=\"or-option w-100 t-center\">HOẶC</div>\r\n        </form>\r\n\r\n        <div className=\"has-account\">\r\n          Bạn chưa có tài khoản?&nbsp;\r\n          <Link to={ROUTES.REGISTER} className=\"account-link\">\r\n            Đăng ký\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"sourceRoot":""}