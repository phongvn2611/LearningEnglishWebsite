{"version":3,"sources":["pages/Register.js"],"names":["schema","yup","shape","email","trim","required","name","matches","password","min","confirmPassword","oneOf","RegisterPage","useTitle","useCloseNavigation","classes","makeStyles","formStyle","useState","visiblePw","setVisiblePw","visibleConfirmPw","setVisibleConfirmPw","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","dispatch","useDispatch","history","useHistory","loading","setLoading","user","setUser","handleChange","e","target","value","handleRegister","a","userApi","res","setMessage","data","message","replace","response","className","root","onSubmit","autoComplete","labelIcon","src","alt","title","label","size","placeholder","error","Boolean","inputProps","autoFocus","onChange","type","endAdornment","icon","onClick","variant","color","disabled","endIcon","to","ROUTES","LOGIN"],"mappings":"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","file":"static/js/50.b1529bfe.chunk.js","sourcesContent":["import { ROUTES } from \"../constants\";\r\nimport useCloseNavigation from \"../hooks/useCloseNavigation\";\r\nimport useTitle from \"../hooks/useTitle\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./style/login-signup.scss\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport InputCustom from \"../components/UI/InputCustom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { formStyle } from \"../components/UI/style\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport userApi from \"./../apis/userApi\";\r\nimport { setMessage } from \"./../redux/actions/messageAction\";\r\n\r\n\r\nconst nameRegex = /^[^\\d~`!@#$%^&*\\(\\)\\\\\\|\\.,\\?\\/\\-\\+\\=\\_]+$/gi;\r\nconst schema = yup.object().shape({\r\n  email: yup.string().trim().required(\"Nhập email\").email(\"Email không hợp lệ\"),\r\n  name: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"Nhập họ tên\")\r\n    .matches(nameRegex, \"Họ tên không chứa số và ký tự đặc biệt\"),\r\n  password: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"Nhập mật khẩu\")\r\n    .min(6, `Mật khẩu ít nhất 6 ký tự`),\r\n  confirmPassword: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"Nhập xác nhận mật khẩu\")\r\n    .min(6, `Xác nhận mật khẩu ít nhất 6 ký tự`)\r\n    .oneOf([yup.ref(\"password\")], \"Nhập xác nhận mật khẩu không khớp\"),\r\n});\r\n\r\nfunction RegisterPage() {\r\n  useTitle(\"Register\");\r\n  useCloseNavigation();\r\n\r\n  const classes = makeStyles(formStyle)();\r\n\r\n  const [visiblePw, setVisiblePw] = useState(false);\r\n  const [visibleConfirmPw, setVisibleConfirmPw] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await userApi.register(user.name, user.email, user.password);\r\n      if (res) {\r\n        dispatch(setMessage(res.data.message, \"success\"));\r\n        history.replace(\"/login\");\r\n      }\r\n    } catch (error) {\r\n      dispatch(setMessage(error.response.data.message, \"error\"));\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pos-rel w-100vw h-100vh\">\r\n      <div className=\"transform-center\">\r\n        <form\r\n          className={`${classes.root} flex-col`}\r\n          onSubmit={handleSubmit(handleRegister)}\r\n          autoComplete=\"off\"\r\n        >\r\n          <div className=\"flex-col\">\r\n            <div className=\"t-center mt-5\">\r\n              <img\r\n                className={classes.labelIcon}\r\n                src=\"https://res.cloudinary.com/phongvn2611/image/upload/v1637079637/english/avatar/logo-tiny_seqkri.png\"\r\n                alt=\"logo\"\r\n              />\r\n            </div>\r\n            <h1 className={`${classes.title} t-center`}>Đăng ký</h1>\r\n          </div>\r\n\r\n          <div className=\"flex-col\">\r\n            <InputCustom\r\n              label=\"Email\"\r\n              size=\"small\"\r\n              placeholder=\"Nhập email\"\r\n              error={Boolean(errors.email)}\r\n              inputProps={{\r\n                name: \"email\",\r\n                autoFocus: true,\r\n                ...register(\"email\"),\r\n              }}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.email && (\r\n              <p className=\"text-error\">{errors.email?.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex-col\">\r\n            <InputCustom\r\n              label=\"Họ tên\"\r\n              size=\"small\"\r\n              placeholder=\"Nhập họ tên\"\r\n              error={Boolean(errors.name)}\r\n              inputProps={{\r\n                name: \"name\",\r\n                ...register(\"name\"),\r\n              }}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.name && (\r\n              <p className=\"text-error\">{errors.name?.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex-col\">\r\n            <InputCustom\r\n              label=\"Mật khẩu\"\r\n              size=\"small\"\r\n              placeholder=\"Nhập mật khẩu\"\r\n              error={Boolean(errors.password)}\r\n              inputProps={{\r\n                name: \"password\",\r\n                type: visiblePw ? \"text\" : \"password\",\r\n                ...register(\"password\"),\r\n              }}\r\n              onChange={handleChange}\r\n              endAdornment={\r\n                visiblePw ? (\r\n                  <VisibilityIcon\r\n                    className={`${classes.icon} ${classes.visiblePw}`}\r\n                    onClick={() => setVisiblePw(false)}\r\n                  />\r\n                ) : (\r\n                  <VisibilityOffIcon\r\n                    className={classes.icon}\r\n                    onClick={() => setVisiblePw(true)}\r\n                  />\r\n                )\r\n              }\r\n            />\r\n            {errors.password && (\r\n              <p className=\"text-error\">{errors.password?.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex-col\">\r\n            <InputCustom\r\n              label=\"Xác nhận mật khẩu\"\r\n              size=\"small\"\r\n              placeholder=\"Nhập lại mật khẩu\"\r\n              error={Boolean(errors.confirmPassword)}\r\n              inputProps={{\r\n                name: \"confirmPassword\",\r\n                type: visibleConfirmPw ? \"text\" : \"password\",\r\n                ...register(\"confirmPassword\"),\r\n              }}\r\n              onChange={handleChange}\r\n              endAdornment={\r\n                visibleConfirmPw ? (\r\n                  <VisibilityIcon\r\n                    className={`${classes.icon} ${classes.visibleConfirmPw}`}\r\n                    onClick={() => setVisibleConfirmPw(false)}\r\n                  />\r\n                ) : (\r\n                  <VisibilityOffIcon\r\n                    className={classes.icon}\r\n                    onClick={() => setVisibleConfirmPw(true)}\r\n                  />\r\n                )\r\n              }\r\n            />\r\n            {errors.confirmPassword && (\r\n              <p className=\"text-error\">{errors.confirmPassword?.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          <Button\r\n            className=\"_btn _btn-primary\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            disabled={loading}\r\n            endIcon={loading && <LoopIcon className=\"ani-spin\" />}\r\n          >\r\n            Đăng ký\r\n          </Button>\r\n\r\n          <div className=\"or-option w-100 t-center\">HOẶC</div>\r\n        </form>\r\n\r\n        <div className=\"has-account\">\r\n          Bạn đã có tài khoản?&nbsp;\r\n          <Link to={ROUTES.LOGIN} className=\"account-link\">\r\n            Đăng nhập\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n"],"sourceRoot":""}