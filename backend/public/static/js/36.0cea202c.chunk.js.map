{"version":3,"sources":["apis/grammarApi.js","pages/GrammarByLevel.js"],"names":["URL","grammarApi","getGrammar","id","axios","get","getGrammarById","getGrammarByLevel","level","token","headers","Authorization","getGrammarLevels","getAllGrammar","postGrammar","formData","post","header","putGrammar","put","params","deleteGrammar","delete","searchGrammar","title","useStyle","makeStyles","mobilelist","height","floatleft","float","margin","padding","display","fontSize","fontWeight","color","tldetail","textlimit","overflow","textOverflow","whiteSpace","width","GrammarByLevelPage","useTitle","useState","list","setList","classes","history","useHistory","useParams","useEffect","a","apiRes","status","console","log","data","grammars","className","variant","align","map","item","src","image","Image","cloudinaryImgOptimize","DEFAULTS","IMAGE_SRC","onClick","_id","push","href","Title","Content"],"mappings":"mIACMA,EAAG,eAEHC,EAAa,CACjBC,WAAY,SAACC,GACX,OAAOC,IAAMC,IAAN,UAAaL,EAAb,wBAAgCG,KAGzCG,eAAgB,SAACH,GACf,OAAOC,IAAMC,IAAN,UAAaL,EAAb,8BAAsCG,KAG/CI,kBAAmB,SAACC,EAAOC,GACzB,OAAOL,IAAMC,IAAN,UAAaL,EAAb,iCAAyCQ,GAAS,CACvDE,QAAS,CAACC,cAAeF,MAI7BG,iBAAkB,SAACH,GACjB,OAAOL,IAAMC,IAAN,UAAaL,EAAb,uBAAuC,CAC5CU,QAAS,CAACC,cAAeF,MAI7BI,cAAe,SAACJ,GACd,OAAOL,IAAMC,IAAN,UAAaL,EAAb,oBAAoC,CACzCU,QAAS,CAACC,cAAeF,MAI7BK,YAAa,SAACC,GACZ,OAAOX,IAAMY,KAAN,UAAchB,EAAd,gCAAsCe,GAC7C,CACEE,OAAQ,CAAE,eAAgB,0BAI9BC,WAAY,SAACf,EAAIY,GACf,OAAOX,IAAMe,IAAN,UAAanB,EAAb,wBAAgCG,GAAhC,eAA2CY,GAClD,CACEK,OAAQ,CAAEjB,MACVc,OAAQ,CAAE,eAAgB,0BAI9BI,cAAe,SAAClB,GACd,OAAOC,IAAMkB,OAAN,UAAgBtB,EAAhB,2BAAsCG,KAG/CoB,cAAe,SAACC,GACd,OAAOpB,IAAMC,IAAN,UAAaL,EAAb,mBAAmC,CAACoB,OAAQ,CAACI,aAIzCvB,O,qJC3CTwB,EAAWC,aAAW,iBAAO,CACjCC,WAAa,CACXC,OAAQ,SAGZC,UAAW,CACTC,MAAO,OACPC,OAAQ,kBACRC,QAAS,OAEXR,MAAO,CACLS,QAAS,eACTC,SAAU,SACVC,WAAY,IACZC,MAAO,OACPL,OAAQ,sBAEVM,SAAU,CACRH,SAAU,SACVC,WAAW,IACXC,MAAO,SAETE,UAAW,CACPC,SAAU,SACVC,aAAc,WACdC,WAAY,SACdC,MAAO,aA6EMC,UAxEf,WACEC,YAAS,WACT,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAASvB,IACTwB,EAAUC,cAET1C,EAAQ2C,cAAY3C,MA8B3B,OA5BC4C,qBAAU,WAWV,OAVA,sBAAC,4BAAAC,EAAA,+EAEwBpD,IAAWM,kBAAkBC,GAFrD,OAGyB,OADhB8C,EAFT,QAGcC,SACPC,QAAQC,IAAIH,EAAOI,MACrBX,EAAQO,EAAOI,KAAKC,WALzB,sGAAD,GAUO,eACN,IAiBA,sBAAKC,UAAU,YAAf,UAEI,eAAC,IAAD,CAAYC,QAAQ,KAAKC,MAAM,SAA/B,mBACctD,KAGfsC,GACDA,EAAKiB,KAAI,SAACC,GAAD,OAET,qBAAKJ,UAAWZ,EAAQrB,WAAxB,SACA,gCACE,qBAAKiC,UAAWZ,EAAQnB,UAAxB,SACE,4BACE,qBAAKD,OAAO,OAAOc,MAAM,OAAOuB,KA5BzBC,EA4BuCF,EAAKG,MA3B5CC,YAAuBF,GAAgBG,IAASC,UAC1D,IACA,KACA,GACA,IAuB8DC,QAAS,kBAlB9DpE,EAkB6E6D,EAAKQ,SAjBhGvB,EAAQwB,KAAR,2BAAiCtE,IADpB,IAACA,SAqBR,mBAAGyD,UAAWZ,EAAQxB,MAAOkD,KAAI,2BAAsBV,EAAKQ,KAA5D,SAAmE,uCAAUR,EAAKW,WAClF,uBAEA,qBAAKf,UAAWZ,EAAQV,UAAxB,SACA,sBAAMsB,UAAWZ,EAAQX,SAAzB,SAAoC2B,EAAKY,iBAnCjC,IAACV","file":"static/js/36.0cea202c.chunk.js","sourcesContent":["import axios from \"axios\";\nconst URL = `/api/grammar`;\n\nconst grammarApi = {\n  getGrammar: (id) => {\n    return axios.get(`${URL}/get-grammar/${id}`)\n  },\n\n  getGrammarById: (id) => {\n    return axios.get(`${URL}/get-grammar-by-id/${id}`)\n  },\n\n  getGrammarByLevel: (level, token) => {\n    return axios.get(`${URL}/get-grammar-by-level/${level}`, {\n      headers: {Authorization: token}\n    })\n  },\n\n  getGrammarLevels: (token) => {\n    return axios.get(`${URL}/get-grammar-levels`, {\n      headers: {Authorization: token}\n    })\n  },\n\n  getAllGrammar: (token) => {\n    return axios.get(`${URL}/get-all-grammar`, {\n      headers: {Authorization: token}\n    })\n  },\n\n  postGrammar: (formData) => {\n    return axios.post(`${URL}/post-grammar`, {...formData},\n    {\n      header: { \"content-type\": \"multipart/form-data\" },\n    })\n  },\n\n  putGrammar: (id, formData) => {\n    return axios.put(`${URL}/put-grammar/${id}`, { ...formData},\n    {\n      params: { id },\n      header: { \"content-type\": \"multipart/form-data\" },\n    });\n  },\n\n  deleteGrammar: (id) => {\n    return axios.delete(`${URL}/delete-grammar/${id}`)\n  },\n\n  searchGrammar: (title) => {\n    return axios.get(`${URL}/search-grammar`, {params: {title}})\n  },\n}\n\nexport default grammarApi;\n","import useTitle from 'hooks/useTitle';\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport React, { useState, useEffect } from 'react';\nimport grammarApi from '../apis/grammarApi';\nimport { useHistory, useParams } from 'react-router';\nimport { cloudinaryImgOptimize } from \"helper\";\nimport { DEFAULTS } from 'constants/index';\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyle = makeStyles(() => ({\n  mobilelist : {\n    height: \"115px\",\n \n},\nfloatleft: {\n  float: \"left\",\n  margin: \"0 10px 10px 0px\",\n  padding: \"2px\",\n},\ntitle: {\n  display: 'inline-block',\n  fontSize: '2.0rem',\n  fontWeight: 400,\n  color: 'blue',\n  margin: '0.8rem 0rem 0rem 0',\n},\ntldetail: {\n  fontSize: '1.5rem',\n  fontWeight:400,\n  color: 'black', \n},\ntextlimit: {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  width: \"500px\",\n}\n\n}));\n\nfunction GrammarByLevelPage() {\n  useTitle('Grammar');\n  const [list, setList] = useState([]);\n  const classes= useStyle();\n  const history = useHistory();\n\n  const  level = useParams().level;\n  \n   useEffect(() => {\n   (async function () {\n     try {\n       const apiRes = await grammarApi.getGrammarByLevel(level);\n       if (apiRes.status === 200) {\n           console.log(apiRes.data)\n         setList(apiRes.data.grammars);\n       }\n     } catch (error) {}\n   })();\n \n   return () => {};\n }, []);\n\n const getImage = (image) =>{\n    const imgSrc = cloudinaryImgOptimize( image ? image : DEFAULTS.IMAGE_SRC,\n         200,\n         200,\n         true,\n         true\n     );\n     return imgSrc;\n}\n\nconst viewDetail=(id)=>{\n    history.push(`/grammar/details/${id}`)\n}\n\n  return (\n    <div className=\"container\">\n\n        <Typography variant=\"h6\" align=\"center\">\n               Level {level}\n        </Typography>\n                \n      {list &&(\n      list.map((item) => \n   \n      <div className={classes.mobilelist} >\n      <div>\n        <div className={classes.floatleft}>\n          <a>\n            <img height=\"80px\" width=\"80px\" src={getImage(item.Image)} onClick={()=>viewDetail(item._id)}/>\n          </a>\n          </div>\n          <a className={classes.title} href={`/grammar/details/${item._id}`}><strong> {item.Title}</strong></a>\n          <br></br>\n          \n          <div className={classes.textlimit}>\n          <span className={classes.tldetail}>{item.Content}</span>\n          </div>\n      \n      </div>\n\n    </div>\n   \n     \n      ))}\n\n     \n    </div>\n  );\n}\n\nexport default GrammarByLevelPage;\n"],"sourceRoot":""}